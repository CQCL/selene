; ModuleID = 'hugr'
source_filename = "hugr"
target datalayout = "e-m:o-i64:64-i128:128-n32:64-S128"
target triple = "aarch64-apple-darwin"

@res_cs.46C3C4B5.0 = private constant [16 x i8] c"\0FUSER:BOOLARR:cs"
@res_is.F21393DB.0 = private constant [15 x i8] c"\0EUSER:INTARR:is"
@res_fs.CBD4AF54.0 = private constant [17 x i8] c"\10USER:FLOATARR:fs"
@"e_Array inde.2A1CB845.0" = private constant [35 x i8] c"\22EXIT:INT:Array index out of bounds"
@"e_Linear arr.8A243695.0" = private constant [48 x i8] c"/EXIT:INT:Linear array element has not been used"
@"e_Linear arr.27F92A51.0" = private constant [52 x i8] c"3EXIT:INT:Linear array element has already been used"
@e_ArrayIter..ED8B8605.0 = private constant [69 x i8] c"DEXIT:INT:ArrayIter._assert_all_used: array element has not been used"
@"e_No more qu.3B2EEBF0.0" = private constant [47 x i8] c".EXIT:INT:No more qubits available to allocate."

define void @__hugr__.main.1() local_unnamed_addr {
alloca_block:
  %0 = call i8* @malloc(i64 1600)
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(1600) %0, i8 0, i64 1600, i1 false)
  %1 = call i8* @malloc(i64 1600)
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 4 dereferenceable(1600) %1, i8 0, i64 1600, i1 false)
  %2 = bitcast i8* %0 to { i1, double }*
  %3 = call i8* @malloc(i64 160)
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 4 dereferenceable(160) %3, i8 0, i64 160, i1 false)
  %4 = bitcast i8* %1 to { i1, i64 }*
  %5 = bitcast i8* %3 to { i1, i64 }*
  br label %loop_body

loop_body:                                        ; preds = %alloca_block, %cond_exit_25
  %"20_2.0" = phi i64 [ %"2.0", %cond_exit_25 ], [ 0, %alloca_block ]
  %"20_0.sroa.0.0" = phi i64 [ %"0.sroa.3.0", %cond_exit_25 ], [ 0, %alloca_block ]
  %6 = icmp slt i64 %"20_0.sroa.0.0", 10
  br i1 %6, label %cond_25_case_1, label %cond_exit_25

cond_25_case_1:                                   ; preds = %loop_body
  %7 = add i64 %"20_0.sroa.0.0", 1
  %8 = add i64 %"20_2.0", 1
  %qalloc.i = call i64 @___qalloc()
  %not_max.not.i = icmp eq i64 %qalloc.i, -1
  br i1 %not_max.not.i, label %id_bb.i, label %reset_bb.i

reset_bb.i:                                       ; preds = %cond_25_case_1
  call void @___reset(i64 %qalloc.i)
  br label %id_bb.i

id_bb.i:                                          ; preds = %reset_bb.i, %cond_25_case_1
  %9 = insertvalue { i1, i64 } { i1 true, i64 poison }, i64 %qalloc.i, 1
  %10 = select i1 %not_max.not.i, { i1, i64 } { i1 false, i64 poison }, { i1, i64 } %9
  %.fca.0.extract.i = extractvalue { i1, i64 } %10, 0
  br i1 %.fca.0.extract.i, label %__hugr__.__tk2_qalloc.391.exit, label %cond_387_case_0.i

cond_387_case_0.i:                                ; preds = %id_bb.i
  call void @panic(i32 1001, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @"e_No more qu.3B2EEBF0.0", i64 0, i64 0))
  unreachable

__hugr__.__tk2_qalloc.391.exit:                   ; preds = %id_bb.i
  %11 = icmp ult i64 %"20_2.0", 10
  br i1 %11, label %12, label %16

12:                                               ; preds = %__hugr__.__tk2_qalloc.391.exit
  %.fca.1.extract.i = extractvalue { i1, i64 } %10, 1
  %"421_05.fca.1.insert.i" = insertvalue { i1, i64 } { i1 true, i64 poison }, i64 %.fca.1.extract.i, 1
  %13 = getelementptr inbounds { i1, i64 }, { i1, i64 }* %5, i64 %"20_2.0"
  %14 = getelementptr inbounds { i1, i64 }, { i1, i64 }* %13, i64 0, i32 0
  %15 = load i1, i1* %14, align 1
  store { i1, i64 } %"421_05.fca.1.insert.i", { i1, i64 }* %13, align 4
  br label %16

16:                                               ; preds = %12, %__hugr__.__tk2_qalloc.391.exit
  %"06.sroa.9.0.i" = phi i1 [ %15, %12 ], [ true, %__hugr__.__tk2_qalloc.391.exit ]
  br i1 %11, label %cond_424_case_1.i, label %cond_424_case_0.i

cond_424_case_0.i:                                ; preds = %16
  call void @panic(i32 1001, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @"e_Array inde.2A1CB845.0", i64 0, i64 0))
  unreachable

cond_424_case_1.i:                                ; preds = %16
  br i1 %"06.sroa.9.0.i", label %cond_434_case_1.i, label %cond_exit_25

cond_434_case_1.i:                                ; preds = %cond_424_case_1.i
  call void @panic(i32 1001, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @"e_Linear arr.8A243695.0", i64 0, i64 0))
  unreachable

cond_exit_25:                                     ; preds = %cond_424_case_1.i, %loop_body
  %"2.0" = phi i64 [ %"20_2.0", %loop_body ], [ %8, %cond_424_case_1.i ]
  %"0.sroa.3.0" = phi i64 [ poison, %loop_body ], [ %7, %cond_424_case_1.i ]
  br i1 %6, label %loop_body, label %loop_out

loop_out:                                         ; preds = %cond_exit_25
  %"133.fca.0.insert" = insertvalue { { i1, i64 }*, i64 } poison, { i1, i64 }* %5, 0
  %"133.fca.1.insert" = insertvalue { { i1, i64 }*, i64 } %"133.fca.0.insert", i64 0, 1
  %17 = load { i1, i64 }, { i1, i64 }* %5, align 4
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 4 dereferenceable(16) %3, i8 0, i64 16, i1 false)
  %.fca.2.0.extract.i = extractvalue { i1, i64 } %17, 0
  %.fca.2.1.extract.i = extractvalue { i1, i64 } %17, 1
  br i1 %.fca.2.0.extract.i, label %"__hugr__.$array.__getitem__.linear.2$$t(qubit)$n(10).444.exit", label %cond_460_case_0.i

cond_460_case_0.i:                                ; preds = %loop_out
  call void @panic(i32 1001, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @"e_Linear arr.27F92A51.0", i64 0, i64 0))
  unreachable

"__hugr__.$array.__getitem__.linear.2$$t(qubit)$n(10).444.exit": ; preds = %loop_out
  call void @___rxy(i64 %.fca.2.1.extract.i, double 0x400921FB54442D18, double 0.000000e+00)
  %"421_05.fca.1.insert.i635" = insertvalue { i1, i64 } { i1 true, i64 poison }, i64 %.fca.2.1.extract.i, 1
  %18 = bitcast i8* %3 to i1*
  %19 = load i1, i1* %18, align 1
  store { i1, i64 } %"421_05.fca.1.insert.i635", { i1, i64 }* %5, align 4
  br i1 %19, label %cond_434_case_1.i638, label %"__hugr__.$array.__setitem__.linear.4$$t(qubit)$n(10).418.exit639"

cond_434_case_1.i638:                             ; preds = %"__hugr__.$array.__getitem__.linear.2$$t(qubit)$n(10).444.exit"
  call void @panic(i32 1001, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @"e_Linear arr.8A243695.0", i64 0, i64 0))
  unreachable

"__hugr__.$array.__setitem__.linear.4$$t(qubit)$n(10).418.exit639": ; preds = %"__hugr__.$array.__getitem__.linear.2$$t(qubit)$n(10).444.exit"
  %20 = getelementptr inbounds i8, i8* %3, i64 32
  %21 = bitcast i8* %20 to { i1, i64 }*
  %22 = load { i1, i64 }, { i1, i64 }* %21, align 4
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 4 dereferenceable(16) %20, i8 0, i64 16, i1 false)
  %.fca.2.0.extract.i640 = extractvalue { i1, i64 } %22, 0
  %.fca.2.1.extract.i641 = extractvalue { i1, i64 } %22, 1
  br i1 %.fca.2.0.extract.i640, label %"__hugr__.$array.__getitem__.linear.2$$t(qubit)$n(10).444.exit645", label %cond_460_case_0.i644

cond_460_case_0.i644:                             ; preds = %"__hugr__.$array.__setitem__.linear.4$$t(qubit)$n(10).418.exit639"
  call void @panic(i32 1001, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @"e_Linear arr.27F92A51.0", i64 0, i64 0))
  unreachable

"__hugr__.$array.__getitem__.linear.2$$t(qubit)$n(10).444.exit645": ; preds = %"__hugr__.$array.__setitem__.linear.4$$t(qubit)$n(10).418.exit639"
  call void @___rxy(i64 %.fca.2.1.extract.i641, double 0x400921FB54442D18, double 0.000000e+00)
  %"421_05.fca.1.insert.i646" = insertvalue { i1, i64 } { i1 true, i64 poison }, i64 %.fca.2.1.extract.i641, 1
  %23 = bitcast i8* %20 to i1*
  %24 = load i1, i1* %23, align 1
  store { i1, i64 } %"421_05.fca.1.insert.i646", { i1, i64 }* %21, align 4
  br i1 %24, label %cond_434_case_1.i651, label %"__hugr__.$array.__setitem__.linear.4$$t(qubit)$n(10).418.exit652"

cond_434_case_1.i651:                             ; preds = %"__hugr__.$array.__getitem__.linear.2$$t(qubit)$n(10).444.exit645"
  call void @panic(i32 1001, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @"e_Linear arr.8A243695.0", i64 0, i64 0))
  unreachable

"__hugr__.$array.__setitem__.linear.4$$t(qubit)$n(10).418.exit652": ; preds = %"__hugr__.$array.__getitem__.linear.2$$t(qubit)$n(10).444.exit645"
  %25 = getelementptr inbounds i8, i8* %3, i64 48
  %26 = bitcast i8* %25 to { i1, i64 }*
  %27 = load { i1, i64 }, { i1, i64 }* %26, align 4
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 4 dereferenceable(16) %25, i8 0, i64 16, i1 false)
  %.fca.2.0.extract.i655 = extractvalue { i1, i64 } %27, 0
  %.fca.2.1.extract.i656 = extractvalue { i1, i64 } %27, 1
  br i1 %.fca.2.0.extract.i655, label %"__hugr__.$array.__getitem__.linear.2$$t(qubit)$n(10).444.exit660", label %cond_460_case_0.i659

cond_460_case_0.i659:                             ; preds = %"__hugr__.$array.__setitem__.linear.4$$t(qubit)$n(10).418.exit652"
  call void @panic(i32 1001, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @"e_Linear arr.27F92A51.0", i64 0, i64 0))
  unreachable

"__hugr__.$array.__getitem__.linear.2$$t(qubit)$n(10).444.exit660": ; preds = %"__hugr__.$array.__setitem__.linear.4$$t(qubit)$n(10).418.exit652"
  call void @___rxy(i64 %.fca.2.1.extract.i656, double 0x400921FB54442D18, double 0.000000e+00)
  %"421_05.fca.1.insert.i661" = insertvalue { i1, i64 } { i1 true, i64 poison }, i64 %.fca.2.1.extract.i656, 1
  %28 = bitcast i8* %25 to i1*
  %29 = load i1, i1* %28, align 1
  store { i1, i64 } %"421_05.fca.1.insert.i661", { i1, i64 }* %26, align 4
  br i1 %29, label %cond_434_case_1.i666, label %"__hugr__.$array.__setitem__.linear.4$$t(qubit)$n(10).418.exit667"

cond_434_case_1.i666:                             ; preds = %"__hugr__.$array.__getitem__.linear.2$$t(qubit)$n(10).444.exit660"
  call void @panic(i32 1001, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @"e_Linear arr.8A243695.0", i64 0, i64 0))
  unreachable

"__hugr__.$array.__setitem__.linear.4$$t(qubit)$n(10).418.exit667": ; preds = %"__hugr__.$array.__getitem__.linear.2$$t(qubit)$n(10).444.exit660"
  %30 = getelementptr inbounds i8, i8* %3, i64 144
  %31 = bitcast i8* %30 to { i1, i64 }*
  %32 = load { i1, i64 }, { i1, i64 }* %31, align 4
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 4 dereferenceable(16) %30, i8 0, i64 16, i1 false)
  %.fca.2.0.extract.i670 = extractvalue { i1, i64 } %32, 0
  %.fca.2.1.extract.i671 = extractvalue { i1, i64 } %32, 1
  br i1 %.fca.2.0.extract.i670, label %"__hugr__.$array.__getitem__.linear.2$$t(qubit)$n(10).444.exit675", label %cond_460_case_0.i674

cond_460_case_0.i674:                             ; preds = %"__hugr__.$array.__setitem__.linear.4$$t(qubit)$n(10).418.exit667"
  call void @panic(i32 1001, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @"e_Linear arr.27F92A51.0", i64 0, i64 0))
  unreachable

"__hugr__.$array.__getitem__.linear.2$$t(qubit)$n(10).444.exit675": ; preds = %"__hugr__.$array.__setitem__.linear.4$$t(qubit)$n(10).418.exit667"
  call void @___rxy(i64 %.fca.2.1.extract.i671, double 0x400921FB54442D18, double 0.000000e+00)
  %"421_05.fca.1.insert.i676" = insertvalue { i1, i64 } { i1 true, i64 poison }, i64 %.fca.2.1.extract.i671, 1
  %33 = bitcast i8* %30 to i1*
  %34 = load i1, i1* %33, align 1
  store { i1, i64 } %"421_05.fca.1.insert.i676", { i1, i64 }* %31, align 4
  br i1 %34, label %cond_434_case_1.i681, label %"__hugr__.$array.__setitem__.linear.4$$t(qubit)$n(10).418.exit682"

cond_434_case_1.i681:                             ; preds = %"__hugr__.$array.__getitem__.linear.2$$t(qubit)$n(10).444.exit675"
  call void @panic(i32 1001, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @"e_Linear arr.8A243695.0", i64 0, i64 0))
  unreachable

"__hugr__.$array.__setitem__.linear.4$$t(qubit)$n(10).418.exit682": ; preds = %"__hugr__.$array.__getitem__.linear.2$$t(qubit)$n(10).444.exit675"
  %35 = call { { i1, { i1, i64, i1 } }*, i64 } @"__hugr__.$measure_array$$n(10).472"({ { i1, i64 }*, i64 } %"133.fca.1.insert")
  %.fca.0.extract335 = extractvalue { { i1, { i1, i64, i1 } }*, i64 } %35, 0
  %.fca.1.extract336 = extractvalue { { i1, { i1, i64, i1 } }*, i64 } %35, 1
  %36 = call i8* @malloc(i64 240)
  %37 = bitcast i8* %36 to { i1, i64, i1 }*
  %38 = getelementptr inbounds { i1, { i1, i64, i1 } }, { i1, { i1, i64, i1 } }* %.fca.0.extract335, i64 %.fca.1.extract336
  %39 = load { i1, { i1, i64, i1 } }, { i1, { i1, i64, i1 } }* %38, align 4
  %.fca.0.extract11.i = extractvalue { i1, { i1, i64, i1 } } %39, 0
  br i1 %.fca.0.extract11.i, label %"__hugr__.$array.__unwrap_elem.7$$t(bool).598.exit", label %cond_601_case_0.i

cond_601_case_0.i:                                ; preds = %"__hugr__.$array.__unwrap_elem.7$$t(bool).598.exit.8", %"__hugr__.$array.__unwrap_elem.7$$t(bool).598.exit.7", %"__hugr__.$array.__unwrap_elem.7$$t(bool).598.exit.6", %"__hugr__.$array.__unwrap_elem.7$$t(bool).598.exit.5", %"__hugr__.$array.__unwrap_elem.7$$t(bool).598.exit.4", %"__hugr__.$array.__unwrap_elem.7$$t(bool).598.exit.3", %"__hugr__.$array.__unwrap_elem.7$$t(bool).598.exit.2", %"__hugr__.$array.__unwrap_elem.7$$t(bool).598.exit.1", %"__hugr__.$array.__unwrap_elem.7$$t(bool).598.exit", %"__hugr__.$array.__setitem__.linear.4$$t(qubit)$n(10).418.exit682"
  call void @panic(i32 1001, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @"e_Linear arr.27F92A51.0", i64 0, i64 0))
  unreachable

"__hugr__.$array.__unwrap_elem.7$$t(bool).598.exit": ; preds = %"__hugr__.$array.__setitem__.linear.4$$t(qubit)$n(10).418.exit682"
  %40 = extractvalue { i1, { i1, i64, i1 } } %39, 1
  store { i1, i64, i1 } %40, { i1, i64, i1 }* %37, align 4
  %41 = add i64 %.fca.1.extract336, 1
  %42 = getelementptr inbounds { i1, { i1, i64, i1 } }, { i1, { i1, i64, i1 } }* %.fca.0.extract335, i64 %41
  %43 = load { i1, { i1, i64, i1 } }, { i1, { i1, i64, i1 } }* %42, align 4
  %.fca.0.extract11.i.1 = extractvalue { i1, { i1, i64, i1 } } %43, 0
  br i1 %.fca.0.extract11.i.1, label %"__hugr__.$array.__unwrap_elem.7$$t(bool).598.exit.1", label %cond_601_case_0.i

"__hugr__.$array.__unwrap_elem.7$$t(bool).598.exit.1": ; preds = %"__hugr__.$array.__unwrap_elem.7$$t(bool).598.exit"
  %44 = extractvalue { i1, { i1, i64, i1 } } %43, 1
  %45 = getelementptr inbounds i8, i8* %36, i64 24
  %46 = bitcast i8* %45 to { i1, i64, i1 }*
  store { i1, i64, i1 } %44, { i1, i64, i1 }* %46, align 4
  %47 = add i64 %.fca.1.extract336, 2
  %48 = getelementptr inbounds { i1, { i1, i64, i1 } }, { i1, { i1, i64, i1 } }* %.fca.0.extract335, i64 %47
  %49 = load { i1, { i1, i64, i1 } }, { i1, { i1, i64, i1 } }* %48, align 4
  %.fca.0.extract11.i.2 = extractvalue { i1, { i1, i64, i1 } } %49, 0
  br i1 %.fca.0.extract11.i.2, label %"__hugr__.$array.__unwrap_elem.7$$t(bool).598.exit.2", label %cond_601_case_0.i

"__hugr__.$array.__unwrap_elem.7$$t(bool).598.exit.2": ; preds = %"__hugr__.$array.__unwrap_elem.7$$t(bool).598.exit.1"
  %50 = extractvalue { i1, { i1, i64, i1 } } %49, 1
  %51 = getelementptr inbounds i8, i8* %36, i64 48
  %52 = bitcast i8* %51 to { i1, i64, i1 }*
  store { i1, i64, i1 } %50, { i1, i64, i1 }* %52, align 4
  %53 = add i64 %.fca.1.extract336, 3
  %54 = getelementptr inbounds { i1, { i1, i64, i1 } }, { i1, { i1, i64, i1 } }* %.fca.0.extract335, i64 %53
  %55 = load { i1, { i1, i64, i1 } }, { i1, { i1, i64, i1 } }* %54, align 4
  %.fca.0.extract11.i.3 = extractvalue { i1, { i1, i64, i1 } } %55, 0
  br i1 %.fca.0.extract11.i.3, label %"__hugr__.$array.__unwrap_elem.7$$t(bool).598.exit.3", label %cond_601_case_0.i

"__hugr__.$array.__unwrap_elem.7$$t(bool).598.exit.3": ; preds = %"__hugr__.$array.__unwrap_elem.7$$t(bool).598.exit.2"
  %56 = extractvalue { i1, { i1, i64, i1 } } %55, 1
  %57 = getelementptr inbounds i8, i8* %36, i64 72
  %58 = bitcast i8* %57 to { i1, i64, i1 }*
  store { i1, i64, i1 } %56, { i1, i64, i1 }* %58, align 4
  %59 = add i64 %.fca.1.extract336, 4
  %60 = getelementptr inbounds { i1, { i1, i64, i1 } }, { i1, { i1, i64, i1 } }* %.fca.0.extract335, i64 %59
  %61 = load { i1, { i1, i64, i1 } }, { i1, { i1, i64, i1 } }* %60, align 4
  %.fca.0.extract11.i.4 = extractvalue { i1, { i1, i64, i1 } } %61, 0
  br i1 %.fca.0.extract11.i.4, label %"__hugr__.$array.__unwrap_elem.7$$t(bool).598.exit.4", label %cond_601_case_0.i

"__hugr__.$array.__unwrap_elem.7$$t(bool).598.exit.4": ; preds = %"__hugr__.$array.__unwrap_elem.7$$t(bool).598.exit.3"
  %62 = extractvalue { i1, { i1, i64, i1 } } %61, 1
  %63 = getelementptr inbounds i8, i8* %36, i64 96
  %64 = bitcast i8* %63 to { i1, i64, i1 }*
  store { i1, i64, i1 } %62, { i1, i64, i1 }* %64, align 4
  %65 = add i64 %.fca.1.extract336, 5
  %66 = getelementptr inbounds { i1, { i1, i64, i1 } }, { i1, { i1, i64, i1 } }* %.fca.0.extract335, i64 %65
  %67 = load { i1, { i1, i64, i1 } }, { i1, { i1, i64, i1 } }* %66, align 4
  %.fca.0.extract11.i.5 = extractvalue { i1, { i1, i64, i1 } } %67, 0
  br i1 %.fca.0.extract11.i.5, label %"__hugr__.$array.__unwrap_elem.7$$t(bool).598.exit.5", label %cond_601_case_0.i

"__hugr__.$array.__unwrap_elem.7$$t(bool).598.exit.5": ; preds = %"__hugr__.$array.__unwrap_elem.7$$t(bool).598.exit.4"
  %68 = extractvalue { i1, { i1, i64, i1 } } %67, 1
  %69 = getelementptr inbounds i8, i8* %36, i64 120
  %70 = bitcast i8* %69 to { i1, i64, i1 }*
  store { i1, i64, i1 } %68, { i1, i64, i1 }* %70, align 4
  %71 = add i64 %.fca.1.extract336, 6
  %72 = getelementptr inbounds { i1, { i1, i64, i1 } }, { i1, { i1, i64, i1 } }* %.fca.0.extract335, i64 %71
  %73 = load { i1, { i1, i64, i1 } }, { i1, { i1, i64, i1 } }* %72, align 4
  %.fca.0.extract11.i.6 = extractvalue { i1, { i1, i64, i1 } } %73, 0
  br i1 %.fca.0.extract11.i.6, label %"__hugr__.$array.__unwrap_elem.7$$t(bool).598.exit.6", label %cond_601_case_0.i

"__hugr__.$array.__unwrap_elem.7$$t(bool).598.exit.6": ; preds = %"__hugr__.$array.__unwrap_elem.7$$t(bool).598.exit.5"
  %74 = extractvalue { i1, { i1, i64, i1 } } %73, 1
  %75 = getelementptr inbounds i8, i8* %36, i64 144
  %76 = bitcast i8* %75 to { i1, i64, i1 }*
  store { i1, i64, i1 } %74, { i1, i64, i1 }* %76, align 4
  %77 = add i64 %.fca.1.extract336, 7
  %78 = getelementptr inbounds { i1, { i1, i64, i1 } }, { i1, { i1, i64, i1 } }* %.fca.0.extract335, i64 %77
  %79 = load { i1, { i1, i64, i1 } }, { i1, { i1, i64, i1 } }* %78, align 4
  %.fca.0.extract11.i.7 = extractvalue { i1, { i1, i64, i1 } } %79, 0
  br i1 %.fca.0.extract11.i.7, label %"__hugr__.$array.__unwrap_elem.7$$t(bool).598.exit.7", label %cond_601_case_0.i

"__hugr__.$array.__unwrap_elem.7$$t(bool).598.exit.7": ; preds = %"__hugr__.$array.__unwrap_elem.7$$t(bool).598.exit.6"
  %80 = extractvalue { i1, { i1, i64, i1 } } %79, 1
  %81 = getelementptr inbounds i8, i8* %36, i64 168
  %82 = bitcast i8* %81 to { i1, i64, i1 }*
  store { i1, i64, i1 } %80, { i1, i64, i1 }* %82, align 4
  %83 = add i64 %.fca.1.extract336, 8
  %84 = getelementptr inbounds { i1, { i1, i64, i1 } }, { i1, { i1, i64, i1 } }* %.fca.0.extract335, i64 %83
  %85 = load { i1, { i1, i64, i1 } }, { i1, { i1, i64, i1 } }* %84, align 4
  %.fca.0.extract11.i.8 = extractvalue { i1, { i1, i64, i1 } } %85, 0
  br i1 %.fca.0.extract11.i.8, label %"__hugr__.$array.__unwrap_elem.7$$t(bool).598.exit.8", label %cond_601_case_0.i

"__hugr__.$array.__unwrap_elem.7$$t(bool).598.exit.8": ; preds = %"__hugr__.$array.__unwrap_elem.7$$t(bool).598.exit.7"
  %86 = extractvalue { i1, { i1, i64, i1 } } %85, 1
  %87 = getelementptr inbounds i8, i8* %36, i64 192
  %88 = bitcast i8* %87 to { i1, i64, i1 }*
  store { i1, i64, i1 } %86, { i1, i64, i1 }* %88, align 4
  %89 = add i64 %.fca.1.extract336, 9
  %90 = getelementptr inbounds { i1, { i1, i64, i1 } }, { i1, { i1, i64, i1 } }* %.fca.0.extract335, i64 %89
  %91 = load { i1, { i1, i64, i1 } }, { i1, { i1, i64, i1 } }* %90, align 4
  %.fca.0.extract11.i.9 = extractvalue { i1, { i1, i64, i1 } } %91, 0
  br i1 %.fca.0.extract11.i.9, label %"__hugr__.$array.__unwrap_elem.7$$t(bool).598.exit.9", label %cond_601_case_0.i

"__hugr__.$array.__unwrap_elem.7$$t(bool).598.exit.9": ; preds = %"__hugr__.$array.__unwrap_elem.7$$t(bool).598.exit.8"
  %92 = extractvalue { i1, { i1, i64, i1 } } %91, 1
  %93 = getelementptr inbounds i8, i8* %36, i64 216
  %94 = bitcast i8* %93 to { i1, i64, i1 }*
  store { i1, i64, i1 } %92, { i1, i64, i1 }* %94, align 4
  %95 = bitcast { i1, { i1, i64, i1 } }* %.fca.0.extract335 to i8*
  call void @free(i8* %95)
  %96 = call i8* @malloc(i64 10)
  %97 = load { i1, i64, i1 }, { i1, i64, i1 }* %37, align 4
  %.fca.0.extract.i683 = extractvalue { i1, i64, i1 } %97, 0
  %.fca.1.extract.i684 = extractvalue { i1, i64, i1 } %97, 1
  br i1 %.fca.0.extract.i683, label %cond_365_case_1.i, label %cond_365_case_0.i

cond_365_case_0.i:                                ; preds = %"__hugr__.$array.__unwrap_elem.7$$t(bool).598.exit.9"
  %.fca.2.extract.i = extractvalue { i1, i64, i1 } %97, 2
  br label %__hugr__.array.__read_bool.9.312.exit

cond_365_case_1.i:                                ; preds = %"__hugr__.$array.__unwrap_elem.7$$t(bool).598.exit.9"
  %read_bool.i = call i1 @___read_future_bool(i64 %.fca.1.extract.i684)
  call void @___dec_future_refcount(i64 %.fca.1.extract.i684)
  br label %__hugr__.array.__read_bool.9.312.exit

__hugr__.array.__read_bool.9.312.exit:            ; preds = %cond_365_case_0.i, %cond_365_case_1.i
  %"03.0.i" = phi i1 [ %read_bool.i, %cond_365_case_1.i ], [ %.fca.2.extract.i, %cond_365_case_0.i ]
  %98 = bitcast i8* %96 to i1*
  store i1 %"03.0.i", i1* %98, align 1
  %99 = getelementptr inbounds i8, i8* %36, i64 24
  %100 = bitcast i8* %99 to { i1, i64, i1 }*
  %101 = load { i1, i64, i1 }, { i1, i64, i1 }* %100, align 4
  %.fca.0.extract.i683.1 = extractvalue { i1, i64, i1 } %101, 0
  %.fca.1.extract.i684.1 = extractvalue { i1, i64, i1 } %101, 1
  br i1 %.fca.0.extract.i683.1, label %cond_365_case_1.i.1, label %cond_365_case_0.i.1

cond_365_case_0.i.1:                              ; preds = %__hugr__.array.__read_bool.9.312.exit
  %.fca.2.extract.i.1 = extractvalue { i1, i64, i1 } %101, 2
  br label %__hugr__.array.__read_bool.9.312.exit.1

cond_365_case_1.i.1:                              ; preds = %__hugr__.array.__read_bool.9.312.exit
  %read_bool.i.1 = call i1 @___read_future_bool(i64 %.fca.1.extract.i684.1)
  call void @___dec_future_refcount(i64 %.fca.1.extract.i684.1)
  br label %__hugr__.array.__read_bool.9.312.exit.1

__hugr__.array.__read_bool.9.312.exit.1:          ; preds = %cond_365_case_1.i.1, %cond_365_case_0.i.1
  %"03.0.i.1" = phi i1 [ %read_bool.i.1, %cond_365_case_1.i.1 ], [ %.fca.2.extract.i.1, %cond_365_case_0.i.1 ]
  %102 = getelementptr inbounds i8, i8* %96, i64 1
  %103 = bitcast i8* %102 to i1*
  store i1 %"03.0.i.1", i1* %103, align 1
  %104 = getelementptr inbounds i8, i8* %36, i64 48
  %105 = bitcast i8* %104 to { i1, i64, i1 }*
  %106 = load { i1, i64, i1 }, { i1, i64, i1 }* %105, align 4
  %.fca.0.extract.i683.2 = extractvalue { i1, i64, i1 } %106, 0
  %.fca.1.extract.i684.2 = extractvalue { i1, i64, i1 } %106, 1
  br i1 %.fca.0.extract.i683.2, label %cond_365_case_1.i.2, label %cond_365_case_0.i.2

cond_365_case_0.i.2:                              ; preds = %__hugr__.array.__read_bool.9.312.exit.1
  %.fca.2.extract.i.2 = extractvalue { i1, i64, i1 } %106, 2
  br label %__hugr__.array.__read_bool.9.312.exit.2

cond_365_case_1.i.2:                              ; preds = %__hugr__.array.__read_bool.9.312.exit.1
  %read_bool.i.2 = call i1 @___read_future_bool(i64 %.fca.1.extract.i684.2)
  call void @___dec_future_refcount(i64 %.fca.1.extract.i684.2)
  br label %__hugr__.array.__read_bool.9.312.exit.2

__hugr__.array.__read_bool.9.312.exit.2:          ; preds = %cond_365_case_1.i.2, %cond_365_case_0.i.2
  %"03.0.i.2" = phi i1 [ %read_bool.i.2, %cond_365_case_1.i.2 ], [ %.fca.2.extract.i.2, %cond_365_case_0.i.2 ]
  %107 = getelementptr inbounds i8, i8* %96, i64 2
  %108 = bitcast i8* %107 to i1*
  store i1 %"03.0.i.2", i1* %108, align 1
  %109 = getelementptr inbounds i8, i8* %36, i64 72
  %110 = bitcast i8* %109 to { i1, i64, i1 }*
  %111 = load { i1, i64, i1 }, { i1, i64, i1 }* %110, align 4
  %.fca.0.extract.i683.3 = extractvalue { i1, i64, i1 } %111, 0
  %.fca.1.extract.i684.3 = extractvalue { i1, i64, i1 } %111, 1
  br i1 %.fca.0.extract.i683.3, label %cond_365_case_1.i.3, label %cond_365_case_0.i.3

cond_365_case_0.i.3:                              ; preds = %__hugr__.array.__read_bool.9.312.exit.2
  %.fca.2.extract.i.3 = extractvalue { i1, i64, i1 } %111, 2
  br label %__hugr__.array.__read_bool.9.312.exit.3

cond_365_case_1.i.3:                              ; preds = %__hugr__.array.__read_bool.9.312.exit.2
  %read_bool.i.3 = call i1 @___read_future_bool(i64 %.fca.1.extract.i684.3)
  call void @___dec_future_refcount(i64 %.fca.1.extract.i684.3)
  br label %__hugr__.array.__read_bool.9.312.exit.3

__hugr__.array.__read_bool.9.312.exit.3:          ; preds = %cond_365_case_1.i.3, %cond_365_case_0.i.3
  %"03.0.i.3" = phi i1 [ %read_bool.i.3, %cond_365_case_1.i.3 ], [ %.fca.2.extract.i.3, %cond_365_case_0.i.3 ]
  %112 = getelementptr inbounds i8, i8* %96, i64 3
  %113 = bitcast i8* %112 to i1*
  store i1 %"03.0.i.3", i1* %113, align 1
  %114 = getelementptr inbounds i8, i8* %36, i64 96
  %115 = bitcast i8* %114 to { i1, i64, i1 }*
  %116 = load { i1, i64, i1 }, { i1, i64, i1 }* %115, align 4
  %.fca.0.extract.i683.4 = extractvalue { i1, i64, i1 } %116, 0
  %.fca.1.extract.i684.4 = extractvalue { i1, i64, i1 } %116, 1
  br i1 %.fca.0.extract.i683.4, label %cond_365_case_1.i.4, label %cond_365_case_0.i.4

cond_365_case_0.i.4:                              ; preds = %__hugr__.array.__read_bool.9.312.exit.3
  %.fca.2.extract.i.4 = extractvalue { i1, i64, i1 } %116, 2
  br label %__hugr__.array.__read_bool.9.312.exit.4

cond_365_case_1.i.4:                              ; preds = %__hugr__.array.__read_bool.9.312.exit.3
  %read_bool.i.4 = call i1 @___read_future_bool(i64 %.fca.1.extract.i684.4)
  call void @___dec_future_refcount(i64 %.fca.1.extract.i684.4)
  br label %__hugr__.array.__read_bool.9.312.exit.4

__hugr__.array.__read_bool.9.312.exit.4:          ; preds = %cond_365_case_1.i.4, %cond_365_case_0.i.4
  %"03.0.i.4" = phi i1 [ %read_bool.i.4, %cond_365_case_1.i.4 ], [ %.fca.2.extract.i.4, %cond_365_case_0.i.4 ]
  %117 = getelementptr inbounds i8, i8* %96, i64 4
  %118 = bitcast i8* %117 to i1*
  store i1 %"03.0.i.4", i1* %118, align 1
  %119 = getelementptr inbounds i8, i8* %36, i64 120
  %120 = bitcast i8* %119 to { i1, i64, i1 }*
  %121 = load { i1, i64, i1 }, { i1, i64, i1 }* %120, align 4
  %.fca.0.extract.i683.5 = extractvalue { i1, i64, i1 } %121, 0
  %.fca.1.extract.i684.5 = extractvalue { i1, i64, i1 } %121, 1
  br i1 %.fca.0.extract.i683.5, label %cond_365_case_1.i.5, label %cond_365_case_0.i.5

cond_365_case_0.i.5:                              ; preds = %__hugr__.array.__read_bool.9.312.exit.4
  %.fca.2.extract.i.5 = extractvalue { i1, i64, i1 } %121, 2
  br label %__hugr__.array.__read_bool.9.312.exit.5

cond_365_case_1.i.5:                              ; preds = %__hugr__.array.__read_bool.9.312.exit.4
  %read_bool.i.5 = call i1 @___read_future_bool(i64 %.fca.1.extract.i684.5)
  call void @___dec_future_refcount(i64 %.fca.1.extract.i684.5)
  br label %__hugr__.array.__read_bool.9.312.exit.5

__hugr__.array.__read_bool.9.312.exit.5:          ; preds = %cond_365_case_1.i.5, %cond_365_case_0.i.5
  %"03.0.i.5" = phi i1 [ %read_bool.i.5, %cond_365_case_1.i.5 ], [ %.fca.2.extract.i.5, %cond_365_case_0.i.5 ]
  %122 = getelementptr inbounds i8, i8* %96, i64 5
  %123 = bitcast i8* %122 to i1*
  store i1 %"03.0.i.5", i1* %123, align 1
  %124 = getelementptr inbounds i8, i8* %36, i64 144
  %125 = bitcast i8* %124 to { i1, i64, i1 }*
  %126 = load { i1, i64, i1 }, { i1, i64, i1 }* %125, align 4
  %.fca.0.extract.i683.6 = extractvalue { i1, i64, i1 } %126, 0
  %.fca.1.extract.i684.6 = extractvalue { i1, i64, i1 } %126, 1
  br i1 %.fca.0.extract.i683.6, label %cond_365_case_1.i.6, label %cond_365_case_0.i.6

cond_365_case_0.i.6:                              ; preds = %__hugr__.array.__read_bool.9.312.exit.5
  %.fca.2.extract.i.6 = extractvalue { i1, i64, i1 } %126, 2
  br label %__hugr__.array.__read_bool.9.312.exit.6

cond_365_case_1.i.6:                              ; preds = %__hugr__.array.__read_bool.9.312.exit.5
  %read_bool.i.6 = call i1 @___read_future_bool(i64 %.fca.1.extract.i684.6)
  call void @___dec_future_refcount(i64 %.fca.1.extract.i684.6)
  br label %__hugr__.array.__read_bool.9.312.exit.6

__hugr__.array.__read_bool.9.312.exit.6:          ; preds = %cond_365_case_1.i.6, %cond_365_case_0.i.6
  %"03.0.i.6" = phi i1 [ %read_bool.i.6, %cond_365_case_1.i.6 ], [ %.fca.2.extract.i.6, %cond_365_case_0.i.6 ]
  %127 = getelementptr inbounds i8, i8* %96, i64 6
  %128 = bitcast i8* %127 to i1*
  store i1 %"03.0.i.6", i1* %128, align 1
  %129 = getelementptr inbounds i8, i8* %36, i64 168
  %130 = bitcast i8* %129 to { i1, i64, i1 }*
  %131 = load { i1, i64, i1 }, { i1, i64, i1 }* %130, align 4
  %.fca.0.extract.i683.7 = extractvalue { i1, i64, i1 } %131, 0
  %.fca.1.extract.i684.7 = extractvalue { i1, i64, i1 } %131, 1
  br i1 %.fca.0.extract.i683.7, label %cond_365_case_1.i.7, label %cond_365_case_0.i.7

cond_365_case_0.i.7:                              ; preds = %__hugr__.array.__read_bool.9.312.exit.6
  %.fca.2.extract.i.7 = extractvalue { i1, i64, i1 } %131, 2
  br label %__hugr__.array.__read_bool.9.312.exit.7

cond_365_case_1.i.7:                              ; preds = %__hugr__.array.__read_bool.9.312.exit.6
  %read_bool.i.7 = call i1 @___read_future_bool(i64 %.fca.1.extract.i684.7)
  call void @___dec_future_refcount(i64 %.fca.1.extract.i684.7)
  br label %__hugr__.array.__read_bool.9.312.exit.7

__hugr__.array.__read_bool.9.312.exit.7:          ; preds = %cond_365_case_1.i.7, %cond_365_case_0.i.7
  %"03.0.i.7" = phi i1 [ %read_bool.i.7, %cond_365_case_1.i.7 ], [ %.fca.2.extract.i.7, %cond_365_case_0.i.7 ]
  %132 = getelementptr inbounds i8, i8* %96, i64 7
  %133 = bitcast i8* %132 to i1*
  store i1 %"03.0.i.7", i1* %133, align 1
  %134 = getelementptr inbounds i8, i8* %36, i64 192
  %135 = bitcast i8* %134 to { i1, i64, i1 }*
  %136 = load { i1, i64, i1 }, { i1, i64, i1 }* %135, align 4
  %.fca.0.extract.i683.8 = extractvalue { i1, i64, i1 } %136, 0
  %.fca.1.extract.i684.8 = extractvalue { i1, i64, i1 } %136, 1
  br i1 %.fca.0.extract.i683.8, label %cond_365_case_1.i.8, label %cond_365_case_0.i.8

cond_365_case_0.i.8:                              ; preds = %__hugr__.array.__read_bool.9.312.exit.7
  %.fca.2.extract.i.8 = extractvalue { i1, i64, i1 } %136, 2
  br label %__hugr__.array.__read_bool.9.312.exit.8

cond_365_case_1.i.8:                              ; preds = %__hugr__.array.__read_bool.9.312.exit.7
  %read_bool.i.8 = call i1 @___read_future_bool(i64 %.fca.1.extract.i684.8)
  call void @___dec_future_refcount(i64 %.fca.1.extract.i684.8)
  br label %__hugr__.array.__read_bool.9.312.exit.8

__hugr__.array.__read_bool.9.312.exit.8:          ; preds = %cond_365_case_1.i.8, %cond_365_case_0.i.8
  %"03.0.i.8" = phi i1 [ %read_bool.i.8, %cond_365_case_1.i.8 ], [ %.fca.2.extract.i.8, %cond_365_case_0.i.8 ]
  %137 = getelementptr inbounds i8, i8* %96, i64 8
  %138 = bitcast i8* %137 to i1*
  store i1 %"03.0.i.8", i1* %138, align 1
  %139 = getelementptr inbounds i8, i8* %36, i64 216
  %140 = bitcast i8* %139 to { i1, i64, i1 }*
  %141 = load { i1, i64, i1 }, { i1, i64, i1 }* %140, align 4
  %.fca.0.extract.i683.9 = extractvalue { i1, i64, i1 } %141, 0
  %.fca.1.extract.i684.9 = extractvalue { i1, i64, i1 } %141, 1
  br i1 %.fca.0.extract.i683.9, label %cond_365_case_1.i.9, label %cond_365_case_0.i.9

cond_365_case_0.i.9:                              ; preds = %__hugr__.array.__read_bool.9.312.exit.8
  %.fca.2.extract.i.9 = extractvalue { i1, i64, i1 } %141, 2
  br label %__hugr__.array.__read_bool.9.312.exit.9

cond_365_case_1.i.9:                              ; preds = %__hugr__.array.__read_bool.9.312.exit.8
  %read_bool.i.9 = call i1 @___read_future_bool(i64 %.fca.1.extract.i684.9)
  call void @___dec_future_refcount(i64 %.fca.1.extract.i684.9)
  br label %__hugr__.array.__read_bool.9.312.exit.9

__hugr__.array.__read_bool.9.312.exit.9:          ; preds = %cond_365_case_1.i.9, %cond_365_case_0.i.9
  %"03.0.i.9" = phi i1 [ %read_bool.i.9, %cond_365_case_1.i.9 ], [ %.fca.2.extract.i.9, %cond_365_case_0.i.9 ]
  %142 = getelementptr inbounds i8, i8* %96, i64 9
  %143 = bitcast i8* %142 to i1*
  store i1 %"03.0.i.9", i1* %143, align 1
  call void @free(i8* %36)
  %out_arr_alloca = alloca <{ i32, i32, i1*, i1* }>, align 8
  %x_ptr = getelementptr inbounds <{ i32, i32, i1*, i1* }>, <{ i32, i32, i1*, i1* }>* %out_arr_alloca, i64 0, i32 0
  %y_ptr = getelementptr inbounds <{ i32, i32, i1*, i1* }>, <{ i32, i32, i1*, i1* }>* %out_arr_alloca, i64 0, i32 1
  %arr_ptr = getelementptr inbounds <{ i32, i32, i1*, i1* }>, <{ i32, i32, i1*, i1* }>* %out_arr_alloca, i64 0, i32 2
  %mask_ptr = getelementptr inbounds <{ i32, i32, i1*, i1* }>, <{ i32, i32, i1*, i1* }>* %out_arr_alloca, i64 0, i32 3
  %144 = alloca [10 x i1], align 1
  %.sub = getelementptr inbounds [10 x i1], [10 x i1]* %144, i64 0, i64 0
  %145 = bitcast [10 x i1]* %144 to i8*
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 1 dereferenceable(10) %145, i8 0, i64 10, i1 false)
  store i32 10, i32* %x_ptr, align 8
  store i32 1, i32* %y_ptr, align 4
  %146 = bitcast i1** %arr_ptr to i8**
  store i8* %96, i8** %146, align 8
  store i1* %.sub, i1** %mask_ptr, align 8
  call void @print_bool_arr(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @res_cs.46C3C4B5.0, i64 0, i64 0), i64 15, <{ i32, i32, i1*, i1* }>* nonnull %out_arr_alloca)
  br label %loop_body110

loop_body110:                                     ; preds = %cond_exit_97, %__hugr__.array.__read_bool.9.312.exit.9
  %"92_2.0" = phi i64 [ 0, %__hugr__.array.__read_bool.9.312.exit.9 ], [ %"2123.0", %cond_exit_97 ]
  %"92_0.sroa.0.0" = phi i64 [ 0, %__hugr__.array.__read_bool.9.312.exit.9 ], [ %"0121.sroa.3.0", %cond_exit_97 ]
  %147 = icmp slt i64 %"92_0.sroa.0.0", 100
  br i1 %147, label %cond_97_case_1, label %cond_exit_97

cond_97_case_1:                                   ; preds = %loop_body110
  %148 = icmp ult i64 %"92_2.0", 100
  br i1 %148, label %"__hugr__.$array.__setitem__.classical.3$$t(int(6))$n(100).615.exit", label %cond_621_case_0.i

cond_621_case_0.i:                                ; preds = %cond_97_case_1
  call void @panic(i32 1001, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @"e_Array inde.2A1CB845.0", i64 0, i64 0))
  unreachable

"__hugr__.$array.__setitem__.classical.3$$t(int(6))$n(100).615.exit": ; preds = %cond_97_case_1
  %149 = add i64 %"92_0.sroa.0.0", 1
  %150 = add i64 %"92_2.0", 1
  %"619_05.fca.1.insert.i" = insertvalue { i1, i64 } { i1 true, i64 poison }, i64 %"92_0.sroa.0.0", 1
  %151 = getelementptr inbounds { i1, i64 }, { i1, i64 }* %4, i64 %"92_2.0"
  store { i1, i64 } %"619_05.fca.1.insert.i", { i1, i64 }* %151, align 4
  br label %cond_exit_97

cond_exit_97:                                     ; preds = %loop_body110, %"__hugr__.$array.__setitem__.classical.3$$t(int(6))$n(100).615.exit"
  %"2123.0" = phi i64 [ %150, %"__hugr__.$array.__setitem__.classical.3$$t(int(6))$n(100).615.exit" ], [ %"92_2.0", %loop_body110 ]
  %"0121.sroa.3.0" = phi i64 [ %149, %"__hugr__.$array.__setitem__.classical.3$$t(int(6))$n(100).615.exit" ], [ poison, %loop_body110 ]
  br i1 %147, label %loop_body110, label %loop_out109

loop_out109:                                      ; preds = %cond_exit_97
  %152 = call i8* @malloc(i64 800)
  %153 = bitcast i8* %152 to i64*
  br label %154

154:                                              ; preds = %loop_out109, %"__hugr__.$array.__unwrap_elem.7$$t(int(6)).631.exit"
  %storemerge630702 = phi i64 [ 0, %loop_out109 ], [ %158, %"__hugr__.$array.__unwrap_elem.7$$t(int(6)).631.exit" ]
  %155 = getelementptr inbounds { i1, i64 }, { i1, i64 }* %4, i64 %storemerge630702
  %156 = load { i1, i64 }, { i1, i64 }* %155, align 4
  %.fca.0.extract.i689 = extractvalue { i1, i64 } %156, 0
  br i1 %.fca.0.extract.i689, label %"__hugr__.$array.__unwrap_elem.7$$t(int(6)).631.exit", label %cond_634_case_0.i

cond_634_case_0.i:                                ; preds = %154
  call void @panic(i32 1001, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @"e_Linear arr.27F92A51.0", i64 0, i64 0))
  unreachable

"__hugr__.$array.__unwrap_elem.7$$t(int(6)).631.exit": ; preds = %154
  %.fca.1.extract.i690 = extractvalue { i1, i64 } %156, 1
  %157 = getelementptr inbounds i64, i64* %153, i64 %storemerge630702
  store i64 %.fca.1.extract.i690, i64* %157, align 4
  %158 = add nuw nsw i64 %storemerge630702, 1
  %exitcond.not = icmp eq i64 %158, 100
  br i1 %exitcond.not, label %159, label %154

159:                                              ; preds = %"__hugr__.$array.__unwrap_elem.7$$t(int(6)).631.exit"
  call void @free(i8* %1)
  %out_arr_alloca172 = alloca <{ i32, i32, i64*, i1* }>, align 8
  %x_ptr173 = getelementptr inbounds <{ i32, i32, i64*, i1* }>, <{ i32, i32, i64*, i1* }>* %out_arr_alloca172, i64 0, i32 0
  %y_ptr174 = getelementptr inbounds <{ i32, i32, i64*, i1* }>, <{ i32, i32, i64*, i1* }>* %out_arr_alloca172, i64 0, i32 1
  %arr_ptr175 = getelementptr inbounds <{ i32, i32, i64*, i1* }>, <{ i32, i32, i64*, i1* }>* %out_arr_alloca172, i64 0, i32 2
  %mask_ptr176 = getelementptr inbounds <{ i32, i32, i64*, i1* }>, <{ i32, i32, i64*, i1* }>* %out_arr_alloca172, i64 0, i32 3
  %160 = alloca [100 x i1], align 1
  %.sub428 = getelementptr inbounds [100 x i1], [100 x i1]* %160, i64 0, i64 0
  %161 = bitcast [100 x i1]* %160 to i8*
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 1 dereferenceable(100) %161, i8 0, i64 100, i1 false)
  store i32 100, i32* %x_ptr173, align 8
  store i32 1, i32* %y_ptr174, align 4
  %162 = bitcast i64** %arr_ptr175 to i8**
  store i8* %152, i8** %162, align 8
  store i1* %.sub428, i1** %mask_ptr176, align 8
  call void @print_int_arr(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @res_is.F21393DB.0, i64 0, i64 0), i64 14, <{ i32, i32, i64*, i1* }>* nonnull %out_arr_alloca172)
  br label %loop_body181

loop_body181:                                     ; preds = %cond_exit_137, %159
  %"132_2.0" = phi i64 [ 0, %159 ], [ %"2194.0", %cond_exit_137 ]
  %"132_0.sroa.0.0" = phi i64 [ 0, %159 ], [ %"0192.sroa.3.0", %cond_exit_137 ]
  %163 = icmp slt i64 %"132_0.sroa.0.0", 100
  br i1 %163, label %cond_137_case_1, label %cond_exit_137

cond_137_case_1:                                  ; preds = %loop_body181
  %164 = icmp ult i64 %"132_2.0", 100
  br i1 %164, label %"__hugr__.$array.__setitem__.classical.3$$t(float64)$n(100).648.exit", label %cond_654_case_0.i

cond_654_case_0.i:                                ; preds = %cond_137_case_1
  call void @panic(i32 1001, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @"e_Array inde.2A1CB845.0", i64 0, i64 0))
  unreachable

"__hugr__.$array.__setitem__.classical.3$$t(float64)$n(100).648.exit": ; preds = %cond_137_case_1
  %165 = add i64 %"132_0.sroa.0.0", 1
  %166 = sitofp i64 %"132_0.sroa.0.0" to double
  %167 = fmul double %166, 6.250000e-02
  %168 = add i64 %"132_2.0", 1
  %"652_05.fca.1.insert.i" = insertvalue { i1, double } { i1 true, double poison }, double %167, 1
  %169 = getelementptr inbounds { i1, double }, { i1, double }* %2, i64 %"132_2.0"
  store { i1, double } %"652_05.fca.1.insert.i", { i1, double }* %169, align 8
  br label %cond_exit_137

cond_exit_137:                                    ; preds = %loop_body181, %"__hugr__.$array.__setitem__.classical.3$$t(float64)$n(100).648.exit"
  %"2194.0" = phi i64 [ %168, %"__hugr__.$array.__setitem__.classical.3$$t(float64)$n(100).648.exit" ], [ %"132_2.0", %loop_body181 ]
  %"0192.sroa.3.0" = phi i64 [ %165, %"__hugr__.$array.__setitem__.classical.3$$t(float64)$n(100).648.exit" ], [ poison, %loop_body181 ]
  br i1 %163, label %loop_body181, label %loop_out180

loop_out180:                                      ; preds = %cond_exit_137
  %170 = call i8* @malloc(i64 800)
  %171 = bitcast i8* %170 to double*
  br label %172

172:                                              ; preds = %loop_out180, %"__hugr__.$array.__unwrap_elem.7$$t(float64).664.exit"
  %storemerge703 = phi i64 [ 0, %loop_out180 ], [ %176, %"__hugr__.$array.__unwrap_elem.7$$t(float64).664.exit" ]
  %173 = getelementptr inbounds { i1, double }, { i1, double }* %2, i64 %storemerge703
  %174 = load { i1, double }, { i1, double }* %173, align 8
  %.fca.0.extract.i695 = extractvalue { i1, double } %174, 0
  br i1 %.fca.0.extract.i695, label %"__hugr__.$array.__unwrap_elem.7$$t(float64).664.exit", label %cond_667_case_0.i

cond_667_case_0.i:                                ; preds = %172
  call void @panic(i32 1001, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @"e_Linear arr.27F92A51.0", i64 0, i64 0))
  unreachable

"__hugr__.$array.__unwrap_elem.7$$t(float64).664.exit": ; preds = %172
  %.fca.1.extract.i696 = extractvalue { i1, double } %174, 1
  %175 = getelementptr inbounds double, double* %171, i64 %storemerge703
  store double %.fca.1.extract.i696, double* %175, align 8
  %176 = add nuw nsw i64 %storemerge703, 1
  %exitcond704.not = icmp eq i64 %176, 100
  br i1 %exitcond704.not, label %177, label %172

177:                                              ; preds = %"__hugr__.$array.__unwrap_elem.7$$t(float64).664.exit"
  call void @free(i8* %0)
  %out_arr_alloca246 = alloca <{ i32, i32, double*, i1* }>, align 8
  %x_ptr247 = getelementptr inbounds <{ i32, i32, double*, i1* }>, <{ i32, i32, double*, i1* }>* %out_arr_alloca246, i64 0, i32 0
  %y_ptr248 = getelementptr inbounds <{ i32, i32, double*, i1* }>, <{ i32, i32, double*, i1* }>* %out_arr_alloca246, i64 0, i32 1
  %arr_ptr249 = getelementptr inbounds <{ i32, i32, double*, i1* }>, <{ i32, i32, double*, i1* }>* %out_arr_alloca246, i64 0, i32 2
  %mask_ptr250 = getelementptr inbounds <{ i32, i32, double*, i1* }>, <{ i32, i32, double*, i1* }>* %out_arr_alloca246, i64 0, i32 3
  %178 = alloca [100 x i1], align 1
  %.sub529 = getelementptr inbounds [100 x i1], [100 x i1]* %178, i64 0, i64 0
  %179 = bitcast [100 x i1]* %178 to i8*
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 1 dereferenceable(100) %179, i8 0, i64 100, i1 false)
  store i32 100, i32* %x_ptr247, align 8
  store i32 1, i32* %y_ptr248, align 4
  %180 = bitcast double** %arr_ptr249 to i8**
  store i8* %170, i8** %180, align 8
  store i1* %.sub529, i1** %mask_ptr250, align 8
  call void @print_float_arr(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @res_fs.CBD4AF54.0, i64 0, i64 0), i64 16, <{ i32, i32, double*, i1* }>* nonnull %out_arr_alloca246)
  ret void
}

define double @"__hugr__.$array.__unwrap_elem.7$$t(float64).664"({ i1, double } %0) local_unnamed_addr {
alloca_block:
  %.fca.0.extract = extractvalue { i1, double } %0, 0
  br i1 %.fca.0.extract, label %cond_667_case_1, label %cond_667_case_0

cond_667_case_1:                                  ; preds = %alloca_block
  %.fca.1.extract = extractvalue { i1, double } %0, 1
  ret double %.fca.1.extract

cond_667_case_0:                                  ; preds = %alloca_block
  call void @panic(i32 1001, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @"e_Linear arr.27F92A51.0", i64 0, i64 0))
  unreachable
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind readnone willreturn
define { i1, double } @"__hugr__.$array.__comprehension.init.6$$t(float64).644"() local_unnamed_addr #0 {
alloca_block:
  ret { i1, double } { i1 false, double poison }
}

; Function Attrs: nobuiltin
declare i8* @malloc(i64) local_unnamed_addr #1

define i64 @"__hugr__.$array.__unwrap_elem.7$$t(int(6)).631"({ i1, i64 } %0) local_unnamed_addr {
alloca_block:
  %.fca.0.extract = extractvalue { i1, i64 } %0, 0
  br i1 %.fca.0.extract, label %cond_634_case_1, label %cond_634_case_0

cond_634_case_1:                                  ; preds = %alloca_block
  %.fca.1.extract = extractvalue { i1, i64 } %0, 1
  ret i64 %.fca.1.extract

cond_634_case_0:                                  ; preds = %alloca_block
  call void @panic(i32 1001, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @"e_Linear arr.27F92A51.0", i64 0, i64 0))
  unreachable
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind readnone willreturn
define { i1, i64 } @"__hugr__.$array.__comprehension.init.6$$t(int(6)).611"() local_unnamed_addr #0 {
alloca_block:
  ret { i1, i64 } { i1 false, i64 poison }
}

define i1 @__hugr__.array.__read_bool.9.312({ i1, i64, i1 } %0) local_unnamed_addr {
alloca_block:
  %.fca.0.extract = extractvalue { i1, i64, i1 } %0, 0
  %.fca.1.extract = extractvalue { i1, i64, i1 } %0, 1
  br i1 %.fca.0.extract, label %cond_365_case_1, label %cond_365_case_0

cond_365_case_0:                                  ; preds = %alloca_block
  %.fca.2.extract = extractvalue { i1, i64, i1 } %0, 2
  br label %cond_exit_365

cond_365_case_1:                                  ; preds = %alloca_block
  %read_bool = call i1 @___read_future_bool(i64 %.fca.1.extract)
  call void @___dec_future_refcount(i64 %.fca.1.extract)
  br label %cond_exit_365

cond_exit_365:                                    ; preds = %cond_365_case_1, %cond_365_case_0
  %"03.0" = phi i1 [ %read_bool, %cond_365_case_1 ], [ %.fca.2.extract, %cond_365_case_0 ]
  ret i1 %"03.0"
}

define { i1, i64, i1 } @"__hugr__.$array.__unwrap_elem.7$$t(bool).598"({ i1, { i1, i64, i1 } } %0) local_unnamed_addr {
alloca_block:
  %.fca.0.extract11 = extractvalue { i1, { i1, i64, i1 } } %0, 0
  br i1 %.fca.0.extract11, label %cond_601_case_1, label %cond_601_case_0

cond_601_case_1:                                  ; preds = %alloca_block
  %1 = extractvalue { i1, { i1, i64, i1 } } %0, 1
  ret { i1, i64, i1 } %1

cond_601_case_0:                                  ; preds = %alloca_block
  call void @panic(i32 1001, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @"e_Linear arr.27F92A51.0", i64 0, i64 0))
  unreachable
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind readnone willreturn
define { i1, i64 } @"__hugr__.$array.__comprehension.init.6$$t(qubit).414"() local_unnamed_addr #0 {
alloca_block:
  ret { i1, i64 } { i1 false, i64 poison }
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind readnone willreturn
define { i1, { { i64, i64 }, i64 } } @__hugr__.__next__.170({ i64, i64 } %0) local_unnamed_addr #0 {
alloca_block:
  %.fca.0.extract84 = extractvalue { i64, i64 } %0, 0
  %.fca.1.extract85 = extractvalue { i64, i64 } %0, 1
  %1 = icmp slt i64 %.fca.0.extract84, %.fca.1.extract85
  %2 = add i64 %.fca.0.extract84, 1
  %"040.fca.0.insert" = insertvalue { i1, { { i64, i64 }, i64 } } poison, i1 %1, 0
  %"040.fca.1.0.0.insert" = insertvalue { i1, { { i64, i64 }, i64 } } %"040.fca.0.insert", i64 %2, 1, 0, 0
  %"040.fca.1.0.1.insert" = insertvalue { i1, { { i64, i64 }, i64 } } %"040.fca.1.0.0.insert", i64 %.fca.1.extract85, 1, 0, 1
  %"040.fca.1.1.insert" = insertvalue { i1, { { i64, i64 }, i64 } } %"040.fca.1.0.1.insert", i64 %.fca.0.extract84, 1, 1
  ret { i1, { { i64, i64 }, i64 } } %"040.fca.1.1.insert"
}

define i64 @__hugr__.__tk2_qalloc.391() local_unnamed_addr {
alloca_block:
  %qalloc = call i64 @___qalloc()
  %not_max.not = icmp eq i64 %qalloc, -1
  br i1 %not_max.not, label %id_bb, label %reset_bb

reset_bb:                                         ; preds = %alloca_block
  call void @___reset(i64 %qalloc)
  br label %id_bb

id_bb:                                            ; preds = %alloca_block, %reset_bb
  %0 = insertvalue { i1, i64 } { i1 true, i64 poison }, i64 %qalloc, 1
  %1 = select i1 %not_max.not, { i1, i64 } { i1 false, i64 poison }, { i1, i64 } %0
  %.fca.0.extract = extractvalue { i1, i64 } %1, 0
  br i1 %.fca.0.extract, label %cond_387_case_1, label %cond_387_case_0

cond_387_case_1:                                  ; preds = %id_bb
  %.fca.1.extract = extractvalue { i1, i64 } %1, 1
  ret i64 %.fca.1.extract

cond_387_case_0:                                  ; preds = %id_bb
  call void @panic(i32 1001, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @"e_No more qu.3B2EEBF0.0", i64 0, i64 0))
  unreachable
}

define { { i1, i64 }*, i64 } @"__hugr__.$array.__setitem__.linear.4$$t(qubit)$n(10).418"({ { i1, i64 }*, i64 } returned %0, i64 %1, i64 %2) local_unnamed_addr {
alloca_block:
  %3 = icmp ult i64 %1, 10
  br i1 %3, label %4, label %9

4:                                                ; preds = %alloca_block
  %"421_05.fca.1.insert" = insertvalue { i1, i64 } { i1 true, i64 poison }, i64 %2, 1
  %.fca.1.extract56 = extractvalue { { i1, i64 }*, i64 } %0, 1
  %.fca.0.extract55 = extractvalue { { i1, i64 }*, i64 } %0, 0
  %5 = add i64 %.fca.1.extract56, %1
  %6 = getelementptr inbounds { i1, i64 }, { i1, i64 }* %.fca.0.extract55, i64 %5
  %7 = getelementptr inbounds { i1, i64 }, { i1, i64 }* %6, i64 0, i32 0
  %8 = load i1, i1* %7, align 1
  store { i1, i64 } %"421_05.fca.1.insert", { i1, i64 }* %6, align 4
  br label %9

9:                                                ; preds = %alloca_block, %4
  %"06.sroa.9.0" = phi i1 [ %8, %4 ], [ true, %alloca_block ]
  br i1 %3, label %cond_424_case_1, label %cond_424_case_0

cond_424_case_0:                                  ; preds = %9
  call void @panic(i32 1001, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @"e_Array inde.2A1CB845.0", i64 0, i64 0))
  unreachable

cond_424_case_1:                                  ; preds = %9
  br i1 %"06.sroa.9.0", label %cond_434_case_1, label %cond_exit_434

cond_434_case_1:                                  ; preds = %cond_424_case_1
  call void @panic(i32 1001, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @"e_Linear arr.8A243695.0", i64 0, i64 0))
  unreachable

cond_exit_434:                                    ; preds = %cond_424_case_1
  ret { { i1, i64 }*, i64 } %0
}

define { i64, { { i1, i64 }*, i64 } } @"__hugr__.$array.__getitem__.linear.2$$t(qubit)$n(10).444"({ { i1, i64 }*, i64 } %0, i64 %1) local_unnamed_addr {
alloca_block:
  %2 = icmp ult i64 %1, 10
  br i1 %2, label %3, label %8

3:                                                ; preds = %alloca_block
  %.fca.1.extract60 = extractvalue { { i1, i64 }*, i64 } %0, 1
  %.fca.0.extract59 = extractvalue { { i1, i64 }*, i64 } %0, 0
  %4 = add i64 %.fca.1.extract60, %1
  %5 = getelementptr inbounds { i1, i64 }, { i1, i64 }* %.fca.0.extract59, i64 %4
  %6 = load { i1, i64 }, { i1, i64 }* %5, align 4
  %7 = bitcast { i1, i64 }* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 4 dereferenceable(16) %7, i8 0, i64 16, i1 false)
  %.fca.2.0.extract = extractvalue { i1, i64 } %6, 0
  %.fca.2.1.extract = extractvalue { i1, i64 } %6, 1
  br label %8

8:                                                ; preds = %alloca_block, %3
  %"05.sroa.9.0" = phi i1 [ %.fca.2.0.extract, %3 ], [ false, %alloca_block ]
  %"05.sroa.12.0" = phi i64 [ %.fca.2.1.extract, %3 ], [ poison, %alloca_block ]
  br i1 %2, label %cond_450_case_1, label %cond_450_case_0

cond_450_case_0:                                  ; preds = %8
  call void @panic(i32 1001, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @"e_Array inde.2A1CB845.0", i64 0, i64 0))
  unreachable

cond_450_case_1:                                  ; preds = %8
  br i1 %"05.sroa.9.0", label %cond_460_case_1, label %cond_460_case_0

cond_460_case_1:                                  ; preds = %cond_450_case_1
  %mrv = insertvalue { i64, { { i1, i64 }*, i64 } } undef, i64 %"05.sroa.12.0", 0
  %mrv40 = insertvalue { i64, { { i1, i64 }*, i64 } } %mrv, { { i1, i64 }*, i64 } %0, 1
  ret { i64, { { i1, i64 }*, i64 } } %mrv40

cond_460_case_0:                                  ; preds = %cond_450_case_1
  call void @panic(i32 1001, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @"e_Linear arr.27F92A51.0", i64 0, i64 0))
  unreachable
}

define i64 @__hugr__.__tk2_x.378(i64 returned %0) local_unnamed_addr {
alloca_block:
  call void @___rxy(i64 %0, double 0x400921FB54442D18, double 0.000000e+00)
  ret i64 %0
}

define { { i1, { i1, i64, i1 } }*, i64 } @"__hugr__.$measure_array$$n(10).472"({ { i1, i64 }*, i64 } %0) local_unnamed_addr {
alloca_block:
  %1 = call i8* @malloc(i64 320)
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 4 dereferenceable(320) %1, i8 0, i64 320, i1 false)
  %2 = insertvalue { { { i1, i64 }*, i64 }, i64 } poison, { { i1, i64 }*, i64 } %0, 0
  %3 = bitcast i8* %1 to { i1, { i1, i64, i1 } }*
  br label %loop_body

loop_body:                                        ; preds = %alloca_block, %14
  %"503_2.0" = phi i64 [ %"2.0", %14 ], [ 0, %alloca_block ]
  %.pn131 = phi { { { i1, i64 }*, i64 }, i64 } [ %16, %14 ], [ %2, %alloca_block ]
  %"503_0.sroa.10.0" = phi i64 [ %"022.sroa.9.0", %14 ], [ 0, %alloca_block ]
  %"503_012.fca.1.insert" = insertvalue { { { i1, i64 }*, i64 }, i64 } %.pn131, i64 %"503_0.sroa.10.0", 1
  %4 = call { i1, { { { { i1, i64 }*, i64 }, i64 }, i64 } } @"__hugr__.$__next__$$t(qubit)$n(10).508"({ { { i1, i64 }*, i64 }, i64 } %"503_012.fca.1.insert")
  %.fca.0.extract95 = extractvalue { i1, { { { { i1, i64 }*, i64 }, i64 }, i64 } } %4, 0
  br i1 %.fca.0.extract95, label %cond_560_case_1, label %cond_exit_560

cond_560_case_1:                                  ; preds = %loop_body
  %5 = extractvalue { i1, { { { { i1, i64 }*, i64 }, i64 }, i64 } } %4, 1
  %.fca.1.extract92 = extractvalue { { { { i1, i64 }*, i64 }, i64 }, i64 } %5, 1
  %6 = add i64 %"503_2.0", 1
  %7 = extractvalue { { { { i1, i64 }*, i64 }, i64 }, i64 } %5, 0
  %lazy_measure = call i64 @___lazy_measure(i64 %.fca.1.extract92)
  call void @___qfree(i64 %.fca.1.extract92)
  %8 = icmp ult i64 %"503_2.0", 10
  br i1 %8, label %9, label %13

9:                                                ; preds = %cond_560_case_1
  %"574_054.fca.1.insert" = insertvalue { i1, i64, i1 } { i1 true, i64 poison, i1 poison }, i64 %lazy_measure, 1
  %10 = insertvalue { i1, { i1, i64, i1 } } { i1 true, { i1, i64, i1 } poison }, { i1, i64, i1 } %"574_054.fca.1.insert", 1
  %11 = getelementptr inbounds { i1, { i1, i64, i1 } }, { i1, { i1, i64, i1 } }* %3, i64 %"503_2.0"
  %12 = load { i1, { i1, i64, i1 } }, { i1, { i1, i64, i1 } }* %11, align 4
  store { i1, { i1, i64, i1 } } %10, { i1, { i1, i64, i1 } }* %11, align 4
  %.fca.2.0.extract.i = extractvalue { i1, { i1, i64, i1 } } %12, 0
  %.fca.2.1.0.extract.i = extractvalue { i1, { i1, i64, i1 } } %12, 1, 0
  %.fca.2.1.1.extract.i = extractvalue { i1, { i1, i64, i1 } } %12, 1, 1
  %phi.bo.i = xor i1 %.fca.2.0.extract.i, true
  br label %13

13:                                               ; preds = %cond_560_case_1, %9
  %"06.sroa.9.0.i" = phi i1 [ %phi.bo.i, %9 ], [ false, %cond_560_case_1 ]
  %"06.sroa.12.0.i" = phi i1 [ %.fca.2.1.0.extract.i, %9 ], [ true, %cond_560_case_1 ]
  %"06.sroa.15.0.i" = phi i64 [ %.fca.2.1.1.extract.i, %9 ], [ %lazy_measure, %cond_560_case_1 ]
  br i1 %8, label %cond_582_case_1.i, label %cond_582_case_0.i

cond_582_case_0.i:                                ; preds = %13
  call void @panic(i32 1001, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @"e_Array inde.2A1CB845.0", i64 0, i64 0))
  unreachable

cond_582_case_1.i:                                ; preds = %13
  %"06.sroa.12.0.not.i" = xor i1 %"06.sroa.12.0.i", true
  %brmerge.i = select i1 %"06.sroa.9.0.i", i1 true, i1 %"06.sroa.12.0.not.i"
  br i1 %brmerge.i, label %"__hugr__.$array.__setitem__.classical.3$$t(bool)$n(10).576.exit", label %cond_404_case_1.i

cond_404_case_1.i:                                ; preds = %cond_582_case_1.i
  call void @___dec_future_refcount(i64 %"06.sroa.15.0.i")
  br label %"__hugr__.$array.__setitem__.classical.3$$t(bool)$n(10).576.exit"

"__hugr__.$array.__setitem__.classical.3$$t(bool)$n(10).576.exit": ; preds = %cond_582_case_1.i, %cond_404_case_1.i
  %.fca.1.0.0.extract = extractvalue { { { i1, i64 }*, i64 }, i64 } %7, 0, 0
  %.fca.1.0.1.extract = extractvalue { { { i1, i64 }*, i64 }, i64 } %7, 0, 1
  %.fca.1.1.extract = extractvalue { { { i1, i64 }*, i64 }, i64 } %7, 1
  br label %cond_exit_560

cond_exit_560:                                    ; preds = %loop_body, %"__hugr__.$array.__setitem__.classical.3$$t(bool)$n(10).576.exit"
  %"2.0" = phi i64 [ %6, %"__hugr__.$array.__setitem__.classical.3$$t(bool)$n(10).576.exit" ], [ %"503_2.0", %loop_body ]
  %"022.sroa.3.0" = phi { i1, i64 }* [ %.fca.1.0.0.extract, %"__hugr__.$array.__setitem__.classical.3$$t(bool)$n(10).576.exit" ], [ poison, %loop_body ]
  %"022.sroa.6.0" = phi i64 [ %.fca.1.0.1.extract, %"__hugr__.$array.__setitem__.classical.3$$t(bool)$n(10).576.exit" ], [ poison, %loop_body ]
  %"022.sroa.9.0" = phi i64 [ %.fca.1.1.extract, %"__hugr__.$array.__setitem__.classical.3$$t(bool)$n(10).576.exit" ], [ poison, %loop_body ]
  br i1 %.fca.0.extract95, label %14, label %loop_out

14:                                               ; preds = %cond_exit_560
  %15 = insertvalue { { { i1, i64 }*, i64 }, i64 } poison, { i1, i64 }* %"022.sroa.3.0", 0, 0
  %16 = insertvalue { { { i1, i64 }*, i64 }, i64 } %15, i64 %"022.sroa.6.0", 0, 1
  br label %loop_body

loop_out:                                         ; preds = %cond_exit_560
  %"124.fca.0.insert" = insertvalue { { i1, { i1, i64, i1 } }*, i64 } poison, { i1, { i1, i64, i1 } }* %3, 0
  %"124.fca.1.insert" = insertvalue { { i1, { i1, i64, i1 } }*, i64 } %"124.fca.0.insert", i64 0, 1
  ret { { i1, { i1, i64, i1 } }*, i64 } %"124.fca.1.insert"
}

; Function Attrs: nobuiltin
declare void @free(i8*) local_unnamed_addr #1

declare void @print_bool_arr(i8*, i64, <{ i32, i32, i1*, i1* }>*) local_unnamed_addr

define { { i1, i64 }*, i64 } @"__hugr__.$array.__setitem__.classical.3$$t(int(6))$n(100).615"({ { i1, i64 }*, i64 } returned %0, i64 %1, i64 %2) local_unnamed_addr {
alloca_block:
  %3 = icmp ult i64 %1, 100
  br i1 %3, label %cond_621_case_1, label %cond_621_case_0

cond_621_case_1:                                  ; preds = %alloca_block
  %"619_05.fca.1.insert" = insertvalue { i1, i64 } { i1 true, i64 poison }, i64 %2, 1
  %.fca.1.extract49 = extractvalue { { i1, i64 }*, i64 } %0, 1
  %.fca.0.extract48 = extractvalue { { i1, i64 }*, i64 } %0, 0
  %4 = add i64 %.fca.1.extract49, %1
  %5 = getelementptr inbounds { i1, i64 }, { i1, i64 }* %.fca.0.extract48, i64 %4
  store { i1, i64 } %"619_05.fca.1.insert", { i1, i64 }* %5, align 4
  ret { { i1, i64 }*, i64 } %0

cond_621_case_0:                                  ; preds = %alloca_block
  call void @panic(i32 1001, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @"e_Array inde.2A1CB845.0", i64 0, i64 0))
  unreachable
}

declare void @print_int_arr(i8*, i64, <{ i32, i32, i64*, i1* }>*) local_unnamed_addr

define { { i1, double }*, i64 } @"__hugr__.$array.__setitem__.classical.3$$t(float64)$n(100).648"({ { i1, double }*, i64 } returned %0, i64 %1, double %2) local_unnamed_addr {
alloca_block:
  %3 = icmp ult i64 %1, 100
  br i1 %3, label %cond_654_case_1, label %cond_654_case_0

cond_654_case_1:                                  ; preds = %alloca_block
  %"652_05.fca.1.insert" = insertvalue { i1, double } { i1 true, double poison }, double %2, 1
  %.fca.1.extract49 = extractvalue { { i1, double }*, i64 } %0, 1
  %.fca.0.extract48 = extractvalue { { i1, double }*, i64 } %0, 0
  %4 = add i64 %.fca.1.extract49, %1
  %5 = getelementptr inbounds { i1, double }, { i1, double }* %.fca.0.extract48, i64 %4
  store { i1, double } %"652_05.fca.1.insert", { i1, double }* %5, align 8
  ret { { i1, double }*, i64 } %0

cond_654_case_0:                                  ; preds = %alloca_block
  call void @panic(i32 1001, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @"e_Array inde.2A1CB845.0", i64 0, i64 0))
  unreachable
}

declare void @print_float_arr(i8*, i64, <{ i32, i32, double*, i1* }>*) local_unnamed_addr

; Function Attrs: mustprogress nofree norecurse nosync nounwind readnone willreturn
define { i1, { i1, i64, i1 } } @"__hugr__.$array.__comprehension.init.6$$t(bool).480"() local_unnamed_addr #0 {
alloca_block:
  ret { i1, { i1, i64, i1 } } { i1 false, { i1, i64, i1 } poison }
}

declare i1 @___read_future_bool(i64) local_unnamed_addr

declare void @___dec_future_refcount(i64) local_unnamed_addr

; Function Attrs: noreturn
declare void @panic(i32, i8*) local_unnamed_addr #2

; Function Attrs: mustprogress nofree norecurse nosync nounwind readnone willreturn
define { { { i1, i64 }*, i64 }, i64 } @"__hugr__.$__iter__$$t(qubit)$n(10).488"({ { i1, i64 }*, i64 } %0) local_unnamed_addr #0 {
alloca_block:
  %1 = insertvalue { { { i1, i64 }*, i64 }, i64 } poison, { { i1, i64 }*, i64 } %0, 0
  %"012.fca.1.insert" = insertvalue { { { i1, i64 }*, i64 }, i64 } %1, i64 0, 1
  ret { { { i1, i64 }*, i64 }, i64 } %"012.fca.1.insert"
}

define { i1, { { { { i1, i64 }*, i64 }, i64 }, i64 } } @"__hugr__.$__next__$$t(qubit)$n(10).508"({ { { i1, i64 }*, i64 }, i64 } %0) local_unnamed_addr {
alloca_block:
  %.fca.1.extract96 = extractvalue { { { i1, i64 }*, i64 }, i64 } %0, 1
  %1 = extractvalue { { { i1, i64 }*, i64 }, i64 } %0, 0
  %.fca.0.extract80 = extractvalue { { i1, i64 }*, i64 } %1, 0
  %.fca.1.extract81 = extractvalue { { i1, i64 }*, i64 } %1, 1
  %2 = icmp slt i64 %.fca.1.extract96, 10
  br i1 %2, label %6, label %"__hugr__.$ArrayIter._assert_all_used.helper.5$$t(qubit).538.exit"

"__hugr__.$array.__getitem__.linear.2$$t(qubit)$n(10).444.exit": ; preds = %cond_450_case_1.i, %42
  %"02.sroa.9.0" = phi i64 [ poison, %42 ], [ %7, %cond_450_case_1.i ]
  %"02.sroa.12.0" = phi i64 [ poison, %42 ], [ %"05.sroa.12.0.i", %cond_450_case_1.i ]
  %"029.fca.0.insert" = insertvalue { i1, { { { { i1, i64 }*, i64 }, i64 }, i64 } } poison, i1 %2, 0
  %"029.fca.1.0.0.0.insert" = insertvalue { i1, { { { { i1, i64 }*, i64 }, i64 }, i64 } } %"029.fca.0.insert", { i1, i64 }* %.fca.0.extract80, 1, 0, 0, 0
  %"029.fca.1.0.0.1.insert" = insertvalue { i1, { { { { i1, i64 }*, i64 }, i64 }, i64 } } %"029.fca.1.0.0.0.insert", i64 %.fca.1.extract81, 1, 0, 0, 1
  %"029.fca.1.0.1.insert" = insertvalue { i1, { { { { i1, i64 }*, i64 }, i64 }, i64 } } %"029.fca.1.0.0.1.insert", i64 %"02.sroa.9.0", 1, 0, 1
  %"029.fca.1.1.insert" = insertvalue { i1, { { { { i1, i64 }*, i64 }, i64 }, i64 } } %"029.fca.1.0.1.insert", i64 %"02.sroa.12.0", 1, 1
  ret { i1, { { { { i1, i64 }*, i64 }, i64 }, i64 } } %"029.fca.1.1.insert"

"__hugr__.$ArrayIter._assert_all_used.helper.5$$t(qubit).538.exit": ; preds = %alloca_block
  %3 = call i8* @malloc(i64 0)
  %4 = getelementptr inbounds { i1, i64 }, { i1, i64 }* %.fca.0.extract80, i64 %.fca.1.extract81, i32 0
  %5 = load i1, i1* %4, align 1
  br i1 %5, label %cond_541_case_1.i, label %"__hugr__.$ArrayIter._assert_all_used.helper.5$$t(qubit).538.exit.1"

6:                                                ; preds = %alloca_block
  %7 = add i64 %.fca.1.extract96, 1
  %8 = icmp ult i64 %.fca.1.extract96, 10
  br i1 %8, label %9, label %14

9:                                                ; preds = %6
  %10 = add i64 %.fca.1.extract81, %.fca.1.extract96
  %11 = getelementptr inbounds { i1, i64 }, { i1, i64 }* %.fca.0.extract80, i64 %10
  %12 = load { i1, i64 }, { i1, i64 }* %11, align 4
  %13 = bitcast { i1, i64 }* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 4 dereferenceable(16) %13, i8 0, i64 16, i1 false)
  %.fca.2.0.extract.i = extractvalue { i1, i64 } %12, 0
  %.fca.2.1.extract.i = extractvalue { i1, i64 } %12, 1
  br label %14

14:                                               ; preds = %9, %6
  %"05.sroa.9.0.i" = phi i1 [ %.fca.2.0.extract.i, %9 ], [ false, %6 ]
  %"05.sroa.12.0.i" = phi i64 [ %.fca.2.1.extract.i, %9 ], [ poison, %6 ]
  br i1 %8, label %cond_450_case_1.i, label %cond_450_case_0.i

cond_450_case_0.i:                                ; preds = %14
  call void @panic(i32 1001, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @"e_Array inde.2A1CB845.0", i64 0, i64 0))
  unreachable

cond_450_case_1.i:                                ; preds = %14
  br i1 %"05.sroa.9.0.i", label %"__hugr__.$array.__getitem__.linear.2$$t(qubit)$n(10).444.exit", label %cond_460_case_0.i

cond_460_case_0.i:                                ; preds = %cond_450_case_1.i
  call void @panic(i32 1001, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @"e_Linear arr.27F92A51.0", i64 0, i64 0))
  unreachable

"__hugr__.$ArrayIter._assert_all_used.helper.5$$t(qubit).538.exit.1": ; preds = %"__hugr__.$ArrayIter._assert_all_used.helper.5$$t(qubit).538.exit"
  %15 = add i64 %.fca.1.extract81, 1
  %16 = getelementptr inbounds { i1, i64 }, { i1, i64 }* %.fca.0.extract80, i64 %15, i32 0
  %17 = load i1, i1* %16, align 1
  br i1 %17, label %cond_541_case_1.i, label %"__hugr__.$ArrayIter._assert_all_used.helper.5$$t(qubit).538.exit.2"

"__hugr__.$ArrayIter._assert_all_used.helper.5$$t(qubit).538.exit.2": ; preds = %"__hugr__.$ArrayIter._assert_all_used.helper.5$$t(qubit).538.exit.1"
  %18 = add i64 %.fca.1.extract81, 2
  %19 = getelementptr inbounds { i1, i64 }, { i1, i64 }* %.fca.0.extract80, i64 %18, i32 0
  %20 = load i1, i1* %19, align 1
  br i1 %20, label %cond_541_case_1.i, label %"__hugr__.$ArrayIter._assert_all_used.helper.5$$t(qubit).538.exit.3"

"__hugr__.$ArrayIter._assert_all_used.helper.5$$t(qubit).538.exit.3": ; preds = %"__hugr__.$ArrayIter._assert_all_used.helper.5$$t(qubit).538.exit.2"
  %21 = add i64 %.fca.1.extract81, 3
  %22 = getelementptr inbounds { i1, i64 }, { i1, i64 }* %.fca.0.extract80, i64 %21, i32 0
  %23 = load i1, i1* %22, align 1
  br i1 %23, label %cond_541_case_1.i, label %"__hugr__.$ArrayIter._assert_all_used.helper.5$$t(qubit).538.exit.4"

"__hugr__.$ArrayIter._assert_all_used.helper.5$$t(qubit).538.exit.4": ; preds = %"__hugr__.$ArrayIter._assert_all_used.helper.5$$t(qubit).538.exit.3"
  %24 = add i64 %.fca.1.extract81, 4
  %25 = getelementptr inbounds { i1, i64 }, { i1, i64 }* %.fca.0.extract80, i64 %24, i32 0
  %26 = load i1, i1* %25, align 1
  br i1 %26, label %cond_541_case_1.i, label %"__hugr__.$ArrayIter._assert_all_used.helper.5$$t(qubit).538.exit.5"

"__hugr__.$ArrayIter._assert_all_used.helper.5$$t(qubit).538.exit.5": ; preds = %"__hugr__.$ArrayIter._assert_all_used.helper.5$$t(qubit).538.exit.4"
  %27 = add i64 %.fca.1.extract81, 5
  %28 = getelementptr inbounds { i1, i64 }, { i1, i64 }* %.fca.0.extract80, i64 %27, i32 0
  %29 = load i1, i1* %28, align 1
  br i1 %29, label %cond_541_case_1.i, label %"__hugr__.$ArrayIter._assert_all_used.helper.5$$t(qubit).538.exit.6"

"__hugr__.$ArrayIter._assert_all_used.helper.5$$t(qubit).538.exit.6": ; preds = %"__hugr__.$ArrayIter._assert_all_used.helper.5$$t(qubit).538.exit.5"
  %30 = add i64 %.fca.1.extract81, 6
  %31 = getelementptr inbounds { i1, i64 }, { i1, i64 }* %.fca.0.extract80, i64 %30, i32 0
  %32 = load i1, i1* %31, align 1
  br i1 %32, label %cond_541_case_1.i, label %"__hugr__.$ArrayIter._assert_all_used.helper.5$$t(qubit).538.exit.7"

"__hugr__.$ArrayIter._assert_all_used.helper.5$$t(qubit).538.exit.7": ; preds = %"__hugr__.$ArrayIter._assert_all_used.helper.5$$t(qubit).538.exit.6"
  %33 = add i64 %.fca.1.extract81, 7
  %34 = getelementptr inbounds { i1, i64 }, { i1, i64 }* %.fca.0.extract80, i64 %33, i32 0
  %35 = load i1, i1* %34, align 1
  br i1 %35, label %cond_541_case_1.i, label %"__hugr__.$ArrayIter._assert_all_used.helper.5$$t(qubit).538.exit.8"

"__hugr__.$ArrayIter._assert_all_used.helper.5$$t(qubit).538.exit.8": ; preds = %"__hugr__.$ArrayIter._assert_all_used.helper.5$$t(qubit).538.exit.7"
  %36 = add i64 %.fca.1.extract81, 8
  %37 = getelementptr inbounds { i1, i64 }, { i1, i64 }* %.fca.0.extract80, i64 %36, i32 0
  %38 = load i1, i1* %37, align 1
  br i1 %38, label %cond_541_case_1.i, label %"__hugr__.$ArrayIter._assert_all_used.helper.5$$t(qubit).538.exit.9"

"__hugr__.$ArrayIter._assert_all_used.helper.5$$t(qubit).538.exit.9": ; preds = %"__hugr__.$ArrayIter._assert_all_used.helper.5$$t(qubit).538.exit.8"
  %39 = add i64 %.fca.1.extract81, 9
  %40 = getelementptr inbounds { i1, i64 }, { i1, i64 }* %.fca.0.extract80, i64 %39, i32 0
  %41 = load i1, i1* %40, align 1
  br i1 %41, label %cond_541_case_1.i, label %42

42:                                               ; preds = %"__hugr__.$ArrayIter._assert_all_used.helper.5$$t(qubit).538.exit.9"
  %43 = bitcast { i1, i64 }* %.fca.0.extract80 to i8*
  call void @free(i8* %43)
  call void @free(i8* %3)
  br label %"__hugr__.$array.__getitem__.linear.2$$t(qubit)$n(10).444.exit"

cond_541_case_1.i:                                ; preds = %"__hugr__.$ArrayIter._assert_all_used.helper.5$$t(qubit).538.exit.9", %"__hugr__.$ArrayIter._assert_all_used.helper.5$$t(qubit).538.exit.8", %"__hugr__.$ArrayIter._assert_all_used.helper.5$$t(qubit).538.exit.7", %"__hugr__.$ArrayIter._assert_all_used.helper.5$$t(qubit).538.exit.6", %"__hugr__.$ArrayIter._assert_all_used.helper.5$$t(qubit).538.exit.5", %"__hugr__.$ArrayIter._assert_all_used.helper.5$$t(qubit).538.exit.4", %"__hugr__.$ArrayIter._assert_all_used.helper.5$$t(qubit).538.exit.3", %"__hugr__.$ArrayIter._assert_all_used.helper.5$$t(qubit).538.exit.2", %"__hugr__.$ArrayIter._assert_all_used.helper.5$$t(qubit).538.exit.1", %"__hugr__.$ArrayIter._assert_all_used.helper.5$$t(qubit).538.exit"
  call void @panic(i32 1001, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @e_ArrayIter..ED8B8605.0, i64 0, i64 0))
  unreachable
}

declare i64 @___lazy_measure(i64) local_unnamed_addr

declare void @___qfree(i64) local_unnamed_addr

define { { i1, { i1, i64, i1 } }*, i64 } @"__hugr__.$array.__setitem__.classical.3$$t(bool)$n(10).576"({ { i1, { i1, i64, i1 } }*, i64 } returned %0, i64 %1, { i1, i64, i1 } %2) local_unnamed_addr {
alloca_block:
  %3 = icmp ult i64 %1, 10
  br i1 %3, label %5, label %4

4:                                                ; preds = %alloca_block
  %.fca.2.1.0.extract60 = extractvalue { i1, i64, i1 } %2, 0
  %.fca.2.1.1.extract62 = extractvalue { i1, i64, i1 } %2, 1
  br label %10

5:                                                ; preds = %alloca_block
  %6 = insertvalue { i1, { i1, i64, i1 } } { i1 true, { i1, i64, i1 } poison }, { i1, i64, i1 } %2, 1
  %.fca.1.extract74 = extractvalue { { i1, { i1, i64, i1 } }*, i64 } %0, 1
  %.fca.0.extract73 = extractvalue { { i1, { i1, i64, i1 } }*, i64 } %0, 0
  %7 = add i64 %.fca.1.extract74, %1
  %8 = getelementptr inbounds { i1, { i1, i64, i1 } }, { i1, { i1, i64, i1 } }* %.fca.0.extract73, i64 %7
  %9 = load { i1, { i1, i64, i1 } }, { i1, { i1, i64, i1 } }* %8, align 4
  store { i1, { i1, i64, i1 } } %6, { i1, { i1, i64, i1 } }* %8, align 4
  %.fca.2.0.extract = extractvalue { i1, { i1, i64, i1 } } %9, 0
  %.fca.2.1.0.extract = extractvalue { i1, { i1, i64, i1 } } %9, 1, 0
  %.fca.2.1.1.extract = extractvalue { i1, { i1, i64, i1 } } %9, 1, 1
  %phi.bo = xor i1 %.fca.2.0.extract, true
  br label %10

10:                                               ; preds = %4, %5
  %"06.sroa.9.0" = phi i1 [ %phi.bo, %5 ], [ false, %4 ]
  %"06.sroa.12.0" = phi i1 [ %.fca.2.1.0.extract, %5 ], [ %.fca.2.1.0.extract60, %4 ]
  %"06.sroa.15.0" = phi i64 [ %.fca.2.1.1.extract, %5 ], [ %.fca.2.1.1.extract62, %4 ]
  br i1 %3, label %cond_582_case_1, label %cond_582_case_0

cond_582_case_0:                                  ; preds = %10
  call void @panic(i32 1001, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @"e_Array inde.2A1CB845.0", i64 0, i64 0))
  unreachable

cond_582_case_1:                                  ; preds = %10
  %"06.sroa.12.0.not" = xor i1 %"06.sroa.12.0", true
  %brmerge = select i1 %"06.sroa.9.0", i1 true, i1 %"06.sroa.12.0.not"
  br i1 %brmerge, label %cond_exit_368, label %cond_404_case_1

cond_404_case_1:                                  ; preds = %cond_582_case_1
  call void @___dec_future_refcount(i64 %"06.sroa.15.0")
  br label %cond_exit_368

cond_exit_368:                                    ; preds = %cond_582_case_1, %cond_404_case_1
  ret { { i1, { i1, i64, i1 } }*, i64 } %0
}

define {} @"__hugr__.$ArrayIter._assert_all_used.helper.5$$t(qubit).538"({ i1, i64 } %0) local_unnamed_addr {
alloca_block:
  %.fca.0.extract = extractvalue { i1, i64 } %0, 0
  br i1 %.fca.0.extract, label %cond_541_case_1, label %cond_exit_541

cond_541_case_1:                                  ; preds = %alloca_block
  call void @panic(i32 1001, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @e_ArrayIter..ED8B8605.0, i64 0, i64 0))
  unreachable

cond_exit_541:                                    ; preds = %alloca_block
  ret {} undef
}

declare i64 @___qalloc() local_unnamed_addr

declare void @___reset(i64) local_unnamed_addr

declare void @___rxy(i64, double, double) local_unnamed_addr

define i64 @qmain(i64 %0) local_unnamed_addr {
entry:
  call void @setup(i64 %0)
  call void @__hugr__.main.1()
  %1 = call i64 @teardown()
  ret i64 %1
}

declare void @setup(i64) local_unnamed_addr

declare i64 @teardown() local_unnamed_addr

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

attributes #0 = { mustprogress nofree norecurse nosync nounwind readnone willreturn }
attributes #1 = { nobuiltin }
attributes #2 = { noreturn }
attributes #3 = { argmemonly nofree nounwind willreturn writeonly }

!name = !{!0}

!0 = !{!"mainlib"}
