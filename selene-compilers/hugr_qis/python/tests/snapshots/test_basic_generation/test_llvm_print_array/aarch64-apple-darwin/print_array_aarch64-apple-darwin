; ModuleID = 'hugr'
source_filename = "hugr"
target datalayout = "e-m:o-i64:64-i128:128-n32:64-S128"
target triple = "aarch64-apple-darwin"

@res_cs.46C3C4B5.0 = private constant [16 x i8] c"\0FUSER:BOOLARR:cs"
@res_is.F21393DB.0 = private constant [15 x i8] c"\0EUSER:INTARR:is"
@res_fs.CBD4AF54.0 = private constant [17 x i8] c"\10USER:FLOATARR:fs"
@"e_Array inde.2A1CB845.0" = private constant [35 x i8] c"\22EXIT:INT:Array index out of bounds"
@"e_Linear arr.8A243695.0" = private constant [48 x i8] c"/EXIT:INT:Linear array element has not been used"
@"e_Linear arr.27F92A51.0" = private constant [52 x i8] c"3EXIT:INT:Linear array element has already been used"
@e_ArrayIter..ED8B8605.0 = private constant [69 x i8] c"DEXIT:INT:ArrayIter._assert_all_used: array element has not been used"
@"e_No more qu.3B2EEBF0.0" = private constant [47 x i8] c".EXIT:INT:No more qubits available to allocate."

define void @__hugr__.main.1() {
alloca_block:
  %"164_0" = alloca {}, align 8
  %"163_0" = alloca {}, align 8
  %"159_0" = alloca double ({ i1, double })*, align 8
  %"126_0" = alloca i64, align 8
  %"124_0" = alloca i64, align 8
  %"128_0" = alloca { i64, i64 }, align 8
  %"129_0" = alloca i64, align 8
  %"129_1" = alloca i64, align 8
  %"130_0" = alloca { i64, i64 }, align 8
  %"122_0" = alloca i64, align 8
  %"120_0" = alloca { i1, double } ()*, align 8
  %"121_0" = alloca { { i1, double }*, i64 }, align 8
  %"119_0" = alloca {}, align 8
  %"115_0" = alloca i64 ({ i1, i64 })*, align 8
  %"86_0" = alloca i64, align 8
  %"84_0" = alloca i64, align 8
  %"88_0" = alloca { i64, i64 }, align 8
  %"89_0" = alloca i64, align 8
  %"89_1" = alloca i64, align 8
  %"90_0" = alloca { i64, i64 }, align 8
  %"82_0" = alloca i64, align 8
  %"80_0" = alloca { i1, i64 } ()*, align 8
  %"81_0" = alloca { { i1, i64 }*, i64 }, align 8
  %"79_0" = alloca {}, align 8
  %"75_0" = alloca i1 ({ i1, i64, i1 })*, align 8
  %"73_0" = alloca { i1, i64, i1 } ({ i1, { i1, i64, i1 } })*, align 8
  %"71_0" = alloca {}, align 8
  %"70_0" = alloca {}, align 8
  %"65_0" = alloca i64, align 8
  %"64_0" = alloca {}, align 8
  %"63_0" = alloca {}, align 8
  %"58_0" = alloca i64, align 8
  %"57_0" = alloca {}, align 8
  %"56_0" = alloca {}, align 8
  %"51_0" = alloca i64, align 8
  %"50_0" = alloca {}, align 8
  %"49_0" = alloca {}, align 8
  %"44_0" = alloca i64, align 8
  %"14_0" = alloca i64, align 8
  %"12_0" = alloca i64, align 8
  %"16_0" = alloca { i64, i64 }, align 8
  %"17_0" = alloca i64, align 8
  %"17_1" = alloca i64, align 8
  %"18_0" = alloca { i64, i64 }, align 8
  %"10_0" = alloca i64, align 8
  %"8_0" = alloca { i1, i64 } ()*, align 8
  %"9_0" = alloca { { i1, i64 }*, i64 }, align 8
  %"19_0" = alloca { { i1, i64 }*, i64 }, align 8
  %"19_1" = alloca i64, align 8
  %"20_0" = alloca { i64, i64 }, align 8
  %"20_1" = alloca { { i1, i64 }*, i64 }, align 8
  %"20_2" = alloca i64, align 8
  %"25_0" = alloca { i1, { i64, i64 } }, align 8
  %"25_1" = alloca { { i1, i64 }*, i64 }, align 8
  %"25_2" = alloca i64, align 8
  %"22_0" = alloca i64, align 8
  %"22_1" = alloca i64, align 8
  %"23_0" = alloca { i64, i64 }, align 8
  %"24_0" = alloca { i1, { { i64, i64 }, i64 } }, align 8
  %"0" = alloca { i1, { i64, i64 } }, align 8
  %"1" = alloca { { i1, i64 }*, i64 }, align 8
  %"2" = alloca i64, align 8
  %"035" = alloca { { i1, i64 }*, i64 }, align 8
  %"136" = alloca i64, align 8
  %"27_0" = alloca { { i1, i64 }*, i64 }, align 8
  %"27_1" = alloca i64, align 8
  %"29_0" = alloca { i1, { i64, i64 } }, align 8
  %"042" = alloca { { i64, i64 }, i64 }, align 8
  %"143" = alloca { { i1, i64 }*, i64 }, align 8
  %"244" = alloca i64, align 8
  %"31_0" = alloca { { i64, i64 }, i64 }, align 8
  %"31_1" = alloca { { i1, i64 }*, i64 }, align 8
  %"31_2" = alloca i64, align 8
  %"41_0" = alloca i64, align 8
  %"43_0" = alloca i64, align 8
  %"39_0" = alloca i64, align 8
  %"40_0" = alloca { { i1, i64 }*, i64 }, align 8
  %"33_0" = alloca i64, align 8
  %"33_1" = alloca { i64, i64 }, align 8
  %"34_0" = alloca i64, align 8
  %"34_1" = alloca i64, align 8
  %"35_0" = alloca { i64, i64 }, align 8
  %"36_0" = alloca { { i64, i64 }, i64 }, align 8
  %"37_0" = alloca i64, align 8
  %"37_1" = alloca { i64, i64 }, align 8
  %"38_0" = alloca { i1, { i64, i64 } }, align 8
  %"46_0" = alloca i64, align 8
  %"46_1" = alloca { { i1, i64 }*, i64 }, align 8
  %"47_0" = alloca i64, align 8
  %"48_0" = alloca { { i1, i64 }*, i64 }, align 8
  %"53_0" = alloca i64, align 8
  %"53_1" = alloca { { i1, i64 }*, i64 }, align 8
  %"54_0" = alloca i64, align 8
  %"55_0" = alloca { { i1, i64 }*, i64 }, align 8
  %"60_0" = alloca i64, align 8
  %"60_1" = alloca { { i1, i64 }*, i64 }, align 8
  %"61_0" = alloca i64, align 8
  %"62_0" = alloca { { i1, i64 }*, i64 }, align 8
  %"67_0" = alloca i64, align 8
  %"67_1" = alloca { { i1, i64 }*, i64 }, align 8
  %"68_0" = alloca i64, align 8
  %"69_0" = alloca { { i1, i64 }*, i64 }, align 8
  %"72_0" = alloca { { i1, { i1, i64, i1 } }*, i64 }, align 8
  %"74_0" = alloca { { i1, i64, i1 }*, i64 }, align 8
  %"76_0" = alloca { i1*, i64 }, align 8
  %"77_0" = alloca { i1*, i64 }, align 8
  %"91_0" = alloca { { i1, i64 }*, i64 }, align 8
  %"91_1" = alloca i64, align 8
  %"92_0" = alloca { i64, i64 }, align 8
  %"92_1" = alloca { { i1, i64 }*, i64 }, align 8
  %"92_2" = alloca i64, align 8
  %"97_0" = alloca { i1, { i64, i64 } }, align 8
  %"97_1" = alloca { { i1, i64 }*, i64 }, align 8
  %"97_2" = alloca i64, align 8
  %"94_0" = alloca i64, align 8
  %"94_1" = alloca i64, align 8
  %"95_0" = alloca { i64, i64 }, align 8
  %"96_0" = alloca { i1, { { i64, i64 }, i64 } }, align 8
  %"0121" = alloca { i1, { i64, i64 } }, align 8
  %"1122" = alloca { { i1, i64 }*, i64 }, align 8
  %"2123" = alloca i64, align 8
  %"0127" = alloca { { i1, i64 }*, i64 }, align 8
  %"1128" = alloca i64, align 8
  %"99_0" = alloca { { i1, i64 }*, i64 }, align 8
  %"99_1" = alloca i64, align 8
  %"101_0" = alloca { i1, { i64, i64 } }, align 8
  %"0134" = alloca { { i64, i64 }, i64 }, align 8
  %"1135" = alloca { { i1, i64 }*, i64 }, align 8
  %"2136" = alloca i64, align 8
  %"103_0" = alloca { { i64, i64 }, i64 }, align 8
  %"103_1" = alloca { { i1, i64 }*, i64 }, align 8
  %"103_2" = alloca i64, align 8
  %"112_0" = alloca i64, align 8
  %"114_0" = alloca i64, align 8
  %"105_0" = alloca i64, align 8
  %"105_1" = alloca { i64, i64 }, align 8
  %"106_0" = alloca i64, align 8
  %"106_1" = alloca i64, align 8
  %"107_0" = alloca { i64, i64 }, align 8
  %"108_0" = alloca { { i64, i64 }, i64 }, align 8
  %"109_0" = alloca i64, align 8
  %"109_1" = alloca { i64, i64 }, align 8
  %"111_0" = alloca { { i1, i64 }*, i64 }, align 8
  %"110_0" = alloca { i1, { i64, i64 } }, align 8
  %"116_0" = alloca { i64*, i64 }, align 8
  %"117_0" = alloca { i64*, i64 }, align 8
  %"131_0" = alloca { { i1, double }*, i64 }, align 8
  %"131_1" = alloca i64, align 8
  %"132_0" = alloca { i64, i64 }, align 8
  %"132_1" = alloca { { i1, double }*, i64 }, align 8
  %"132_2" = alloca i64, align 8
  %"137_0" = alloca { i1, { i64, i64 } }, align 8
  %"137_1" = alloca { { i1, double }*, i64 }, align 8
  %"137_2" = alloca i64, align 8
  %"134_0" = alloca i64, align 8
  %"134_1" = alloca i64, align 8
  %"135_0" = alloca { i64, i64 }, align 8
  %"136_0" = alloca { i1, { { i64, i64 }, i64 } }, align 8
  %"0192" = alloca { i1, { i64, i64 } }, align 8
  %"1193" = alloca { { i1, double }*, i64 }, align 8
  %"2194" = alloca i64, align 8
  %"0198" = alloca { { i1, double }*, i64 }, align 8
  %"1199" = alloca i64, align 8
  %"139_0" = alloca { { i1, double }*, i64 }, align 8
  %"139_1" = alloca i64, align 8
  %"141_0" = alloca { i1, { i64, i64 } }, align 8
  %"0205" = alloca { { i64, i64 }, i64 }, align 8
  %"1206" = alloca { { i1, double }*, i64 }, align 8
  %"2207" = alloca i64, align 8
  %"143_0" = alloca { { i64, i64 }, i64 }, align 8
  %"143_1" = alloca { { i1, double }*, i64 }, align 8
  %"143_2" = alloca i64, align 8
  %"156_0" = alloca i64, align 8
  %"158_0" = alloca i64, align 8
  %"152_0" = alloca double, align 8
  %"145_0" = alloca i64, align 8
  %"145_1" = alloca { i64, i64 }, align 8
  %"146_0" = alloca i64, align 8
  %"146_1" = alloca i64, align 8
  %"147_0" = alloca { i64, i64 }, align 8
  %"148_0" = alloca { { i64, i64 }, i64 }, align 8
  %"149_0" = alloca i64, align 8
  %"149_1" = alloca { i64, i64 }, align 8
  %"151_0" = alloca double, align 8
  %"154_0" = alloca double, align 8
  %"155_0" = alloca { { i1, double }*, i64 }, align 8
  %"150_0" = alloca { i1, { i64, i64 } }, align 8
  %"160_0" = alloca { double*, i64 }, align 8
  %"161_0" = alloca { double*, i64 }, align 8
  br label %entry_block

entry_block:                                      ; preds = %alloca_block
  br label %0

0:                                                ; preds = %entry_block
  store {} undef, {}* %"164_0", align 1
  store {} undef, {}* %"163_0", align 1
  store double ({ i1, double })* @"__hugr__.$array.__unwrap_elem.7$$t(float64).664", double ({ i1, double })** %"159_0", align 8
  store i64 100, i64* %"126_0", align 4
  store i64 0, i64* %"124_0", align 4
  %"124_01" = load i64, i64* %"124_0", align 4
  %"126_02" = load i64, i64* %"126_0", align 4
  %1 = insertvalue { i64, i64 } poison, i64 %"124_01", 0
  %2 = insertvalue { i64, i64 } %1, i64 %"126_02", 1
  store { i64, i64 } %2, { i64, i64 }* %"128_0", align 4
  %"128_03" = load { i64, i64 }, { i64, i64 }* %"128_0", align 4
  %3 = extractvalue { i64, i64 } %"128_03", 0
  %4 = extractvalue { i64, i64 } %"128_03", 1
  store i64 %3, i64* %"129_0", align 4
  store i64 %4, i64* %"129_1", align 4
  %"129_04" = load i64, i64* %"129_0", align 4
  %"129_15" = load i64, i64* %"129_1", align 4
  %5 = insertvalue { i64, i64 } poison, i64 %"129_04", 0
  %6 = insertvalue { i64, i64 } %5, i64 %"129_15", 1
  store { i64, i64 } %6, { i64, i64 }* %"130_0", align 4
  store i64 0, i64* %"122_0", align 4
  store { i1, double } ()* @"__hugr__.$array.__comprehension.init.6$$t(float64).644", { i1, double } ()** %"120_0", align 8
  %"120_06" = load { i1, double } ()*, { i1, double } ()** %"120_0", align 8
  %7 = call i8* @malloc(i64 mul (i64 ptrtoint ({ i1, double }* getelementptr ({ i1, double }, { i1, double }* null, i32 1) to i64), i64 100))
  %8 = bitcast i8* %7 to { i1, double }*
  %9 = insertvalue { { i1, double }*, i64 } poison, { i1, double }* %8, 0
  %10 = insertvalue { { i1, double }*, i64 } %9, i64 0, 1
  %11 = alloca i64, align 8
  store i64 0, i64* %11, align 4
  br label %13

12:                                               ; preds = %248
  ret void

13:                                               ; preds = %16, %0
  %14 = load i64, i64* %11, align 4
  %15 = icmp ult i64 %14, 100
  br i1 %15, label %16, label %21

16:                                               ; preds = %13
  %17 = load i64, i64* %11, align 4
  %18 = call { i1, double } %"120_06"()
  %19 = getelementptr inbounds { i1, double }, { i1, double }* %8, i64 %17
  store { i1, double } %18, { i1, double }* %19, align 8
  %20 = add i64 %17, 1
  store i64 %20, i64* %11, align 4
  br label %13

21:                                               ; preds = %13
  store { { i1, double }*, i64 } %10, { { i1, double }*, i64 }* %"121_0", align 8
  store {} undef, {}* %"119_0", align 1
  store i64 ({ i1, i64 })* @"__hugr__.$array.__unwrap_elem.7$$t(int(6)).631", i64 ({ i1, i64 })** %"115_0", align 8
  store i64 100, i64* %"86_0", align 4
  store i64 0, i64* %"84_0", align 4
  %"84_07" = load i64, i64* %"84_0", align 4
  %"86_08" = load i64, i64* %"86_0", align 4
  %22 = insertvalue { i64, i64 } poison, i64 %"84_07", 0
  %23 = insertvalue { i64, i64 } %22, i64 %"86_08", 1
  store { i64, i64 } %23, { i64, i64 }* %"88_0", align 4
  %"88_09" = load { i64, i64 }, { i64, i64 }* %"88_0", align 4
  %24 = extractvalue { i64, i64 } %"88_09", 0
  %25 = extractvalue { i64, i64 } %"88_09", 1
  store i64 %24, i64* %"89_0", align 4
  store i64 %25, i64* %"89_1", align 4
  %"89_010" = load i64, i64* %"89_0", align 4
  %"89_111" = load i64, i64* %"89_1", align 4
  %26 = insertvalue { i64, i64 } poison, i64 %"89_010", 0
  %27 = insertvalue { i64, i64 } %26, i64 %"89_111", 1
  store { i64, i64 } %27, { i64, i64 }* %"90_0", align 4
  store i64 0, i64* %"82_0", align 4
  store { i1, i64 } ()* @"__hugr__.$array.__comprehension.init.6$$t(int(6)).611", { i1, i64 } ()** %"80_0", align 8
  %"80_012" = load { i1, i64 } ()*, { i1, i64 } ()** %"80_0", align 8
  %28 = call i8* @malloc(i64 mul (i64 ptrtoint ({ i1, i64 }* getelementptr ({ i1, i64 }, { i1, i64 }* null, i32 1) to i64), i64 100))
  %29 = bitcast i8* %28 to { i1, i64 }*
  %30 = insertvalue { { i1, i64 }*, i64 } poison, { i1, i64 }* %29, 0
  %31 = insertvalue { { i1, i64 }*, i64 } %30, i64 0, 1
  %32 = alloca i64, align 8
  store i64 0, i64* %32, align 4
  br label %33

33:                                               ; preds = %36, %21
  %34 = load i64, i64* %32, align 4
  %35 = icmp ult i64 %34, 100
  br i1 %35, label %36, label %41

36:                                               ; preds = %33
  %37 = load i64, i64* %32, align 4
  %38 = call { i1, i64 } %"80_012"()
  %39 = getelementptr inbounds { i1, i64 }, { i1, i64 }* %29, i64 %37
  store { i1, i64 } %38, { i1, i64 }* %39, align 4
  %40 = add i64 %37, 1
  store i64 %40, i64* %32, align 4
  br label %33

41:                                               ; preds = %33
  store { { i1, i64 }*, i64 } %31, { { i1, i64 }*, i64 }* %"81_0", align 8
  store {} undef, {}* %"79_0", align 1
  store i1 ({ i1, i64, i1 })* @__hugr__.array.__read_bool.9.312, i1 ({ i1, i64, i1 })** %"75_0", align 8
  store { i1, i64, i1 } ({ i1, { i1, i64, i1 } })* @"__hugr__.$array.__unwrap_elem.7$$t(bool).598", { i1, i64, i1 } ({ i1, { i1, i64, i1 } })** %"73_0", align 8
  store {} undef, {}* %"71_0", align 1
  store {} undef, {}* %"70_0", align 1
  store i64 9, i64* %"65_0", align 4
  store {} undef, {}* %"64_0", align 1
  store {} undef, {}* %"63_0", align 1
  store i64 3, i64* %"58_0", align 4
  store {} undef, {}* %"57_0", align 1
  store {} undef, {}* %"56_0", align 1
  store i64 2, i64* %"51_0", align 4
  store {} undef, {}* %"50_0", align 1
  store {} undef, {}* %"49_0", align 1
  store i64 0, i64* %"44_0", align 4
  store i64 10, i64* %"14_0", align 4
  store i64 0, i64* %"12_0", align 4
  %"12_013" = load i64, i64* %"12_0", align 4
  %"14_014" = load i64, i64* %"14_0", align 4
  %42 = insertvalue { i64, i64 } poison, i64 %"12_013", 0
  %43 = insertvalue { i64, i64 } %42, i64 %"14_014", 1
  store { i64, i64 } %43, { i64, i64 }* %"16_0", align 4
  %"16_015" = load { i64, i64 }, { i64, i64 }* %"16_0", align 4
  %44 = extractvalue { i64, i64 } %"16_015", 0
  %45 = extractvalue { i64, i64 } %"16_015", 1
  store i64 %44, i64* %"17_0", align 4
  store i64 %45, i64* %"17_1", align 4
  %"17_016" = load i64, i64* %"17_0", align 4
  %"17_117" = load i64, i64* %"17_1", align 4
  %46 = insertvalue { i64, i64 } poison, i64 %"17_016", 0
  %47 = insertvalue { i64, i64 } %46, i64 %"17_117", 1
  store { i64, i64 } %47, { i64, i64 }* %"18_0", align 4
  store i64 0, i64* %"10_0", align 4
  store { i1, i64 } ()* @"__hugr__.$array.__comprehension.init.6$$t(qubit).414", { i1, i64 } ()** %"8_0", align 8
  %"8_018" = load { i1, i64 } ()*, { i1, i64 } ()** %"8_0", align 8
  %48 = call i8* @malloc(i64 mul (i64 ptrtoint ({ i1, i64 }* getelementptr ({ i1, i64 }, { i1, i64 }* null, i32 1) to i64), i64 10))
  %49 = bitcast i8* %48 to { i1, i64 }*
  %50 = insertvalue { { i1, i64 }*, i64 } poison, { i1, i64 }* %49, 0
  %51 = insertvalue { { i1, i64 }*, i64 } %50, i64 0, 1
  %52 = alloca i64, align 8
  store i64 0, i64* %52, align 4
  br label %53

53:                                               ; preds = %56, %41
  %54 = load i64, i64* %52, align 4
  %55 = icmp ult i64 %54, 10
  br i1 %55, label %56, label %61

56:                                               ; preds = %53
  %57 = load i64, i64* %52, align 4
  %58 = call { i1, i64 } %"8_018"()
  %59 = getelementptr inbounds { i1, i64 }, { i1, i64 }* %49, i64 %57
  store { i1, i64 } %58, { i1, i64 }* %59, align 4
  %60 = add i64 %57, 1
  store i64 %60, i64* %52, align 4
  br label %53

61:                                               ; preds = %53
  store { { i1, i64 }*, i64 } %51, { { i1, i64 }*, i64 }* %"9_0", align 8
  %"18_019" = load { i64, i64 }, { i64, i64 }* %"18_0", align 4
  %"9_020" = load { { i1, i64 }*, i64 }, { { i1, i64 }*, i64 }* %"9_0", align 8
  %"10_021" = load i64, i64* %"10_0", align 4
  store { i64, i64 } %"18_019", { i64, i64 }* %"20_0", align 4
  store { { i1, i64 }*, i64 } %"9_020", { { i1, i64 }*, i64 }* %"20_1", align 8
  store i64 %"10_021", i64* %"20_2", align 4
  br label %loop_body

loop_body:                                        ; preds = %112, %61
  %"20_022" = load { i64, i64 }, { i64, i64 }* %"20_0", align 4
  %"20_123" = load { { i1, i64 }*, i64 }, { { i1, i64 }*, i64 }* %"20_1", align 8
  %"20_224" = load i64, i64* %"20_2", align 4
  store { i64, i64 } %"20_022", { i64, i64 }* %"20_0", align 4
  store { { i1, i64 }*, i64 } %"20_123", { { i1, i64 }*, i64 }* %"20_1", align 8
  store i64 %"20_224", i64* %"20_2", align 4
  %"20_025" = load { i64, i64 }, { i64, i64 }* %"20_0", align 4
  %62 = extractvalue { i64, i64 } %"20_025", 0
  %63 = extractvalue { i64, i64 } %"20_025", 1
  store i64 %62, i64* %"22_0", align 4
  store i64 %63, i64* %"22_1", align 4
  %"22_026" = load i64, i64* %"22_0", align 4
  %"22_127" = load i64, i64* %"22_1", align 4
  %64 = insertvalue { i64, i64 } poison, i64 %"22_026", 0
  %65 = insertvalue { i64, i64 } %64, i64 %"22_127", 1
  store { i64, i64 } %65, { i64, i64 }* %"23_0", align 4
  %"23_028" = load { i64, i64 }, { i64, i64 }* %"23_0", align 4
  %66 = call { i1, { { i64, i64 }, i64 } } @__hugr__.__next__.170({ i64, i64 } %"23_028")
  store { i1, { { i64, i64 }, i64 } } %66, { i1, { { i64, i64 }, i64 } }* %"24_0", align 4
  %"24_029" = load { i1, { { i64, i64 }, i64 } }, { i1, { { i64, i64 }, i64 } }* %"24_0", align 4
  %"20_130" = load { { i1, i64 }*, i64 }, { { i1, i64 }*, i64 }* %"20_1", align 8
  %"20_231" = load i64, i64* %"20_2", align 4
  %67 = extractvalue { i1, { { i64, i64 }, i64 } } %"24_029", 0
  switch i1 %67, label %68 [
    i1 true, label %69
  ]

68:                                               ; preds = %loop_body
  store { { i1, i64 }*, i64 } %"20_130", { { i1, i64 }*, i64 }* %"035", align 8
  store i64 %"20_231", i64* %"136", align 4
  br label %cond_25_case_0

69:                                               ; preds = %loop_body
  %70 = extractvalue { i1, { { i64, i64 }, i64 } } %"24_029", 1
  store { { i64, i64 }, i64 } %70, { { i64, i64 }, i64 }* %"042", align 4
  store { { i1, i64 }*, i64 } %"20_130", { { i1, i64 }*, i64 }* %"143", align 8
  store i64 %"20_231", i64* %"244", align 4
  br label %cond_25_case_1

loop_out:                                         ; preds = %114
  %"19_070" = load { { i1, i64 }*, i64 }, { { i1, i64 }*, i64 }* %"19_0", align 8
  %"44_071" = load i64, i64* %"44_0", align 4
  %71 = call { i64, { { i1, i64 }*, i64 } } @"__hugr__.$array.__getitem__.linear.2$$t(qubit)$n(10).444"({ { i1, i64 }*, i64 } %"19_070", i64 %"44_071")
  %72 = extractvalue { i64, { { i1, i64 }*, i64 } } %71, 0
  %73 = extractvalue { i64, { { i1, i64 }*, i64 } } %71, 1
  store i64 %72, i64* %"46_0", align 4
  store { { i1, i64 }*, i64 } %73, { { i1, i64 }*, i64 }* %"46_1", align 8
  %"46_072" = load i64, i64* %"46_0", align 4
  %74 = call i64 @__hugr__.__tk2_x.378(i64 %"46_072")
  store i64 %74, i64* %"47_0", align 4
  %"46_173" = load { { i1, i64 }*, i64 }, { { i1, i64 }*, i64 }* %"46_1", align 8
  %"44_074" = load i64, i64* %"44_0", align 4
  %"47_075" = load i64, i64* %"47_0", align 4
  %75 = call { { i1, i64 }*, i64 } @"__hugr__.$array.__setitem__.linear.4$$t(qubit)$n(10).418"({ { i1, i64 }*, i64 } %"46_173", i64 %"44_074", i64 %"47_075")
  store { { i1, i64 }*, i64 } %75, { { i1, i64 }*, i64 }* %"48_0", align 8
  %"48_076" = load { { i1, i64 }*, i64 }, { { i1, i64 }*, i64 }* %"48_0", align 8
  %"51_077" = load i64, i64* %"51_0", align 4
  %76 = call { i64, { { i1, i64 }*, i64 } } @"__hugr__.$array.__getitem__.linear.2$$t(qubit)$n(10).444"({ { i1, i64 }*, i64 } %"48_076", i64 %"51_077")
  %77 = extractvalue { i64, { { i1, i64 }*, i64 } } %76, 0
  %78 = extractvalue { i64, { { i1, i64 }*, i64 } } %76, 1
  store i64 %77, i64* %"53_0", align 4
  store { { i1, i64 }*, i64 } %78, { { i1, i64 }*, i64 }* %"53_1", align 8
  %"53_078" = load i64, i64* %"53_0", align 4
  %79 = call i64 @__hugr__.__tk2_x.378(i64 %"53_078")
  store i64 %79, i64* %"54_0", align 4
  %"53_179" = load { { i1, i64 }*, i64 }, { { i1, i64 }*, i64 }* %"53_1", align 8
  %"51_080" = load i64, i64* %"51_0", align 4
  %"54_081" = load i64, i64* %"54_0", align 4
  %80 = call { { i1, i64 }*, i64 } @"__hugr__.$array.__setitem__.linear.4$$t(qubit)$n(10).418"({ { i1, i64 }*, i64 } %"53_179", i64 %"51_080", i64 %"54_081")
  store { { i1, i64 }*, i64 } %80, { { i1, i64 }*, i64 }* %"55_0", align 8
  %"55_082" = load { { i1, i64 }*, i64 }, { { i1, i64 }*, i64 }* %"55_0", align 8
  %"58_083" = load i64, i64* %"58_0", align 4
  %81 = call { i64, { { i1, i64 }*, i64 } } @"__hugr__.$array.__getitem__.linear.2$$t(qubit)$n(10).444"({ { i1, i64 }*, i64 } %"55_082", i64 %"58_083")
  %82 = extractvalue { i64, { { i1, i64 }*, i64 } } %81, 0
  %83 = extractvalue { i64, { { i1, i64 }*, i64 } } %81, 1
  store i64 %82, i64* %"60_0", align 4
  store { { i1, i64 }*, i64 } %83, { { i1, i64 }*, i64 }* %"60_1", align 8
  %"60_084" = load i64, i64* %"60_0", align 4
  %84 = call i64 @__hugr__.__tk2_x.378(i64 %"60_084")
  store i64 %84, i64* %"61_0", align 4
  %"60_185" = load { { i1, i64 }*, i64 }, { { i1, i64 }*, i64 }* %"60_1", align 8
  %"58_086" = load i64, i64* %"58_0", align 4
  %"61_087" = load i64, i64* %"61_0", align 4
  %85 = call { { i1, i64 }*, i64 } @"__hugr__.$array.__setitem__.linear.4$$t(qubit)$n(10).418"({ { i1, i64 }*, i64 } %"60_185", i64 %"58_086", i64 %"61_087")
  store { { i1, i64 }*, i64 } %85, { { i1, i64 }*, i64 }* %"62_0", align 8
  %"62_088" = load { { i1, i64 }*, i64 }, { { i1, i64 }*, i64 }* %"62_0", align 8
  %"65_089" = load i64, i64* %"65_0", align 4
  %86 = call { i64, { { i1, i64 }*, i64 } } @"__hugr__.$array.__getitem__.linear.2$$t(qubit)$n(10).444"({ { i1, i64 }*, i64 } %"62_088", i64 %"65_089")
  %87 = extractvalue { i64, { { i1, i64 }*, i64 } } %86, 0
  %88 = extractvalue { i64, { { i1, i64 }*, i64 } } %86, 1
  store i64 %87, i64* %"67_0", align 4
  store { { i1, i64 }*, i64 } %88, { { i1, i64 }*, i64 }* %"67_1", align 8
  %"67_090" = load i64, i64* %"67_0", align 4
  %89 = call i64 @__hugr__.__tk2_x.378(i64 %"67_090")
  store i64 %89, i64* %"68_0", align 4
  %"67_191" = load { { i1, i64 }*, i64 }, { { i1, i64 }*, i64 }* %"67_1", align 8
  %"65_092" = load i64, i64* %"65_0", align 4
  %"68_093" = load i64, i64* %"68_0", align 4
  %90 = call { { i1, i64 }*, i64 } @"__hugr__.$array.__setitem__.linear.4$$t(qubit)$n(10).418"({ { i1, i64 }*, i64 } %"67_191", i64 %"65_092", i64 %"68_093")
  store { { i1, i64 }*, i64 } %90, { { i1, i64 }*, i64 }* %"69_0", align 8
  %"69_094" = load { { i1, i64 }*, i64 }, { { i1, i64 }*, i64 }* %"69_0", align 8
  %91 = call { { i1, { i1, i64, i1 } }*, i64 } @"__hugr__.$measure_array$$n(10).472"({ { i1, i64 }*, i64 } %"69_094")
  store { { i1, { i1, i64, i1 } }*, i64 } %91, { { i1, { i1, i64, i1 } }*, i64 }* %"72_0", align 8
  %"72_095" = load { { i1, { i1, i64, i1 } }*, i64 }, { { i1, { i1, i64, i1 } }*, i64 }* %"72_0", align 8
  %"73_096" = load { i1, i64, i1 } ({ i1, { i1, i64, i1 } })*, { i1, i64, i1 } ({ i1, { i1, i64, i1 } })** %"73_0", align 8
  %array_ptr = extractvalue { { i1, { i1, i64, i1 } }*, i64 } %"72_095", 0
  %array_offset = extractvalue { { i1, { i1, i64, i1 } }*, i64 } %"72_095", 1
  %92 = call i8* @malloc(i64 mul (i64 ptrtoint ({ i1, i64, i1 }* getelementptr ({ i1, i64, i1 }, { i1, i64, i1 }* null, i32 1) to i64), i64 10))
  %93 = bitcast i8* %92 to { i1, i64, i1 }*
  %94 = insertvalue { { i1, i64, i1 }*, i64 } poison, { i1, i64, i1 }* %93, 0
  %95 = insertvalue { { i1, i64, i1 }*, i64 } %94, i64 0, 1
  %96 = alloca i64, align 8
  store i64 0, i64* %96, align 4
  br label %115

cond_25_case_0:                                   ; preds = %68
  %"037" = load { { i1, i64 }*, i64 }, { { i1, i64 }*, i64 }* %"035", align 8
  %"138" = load i64, i64* %"136", align 4
  store { { i1, i64 }*, i64 } %"037", { { i1, i64 }*, i64 }* %"27_0", align 8
  store i64 %"138", i64* %"27_1", align 4
  store { i1, { i64, i64 } } { i1 true, { i64, i64 } poison }, { i1, { i64, i64 } }* %"29_0", align 4
  %"29_039" = load { i1, { i64, i64 } }, { i1, { i64, i64 } }* %"29_0", align 4
  %"27_040" = load { { i1, i64 }*, i64 }, { { i1, i64 }*, i64 }* %"27_0", align 8
  %"27_141" = load i64, i64* %"27_1", align 4
  store { i1, { i64, i64 } } %"29_039", { i1, { i64, i64 } }* %"0", align 4
  store { { i1, i64 }*, i64 } %"27_040", { { i1, i64 }*, i64 }* %"1", align 8
  store i64 %"27_141", i64* %"2", align 4
  br label %cond_exit_25

cond_25_case_1:                                   ; preds = %69
  %"045" = load { { i64, i64 }, i64 }, { { i64, i64 }, i64 }* %"042", align 4
  %"146" = load { { i1, i64 }*, i64 }, { { i1, i64 }*, i64 }* %"143", align 8
  %"247" = load i64, i64* %"244", align 4
  store { { i64, i64 }, i64 } %"045", { { i64, i64 }, i64 }* %"31_0", align 4
  store { { i1, i64 }*, i64 } %"146", { { i1, i64 }*, i64 }* %"31_1", align 8
  store i64 %"247", i64* %"31_2", align 4
  store i64 1, i64* %"41_0", align 4
  %"31_248" = load i64, i64* %"31_2", align 4
  %"41_049" = load i64, i64* %"41_0", align 4
  %97 = add i64 %"31_248", %"41_049"
  store i64 %97, i64* %"43_0", align 4
  %98 = call i64 @__hugr__.__tk2_qalloc.391()
  store i64 %98, i64* %"39_0", align 4
  %"31_150" = load { { i1, i64 }*, i64 }, { { i1, i64 }*, i64 }* %"31_1", align 8
  %"31_251" = load i64, i64* %"31_2", align 4
  %"39_052" = load i64, i64* %"39_0", align 4
  %99 = call { { i1, i64 }*, i64 } @"__hugr__.$array.__setitem__.linear.4$$t(qubit)$n(10).418"({ { i1, i64 }*, i64 } %"31_150", i64 %"31_251", i64 %"39_052")
  store { { i1, i64 }*, i64 } %99, { { i1, i64 }*, i64 }* %"40_0", align 8
  %"31_053" = load { { i64, i64 }, i64 }, { { i64, i64 }, i64 }* %"31_0", align 4
  %100 = extractvalue { { i64, i64 }, i64 } %"31_053", 1
  %101 = extractvalue { { i64, i64 }, i64 } %"31_053", 0
  store i64 %100, i64* %"33_0", align 4
  store { i64, i64 } %101, { i64, i64 }* %"33_1", align 4
  %"33_154" = load { i64, i64 }, { i64, i64 }* %"33_1", align 4
  %102 = extractvalue { i64, i64 } %"33_154", 0
  %103 = extractvalue { i64, i64 } %"33_154", 1
  store i64 %102, i64* %"34_0", align 4
  store i64 %103, i64* %"34_1", align 4
  %"34_055" = load i64, i64* %"34_0", align 4
  %"34_156" = load i64, i64* %"34_1", align 4
  %104 = insertvalue { i64, i64 } poison, i64 %"34_055", 0
  %105 = insertvalue { i64, i64 } %104, i64 %"34_156", 1
  store { i64, i64 } %105, { i64, i64 }* %"35_0", align 4
  %"33_057" = load i64, i64* %"33_0", align 4
  %"35_058" = load { i64, i64 }, { i64, i64 }* %"35_0", align 4
  %106 = insertvalue { { i64, i64 }, i64 } poison, i64 %"33_057", 1
  %107 = insertvalue { { i64, i64 }, i64 } %106, { i64, i64 } %"35_058", 0
  store { { i64, i64 }, i64 } %107, { { i64, i64 }, i64 }* %"36_0", align 4
  %"36_059" = load { { i64, i64 }, i64 }, { { i64, i64 }, i64 }* %"36_0", align 4
  %108 = extractvalue { { i64, i64 }, i64 } %"36_059", 1
  %109 = extractvalue { { i64, i64 }, i64 } %"36_059", 0
  store i64 %108, i64* %"37_0", align 4
  store { i64, i64 } %109, { i64, i64 }* %"37_1", align 4
  %"37_160" = load { i64, i64 }, { i64, i64 }* %"37_1", align 4
  %110 = insertvalue { i1, { i64, i64 } } { i1 false, { i64, i64 } poison }, { i64, i64 } %"37_160", 1
  store { i1, { i64, i64 } } %110, { i1, { i64, i64 } }* %"38_0", align 4
  %"38_061" = load { i1, { i64, i64 } }, { i1, { i64, i64 } }* %"38_0", align 4
  %"40_062" = load { { i1, i64 }*, i64 }, { { i1, i64 }*, i64 }* %"40_0", align 8
  %"43_063" = load i64, i64* %"43_0", align 4
  store { i1, { i64, i64 } } %"38_061", { i1, { i64, i64 } }* %"0", align 4
  store { { i1, i64 }*, i64 } %"40_062", { { i1, i64 }*, i64 }* %"1", align 8
  store i64 %"43_063", i64* %"2", align 4
  br label %cond_exit_25

cond_exit_25:                                     ; preds = %cond_25_case_1, %cond_25_case_0
  %"032" = load { i1, { i64, i64 } }, { i1, { i64, i64 } }* %"0", align 4
  %"133" = load { { i1, i64 }*, i64 }, { { i1, i64 }*, i64 }* %"1", align 8
  %"234" = load i64, i64* %"2", align 4
  store { i1, { i64, i64 } } %"032", { i1, { i64, i64 } }* %"25_0", align 4
  store { { i1, i64 }*, i64 } %"133", { { i1, i64 }*, i64 }* %"25_1", align 8
  store i64 %"234", i64* %"25_2", align 4
  %"25_064" = load { i1, { i64, i64 } }, { i1, { i64, i64 } }* %"25_0", align 4
  %"25_165" = load { { i1, i64 }*, i64 }, { { i1, i64 }*, i64 }* %"25_1", align 8
  %"25_266" = load i64, i64* %"25_2", align 4
  store { i1, { i64, i64 } } %"25_064", { i1, { i64, i64 } }* %"25_0", align 4
  store { { i1, i64 }*, i64 } %"25_165", { { i1, i64 }*, i64 }* %"25_1", align 8
  store i64 %"25_266", i64* %"25_2", align 4
  %"25_067" = load { i1, { i64, i64 } }, { i1, { i64, i64 } }* %"25_0", align 4
  %"25_168" = load { { i1, i64 }*, i64 }, { { i1, i64 }*, i64 }* %"25_1", align 8
  %"25_269" = load i64, i64* %"25_2", align 4
  %111 = extractvalue { i1, { i64, i64 } } %"25_067", 0
  switch i1 %111, label %112 [
    i1 true, label %114
  ]

112:                                              ; preds = %cond_exit_25
  %113 = extractvalue { i1, { i64, i64 } } %"25_067", 1
  store { i64, i64 } %113, { i64, i64 }* %"20_0", align 4
  store { { i1, i64 }*, i64 } %"25_168", { { i1, i64 }*, i64 }* %"20_1", align 8
  store i64 %"25_269", i64* %"20_2", align 4
  br label %loop_body

114:                                              ; preds = %cond_exit_25
  store { { i1, i64 }*, i64 } %"25_168", { { i1, i64 }*, i64 }* %"19_0", align 8
  store i64 %"25_269", i64* %"19_1", align 4
  br label %loop_out

115:                                              ; preds = %118, %loop_out
  %116 = load i64, i64* %96, align 4
  %117 = icmp ult i64 %116, 10
  br i1 %117, label %118, label %126

118:                                              ; preds = %115
  %119 = load i64, i64* %96, align 4
  %120 = add i64 %119, %array_offset
  %121 = getelementptr inbounds { i1, { i1, i64, i1 } }, { i1, { i1, i64, i1 } }* %array_ptr, i64 %120
  %122 = load { i1, { i1, i64, i1 } }, { i1, { i1, i64, i1 } }* %121, align 4
  %123 = call { i1, i64, i1 } %"73_096"({ i1, { i1, i64, i1 } } %122)
  %124 = getelementptr inbounds { i1, i64, i1 }, { i1, i64, i1 }* %93, i64 %119
  store { i1, i64, i1 } %123, { i1, i64, i1 }* %124, align 4
  %125 = add i64 %119, 1
  store i64 %125, i64* %96, align 4
  br label %115

126:                                              ; preds = %115
  %127 = bitcast { i1, { i1, i64, i1 } }* %array_ptr to i8*
  call void @free(i8* %127)
  store { { i1, i64, i1 }*, i64 } %95, { { i1, i64, i1 }*, i64 }* %"74_0", align 8
  %"74_097" = load { { i1, i64, i1 }*, i64 }, { { i1, i64, i1 }*, i64 }* %"74_0", align 8
  %"75_098" = load i1 ({ i1, i64, i1 })*, i1 ({ i1, i64, i1 })** %"75_0", align 8
  %array_ptr99 = extractvalue { { i1, i64, i1 }*, i64 } %"74_097", 0
  %array_offset100 = extractvalue { { i1, i64, i1 }*, i64 } %"74_097", 1
  %128 = call i8* @malloc(i64 mul (i64 ptrtoint (i1* getelementptr (i1, i1* null, i32 1) to i64), i64 10))
  %129 = bitcast i8* %128 to i1*
  %130 = insertvalue { i1*, i64 } poison, i1* %129, 0
  %131 = insertvalue { i1*, i64 } %130, i64 0, 1
  %132 = alloca i64, align 8
  store i64 0, i64* %132, align 4
  br label %133

133:                                              ; preds = %136, %126
  %134 = load i64, i64* %132, align 4
  %135 = icmp ult i64 %134, 10
  br i1 %135, label %136, label %144

136:                                              ; preds = %133
  %137 = load i64, i64* %132, align 4
  %138 = add i64 %137, %array_offset100
  %139 = getelementptr inbounds { i1, i64, i1 }, { i1, i64, i1 }* %array_ptr99, i64 %138
  %140 = load { i1, i64, i1 }, { i1, i64, i1 }* %139, align 4
  %141 = call i1 %"75_098"({ i1, i64, i1 } %140)
  %142 = getelementptr inbounds i1, i1* %129, i64 %137
  store i1 %141, i1* %142, align 1
  %143 = add i64 %137, 1
  store i64 %143, i64* %132, align 4
  br label %133

144:                                              ; preds = %133
  %145 = bitcast { i1, i64, i1 }* %array_ptr99 to i8*
  call void @free(i8* %145)
  store { i1*, i64 } %131, { i1*, i64 }* %"76_0", align 8
  %"76_0101" = load { i1*, i64 }, { i1*, i64 }* %"76_0", align 8
  store { i1*, i64 } %"76_0101", { i1*, i64 }* %"77_0", align 8
  %"77_0102" = load { i1*, i64 }, { i1*, i64 }* %"77_0", align 8
  %tag_len = load i8, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @res_cs.46C3C4B5.0, i32 0, i32 0), align 1
  %tag_len103 = zext i8 %tag_len to i64
  %array_ptr104 = extractvalue { i1*, i64 } %"77_0102", 0
  %array_offset105 = extractvalue { i1*, i64 } %"77_0102", 1
  %146 = getelementptr inbounds i1, i1* %array_ptr104, i64 %array_offset105
  %out_arr_alloca = alloca <{ i32, i32, i1*, i1* }>, align 8
  %x_ptr = getelementptr inbounds <{ i32, i32, i1*, i1* }>, <{ i32, i32, i1*, i1* }>* %out_arr_alloca, i32 0, i32 0
  %y_ptr = getelementptr inbounds <{ i32, i32, i1*, i1* }>, <{ i32, i32, i1*, i1* }>* %out_arr_alloca, i32 0, i32 1
  %arr_ptr = getelementptr inbounds <{ i32, i32, i1*, i1* }>, <{ i32, i32, i1*, i1* }>* %out_arr_alloca, i32 0, i32 2
  %mask_ptr = getelementptr inbounds <{ i32, i32, i1*, i1* }>, <{ i32, i32, i1*, i1* }>* %out_arr_alloca, i32 0, i32 3
  %147 = alloca i1, i32 10, align 1
  %148 = bitcast i1* %147 to [10 x i1]*
  store [10 x i1] zeroinitializer, [10 x i1]* %148, align 1
  store i32 10, i32* %x_ptr, align 4
  store i32 1, i32* %y_ptr, align 4
  store i1* %146, i1** %arr_ptr, align 8
  store i1* %147, i1** %mask_ptr, align 8
  %149 = load <{ i32, i32, i1*, i1* }>, <{ i32, i32, i1*, i1* }>* %out_arr_alloca, align 1
  call void @print_bool_arr(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @res_cs.46C3C4B5.0, i32 0, i32 0), i64 %tag_len103, <{ i32, i32, i1*, i1* }>* %out_arr_alloca)
  %"90_0106" = load { i64, i64 }, { i64, i64 }* %"90_0", align 4
  %"81_0107" = load { { i1, i64 }*, i64 }, { { i1, i64 }*, i64 }* %"81_0", align 8
  %"82_0108" = load i64, i64* %"82_0", align 4
  store { i64, i64 } %"90_0106", { i64, i64 }* %"92_0", align 4
  store { { i1, i64 }*, i64 } %"81_0107", { { i1, i64 }*, i64 }* %"92_1", align 8
  store i64 %"82_0108", i64* %"92_2", align 4
  br label %loop_body110

loop_body110:                                     ; preds = %178, %144
  %"92_0111" = load { i64, i64 }, { i64, i64 }* %"92_0", align 4
  %"92_1112" = load { { i1, i64 }*, i64 }, { { i1, i64 }*, i64 }* %"92_1", align 8
  %"92_2113" = load i64, i64* %"92_2", align 4
  store { i64, i64 } %"92_0111", { i64, i64 }* %"92_0", align 4
  store { { i1, i64 }*, i64 } %"92_1112", { { i1, i64 }*, i64 }* %"92_1", align 8
  store i64 %"92_2113", i64* %"92_2", align 4
  %"92_0114" = load { i64, i64 }, { i64, i64 }* %"92_0", align 4
  %150 = extractvalue { i64, i64 } %"92_0114", 0
  %151 = extractvalue { i64, i64 } %"92_0114", 1
  store i64 %150, i64* %"94_0", align 4
  store i64 %151, i64* %"94_1", align 4
  %"94_0115" = load i64, i64* %"94_0", align 4
  %"94_1116" = load i64, i64* %"94_1", align 4
  %152 = insertvalue { i64, i64 } poison, i64 %"94_0115", 0
  %153 = insertvalue { i64, i64 } %152, i64 %"94_1116", 1
  store { i64, i64 } %153, { i64, i64 }* %"95_0", align 4
  %"95_0117" = load { i64, i64 }, { i64, i64 }* %"95_0", align 4
  %154 = call { i1, { { i64, i64 }, i64 } } @__hugr__.__next__.170({ i64, i64 } %"95_0117")
  store { i1, { { i64, i64 }, i64 } } %154, { i1, { { i64, i64 }, i64 } }* %"96_0", align 4
  %"96_0118" = load { i1, { { i64, i64 }, i64 } }, { i1, { { i64, i64 }, i64 } }* %"96_0", align 4
  %"92_1119" = load { { i1, i64 }*, i64 }, { { i1, i64 }*, i64 }* %"92_1", align 8
  %"92_2120" = load i64, i64* %"92_2", align 4
  %155 = extractvalue { i1, { { i64, i64 }, i64 } } %"96_0118", 0
  switch i1 %155, label %156 [
    i1 true, label %157
  ]

156:                                              ; preds = %loop_body110
  store { { i1, i64 }*, i64 } %"92_1119", { { i1, i64 }*, i64 }* %"0127", align 8
  store i64 %"92_2120", i64* %"1128", align 4
  br label %cond_97_case_0

157:                                              ; preds = %loop_body110
  %158 = extractvalue { i1, { { i64, i64 }, i64 } } %"96_0118", 1
  store { { i64, i64 }, i64 } %158, { { i64, i64 }, i64 }* %"0134", align 4
  store { { i1, i64 }*, i64 } %"92_1119", { { i1, i64 }*, i64 }* %"1135", align 8
  store i64 %"92_2120", i64* %"2136", align 4
  br label %cond_97_case_1

loop_out109:                                      ; preds = %180
  %"91_0162" = load { { i1, i64 }*, i64 }, { { i1, i64 }*, i64 }* %"91_0", align 8
  %"115_0163" = load i64 ({ i1, i64 })*, i64 ({ i1, i64 })** %"115_0", align 8
  %array_ptr164 = extractvalue { { i1, i64 }*, i64 } %"91_0162", 0
  %array_offset165 = extractvalue { { i1, i64 }*, i64 } %"91_0162", 1
  %159 = call i8* @malloc(i64 mul (i64 ptrtoint (i64* getelementptr (i64, i64* null, i32 1) to i64), i64 100))
  %160 = bitcast i8* %159 to i64*
  %161 = insertvalue { i64*, i64 } poison, i64* %160, 0
  %162 = insertvalue { i64*, i64 } %161, i64 0, 1
  %163 = alloca i64, align 8
  store i64 0, i64* %163, align 4
  br label %181

cond_97_case_0:                                   ; preds = %156
  %"0129" = load { { i1, i64 }*, i64 }, { { i1, i64 }*, i64 }* %"0127", align 8
  %"1130" = load i64, i64* %"1128", align 4
  store { { i1, i64 }*, i64 } %"0129", { { i1, i64 }*, i64 }* %"99_0", align 8
  store i64 %"1130", i64* %"99_1", align 4
  store { i1, { i64, i64 } } { i1 true, { i64, i64 } poison }, { i1, { i64, i64 } }* %"101_0", align 4
  %"101_0131" = load { i1, { i64, i64 } }, { i1, { i64, i64 } }* %"101_0", align 4
  %"99_0132" = load { { i1, i64 }*, i64 }, { { i1, i64 }*, i64 }* %"99_0", align 8
  %"99_1133" = load i64, i64* %"99_1", align 4
  store { i1, { i64, i64 } } %"101_0131", { i1, { i64, i64 } }* %"0121", align 4
  store { { i1, i64 }*, i64 } %"99_0132", { { i1, i64 }*, i64 }* %"1122", align 8
  store i64 %"99_1133", i64* %"2123", align 4
  br label %cond_exit_97

cond_97_case_1:                                   ; preds = %157
  %"0137" = load { { i64, i64 }, i64 }, { { i64, i64 }, i64 }* %"0134", align 4
  %"1138" = load { { i1, i64 }*, i64 }, { { i1, i64 }*, i64 }* %"1135", align 8
  %"2139" = load i64, i64* %"2136", align 4
  store { { i64, i64 }, i64 } %"0137", { { i64, i64 }, i64 }* %"103_0", align 4
  store { { i1, i64 }*, i64 } %"1138", { { i1, i64 }*, i64 }* %"103_1", align 8
  store i64 %"2139", i64* %"103_2", align 4
  store i64 1, i64* %"112_0", align 4
  %"103_2140" = load i64, i64* %"103_2", align 4
  %"112_0141" = load i64, i64* %"112_0", align 4
  %164 = add i64 %"103_2140", %"112_0141"
  store i64 %164, i64* %"114_0", align 4
  %"103_0142" = load { { i64, i64 }, i64 }, { { i64, i64 }, i64 }* %"103_0", align 4
  %165 = extractvalue { { i64, i64 }, i64 } %"103_0142", 1
  %166 = extractvalue { { i64, i64 }, i64 } %"103_0142", 0
  store i64 %165, i64* %"105_0", align 4
  store { i64, i64 } %166, { i64, i64 }* %"105_1", align 4
  %"105_1143" = load { i64, i64 }, { i64, i64 }* %"105_1", align 4
  %167 = extractvalue { i64, i64 } %"105_1143", 0
  %168 = extractvalue { i64, i64 } %"105_1143", 1
  store i64 %167, i64* %"106_0", align 4
  store i64 %168, i64* %"106_1", align 4
  %"106_0144" = load i64, i64* %"106_0", align 4
  %"106_1145" = load i64, i64* %"106_1", align 4
  %169 = insertvalue { i64, i64 } poison, i64 %"106_0144", 0
  %170 = insertvalue { i64, i64 } %169, i64 %"106_1145", 1
  store { i64, i64 } %170, { i64, i64 }* %"107_0", align 4
  %"105_0146" = load i64, i64* %"105_0", align 4
  %"107_0147" = load { i64, i64 }, { i64, i64 }* %"107_0", align 4
  %171 = insertvalue { { i64, i64 }, i64 } poison, i64 %"105_0146", 1
  %172 = insertvalue { { i64, i64 }, i64 } %171, { i64, i64 } %"107_0147", 0
  store { { i64, i64 }, i64 } %172, { { i64, i64 }, i64 }* %"108_0", align 4
  %"108_0148" = load { { i64, i64 }, i64 }, { { i64, i64 }, i64 }* %"108_0", align 4
  %173 = extractvalue { { i64, i64 }, i64 } %"108_0148", 1
  %174 = extractvalue { { i64, i64 }, i64 } %"108_0148", 0
  store i64 %173, i64* %"109_0", align 4
  store { i64, i64 } %174, { i64, i64 }* %"109_1", align 4
  %"103_1149" = load { { i1, i64 }*, i64 }, { { i1, i64 }*, i64 }* %"103_1", align 8
  %"103_2150" = load i64, i64* %"103_2", align 4
  %"109_0151" = load i64, i64* %"109_0", align 4
  %175 = call { { i1, i64 }*, i64 } @"__hugr__.$array.__setitem__.classical.3$$t(int(6))$n(100).615"({ { i1, i64 }*, i64 } %"103_1149", i64 %"103_2150", i64 %"109_0151")
  store { { i1, i64 }*, i64 } %175, { { i1, i64 }*, i64 }* %"111_0", align 8
  %"109_1152" = load { i64, i64 }, { i64, i64 }* %"109_1", align 4
  %176 = insertvalue { i1, { i64, i64 } } { i1 false, { i64, i64 } poison }, { i64, i64 } %"109_1152", 1
  store { i1, { i64, i64 } } %176, { i1, { i64, i64 } }* %"110_0", align 4
  %"110_0153" = load { i1, { i64, i64 } }, { i1, { i64, i64 } }* %"110_0", align 4
  %"111_0154" = load { { i1, i64 }*, i64 }, { { i1, i64 }*, i64 }* %"111_0", align 8
  %"114_0155" = load i64, i64* %"114_0", align 4
  store { i1, { i64, i64 } } %"110_0153", { i1, { i64, i64 } }* %"0121", align 4
  store { { i1, i64 }*, i64 } %"111_0154", { { i1, i64 }*, i64 }* %"1122", align 8
  store i64 %"114_0155", i64* %"2123", align 4
  br label %cond_exit_97

cond_exit_97:                                     ; preds = %cond_97_case_1, %cond_97_case_0
  %"0124" = load { i1, { i64, i64 } }, { i1, { i64, i64 } }* %"0121", align 4
  %"1125" = load { { i1, i64 }*, i64 }, { { i1, i64 }*, i64 }* %"1122", align 8
  %"2126" = load i64, i64* %"2123", align 4
  store { i1, { i64, i64 } } %"0124", { i1, { i64, i64 } }* %"97_0", align 4
  store { { i1, i64 }*, i64 } %"1125", { { i1, i64 }*, i64 }* %"97_1", align 8
  store i64 %"2126", i64* %"97_2", align 4
  %"97_0156" = load { i1, { i64, i64 } }, { i1, { i64, i64 } }* %"97_0", align 4
  %"97_1157" = load { { i1, i64 }*, i64 }, { { i1, i64 }*, i64 }* %"97_1", align 8
  %"97_2158" = load i64, i64* %"97_2", align 4
  store { i1, { i64, i64 } } %"97_0156", { i1, { i64, i64 } }* %"97_0", align 4
  store { { i1, i64 }*, i64 } %"97_1157", { { i1, i64 }*, i64 }* %"97_1", align 8
  store i64 %"97_2158", i64* %"97_2", align 4
  %"97_0159" = load { i1, { i64, i64 } }, { i1, { i64, i64 } }* %"97_0", align 4
  %"97_1160" = load { { i1, i64 }*, i64 }, { { i1, i64 }*, i64 }* %"97_1", align 8
  %"97_2161" = load i64, i64* %"97_2", align 4
  %177 = extractvalue { i1, { i64, i64 } } %"97_0159", 0
  switch i1 %177, label %178 [
    i1 true, label %180
  ]

178:                                              ; preds = %cond_exit_97
  %179 = extractvalue { i1, { i64, i64 } } %"97_0159", 1
  store { i64, i64 } %179, { i64, i64 }* %"92_0", align 4
  store { { i1, i64 }*, i64 } %"97_1160", { { i1, i64 }*, i64 }* %"92_1", align 8
  store i64 %"97_2161", i64* %"92_2", align 4
  br label %loop_body110

180:                                              ; preds = %cond_exit_97
  store { { i1, i64 }*, i64 } %"97_1160", { { i1, i64 }*, i64 }* %"91_0", align 8
  store i64 %"97_2161", i64* %"91_1", align 4
  br label %loop_out109

181:                                              ; preds = %184, %loop_out109
  %182 = load i64, i64* %163, align 4
  %183 = icmp ult i64 %182, 100
  br i1 %183, label %184, label %192

184:                                              ; preds = %181
  %185 = load i64, i64* %163, align 4
  %186 = add i64 %185, %array_offset165
  %187 = getelementptr inbounds { i1, i64 }, { i1, i64 }* %array_ptr164, i64 %186
  %188 = load { i1, i64 }, { i1, i64 }* %187, align 4
  %189 = call i64 %"115_0163"({ i1, i64 } %188)
  %190 = getelementptr inbounds i64, i64* %160, i64 %185
  store i64 %189, i64* %190, align 4
  %191 = add i64 %185, 1
  store i64 %191, i64* %163, align 4
  br label %181

192:                                              ; preds = %181
  %193 = bitcast { i1, i64 }* %array_ptr164 to i8*
  call void @free(i8* %193)
  store { i64*, i64 } %162, { i64*, i64 }* %"116_0", align 8
  %"116_0166" = load { i64*, i64 }, { i64*, i64 }* %"116_0", align 8
  store { i64*, i64 } %"116_0166", { i64*, i64 }* %"117_0", align 8
  %"117_0167" = load { i64*, i64 }, { i64*, i64 }* %"117_0", align 8
  %tag_len168 = load i8, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @res_is.F21393DB.0, i32 0, i32 0), align 1
  %tag_len169 = zext i8 %tag_len168 to i64
  %array_ptr170 = extractvalue { i64*, i64 } %"117_0167", 0
  %array_offset171 = extractvalue { i64*, i64 } %"117_0167", 1
  %194 = getelementptr inbounds i64, i64* %array_ptr170, i64 %array_offset171
  %out_arr_alloca172 = alloca <{ i32, i32, i64*, i1* }>, align 8
  %x_ptr173 = getelementptr inbounds <{ i32, i32, i64*, i1* }>, <{ i32, i32, i64*, i1* }>* %out_arr_alloca172, i32 0, i32 0
  %y_ptr174 = getelementptr inbounds <{ i32, i32, i64*, i1* }>, <{ i32, i32, i64*, i1* }>* %out_arr_alloca172, i32 0, i32 1
  %arr_ptr175 = getelementptr inbounds <{ i32, i32, i64*, i1* }>, <{ i32, i32, i64*, i1* }>* %out_arr_alloca172, i32 0, i32 2
  %mask_ptr176 = getelementptr inbounds <{ i32, i32, i64*, i1* }>, <{ i32, i32, i64*, i1* }>* %out_arr_alloca172, i32 0, i32 3
  %195 = alloca i1, i32 100, align 1
  %196 = bitcast i1* %195 to [100 x i1]*
  store [100 x i1] zeroinitializer, [100 x i1]* %196, align 1
  store i32 100, i32* %x_ptr173, align 4
  store i32 1, i32* %y_ptr174, align 4
  store i64* %194, i64** %arr_ptr175, align 8
  store i1* %195, i1** %mask_ptr176, align 8
  %197 = load <{ i32, i32, i64*, i1* }>, <{ i32, i32, i64*, i1* }>* %out_arr_alloca172, align 1
  call void @print_int_arr(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @res_is.F21393DB.0, i32 0, i32 0), i64 %tag_len169, <{ i32, i32, i64*, i1* }>* %out_arr_alloca172)
  %"130_0177" = load { i64, i64 }, { i64, i64 }* %"130_0", align 4
  %"121_0178" = load { { i1, double }*, i64 }, { { i1, double }*, i64 }* %"121_0", align 8
  %"122_0179" = load i64, i64* %"122_0", align 4
  store { i64, i64 } %"130_0177", { i64, i64 }* %"132_0", align 4
  store { { i1, double }*, i64 } %"121_0178", { { i1, double }*, i64 }* %"132_1", align 8
  store i64 %"122_0179", i64* %"132_2", align 4
  br label %loop_body181

loop_body181:                                     ; preds = %228, %192
  %"132_0182" = load { i64, i64 }, { i64, i64 }* %"132_0", align 4
  %"132_1183" = load { { i1, double }*, i64 }, { { i1, double }*, i64 }* %"132_1", align 8
  %"132_2184" = load i64, i64* %"132_2", align 4
  store { i64, i64 } %"132_0182", { i64, i64 }* %"132_0", align 4
  store { { i1, double }*, i64 } %"132_1183", { { i1, double }*, i64 }* %"132_1", align 8
  store i64 %"132_2184", i64* %"132_2", align 4
  %"132_0185" = load { i64, i64 }, { i64, i64 }* %"132_0", align 4
  %198 = extractvalue { i64, i64 } %"132_0185", 0
  %199 = extractvalue { i64, i64 } %"132_0185", 1
  store i64 %198, i64* %"134_0", align 4
  store i64 %199, i64* %"134_1", align 4
  %"134_0186" = load i64, i64* %"134_0", align 4
  %"134_1187" = load i64, i64* %"134_1", align 4
  %200 = insertvalue { i64, i64 } poison, i64 %"134_0186", 0
  %201 = insertvalue { i64, i64 } %200, i64 %"134_1187", 1
  store { i64, i64 } %201, { i64, i64 }* %"135_0", align 4
  %"135_0188" = load { i64, i64 }, { i64, i64 }* %"135_0", align 4
  %202 = call { i1, { { i64, i64 }, i64 } } @__hugr__.__next__.170({ i64, i64 } %"135_0188")
  store { i1, { { i64, i64 }, i64 } } %202, { i1, { { i64, i64 }, i64 } }* %"136_0", align 4
  %"136_0189" = load { i1, { { i64, i64 }, i64 } }, { i1, { { i64, i64 }, i64 } }* %"136_0", align 4
  %"132_1190" = load { { i1, double }*, i64 }, { { i1, double }*, i64 }* %"132_1", align 8
  %"132_2191" = load i64, i64* %"132_2", align 4
  %203 = extractvalue { i1, { { i64, i64 }, i64 } } %"136_0189", 0
  switch i1 %203, label %204 [
    i1 true, label %205
  ]

204:                                              ; preds = %loop_body181
  store { { i1, double }*, i64 } %"132_1190", { { i1, double }*, i64 }* %"0198", align 8
  store i64 %"132_2191", i64* %"1199", align 4
  br label %cond_137_case_0

205:                                              ; preds = %loop_body181
  %206 = extractvalue { i1, { { i64, i64 }, i64 } } %"136_0189", 1
  store { { i64, i64 }, i64 } %206, { { i64, i64 }, i64 }* %"0205", align 4
  store { { i1, double }*, i64 } %"132_1190", { { i1, double }*, i64 }* %"1206", align 8
  store i64 %"132_2191", i64* %"2207", align 4
  br label %cond_137_case_1

loop_out180:                                      ; preds = %230
  %"131_0236" = load { { i1, double }*, i64 }, { { i1, double }*, i64 }* %"131_0", align 8
  %"159_0237" = load double ({ i1, double })*, double ({ i1, double })** %"159_0", align 8
  %array_ptr238 = extractvalue { { i1, double }*, i64 } %"131_0236", 0
  %array_offset239 = extractvalue { { i1, double }*, i64 } %"131_0236", 1
  %207 = call i8* @malloc(i64 mul (i64 ptrtoint (double* getelementptr (double, double* null, i32 1) to i64), i64 100))
  %208 = bitcast i8* %207 to double*
  %209 = insertvalue { double*, i64 } poison, double* %208, 0
  %210 = insertvalue { double*, i64 } %209, i64 0, 1
  %211 = alloca i64, align 8
  store i64 0, i64* %211, align 4
  br label %231

cond_137_case_0:                                  ; preds = %204
  %"0200" = load { { i1, double }*, i64 }, { { i1, double }*, i64 }* %"0198", align 8
  %"1201" = load i64, i64* %"1199", align 4
  store { { i1, double }*, i64 } %"0200", { { i1, double }*, i64 }* %"139_0", align 8
  store i64 %"1201", i64* %"139_1", align 4
  store { i1, { i64, i64 } } { i1 true, { i64, i64 } poison }, { i1, { i64, i64 } }* %"141_0", align 4
  %"141_0202" = load { i1, { i64, i64 } }, { i1, { i64, i64 } }* %"141_0", align 4
  %"139_0203" = load { { i1, double }*, i64 }, { { i1, double }*, i64 }* %"139_0", align 8
  %"139_1204" = load i64, i64* %"139_1", align 4
  store { i1, { i64, i64 } } %"141_0202", { i1, { i64, i64 } }* %"0192", align 4
  store { { i1, double }*, i64 } %"139_0203", { { i1, double }*, i64 }* %"1193", align 8
  store i64 %"139_1204", i64* %"2194", align 4
  br label %cond_exit_137

cond_137_case_1:                                  ; preds = %205
  %"0208" = load { { i64, i64 }, i64 }, { { i64, i64 }, i64 }* %"0205", align 4
  %"1209" = load { { i1, double }*, i64 }, { { i1, double }*, i64 }* %"1206", align 8
  %"2210" = load i64, i64* %"2207", align 4
  store { { i64, i64 }, i64 } %"0208", { { i64, i64 }, i64 }* %"143_0", align 4
  store { { i1, double }*, i64 } %"1209", { { i1, double }*, i64 }* %"143_1", align 8
  store i64 %"2210", i64* %"143_2", align 4
  store i64 1, i64* %"156_0", align 4
  %"143_2211" = load i64, i64* %"143_2", align 4
  %"156_0212" = load i64, i64* %"156_0", align 4
  %212 = add i64 %"143_2211", %"156_0212"
  store i64 %212, i64* %"158_0", align 4
  store double 6.250000e-02, double* %"152_0", align 8
  %"143_0213" = load { { i64, i64 }, i64 }, { { i64, i64 }, i64 }* %"143_0", align 4
  %213 = extractvalue { { i64, i64 }, i64 } %"143_0213", 1
  %214 = extractvalue { { i64, i64 }, i64 } %"143_0213", 0
  store i64 %213, i64* %"145_0", align 4
  store { i64, i64 } %214, { i64, i64 }* %"145_1", align 4
  %"145_1214" = load { i64, i64 }, { i64, i64 }* %"145_1", align 4
  %215 = extractvalue { i64, i64 } %"145_1214", 0
  %216 = extractvalue { i64, i64 } %"145_1214", 1
  store i64 %215, i64* %"146_0", align 4
  store i64 %216, i64* %"146_1", align 4
  %"146_0215" = load i64, i64* %"146_0", align 4
  %"146_1216" = load i64, i64* %"146_1", align 4
  %217 = insertvalue { i64, i64 } poison, i64 %"146_0215", 0
  %218 = insertvalue { i64, i64 } %217, i64 %"146_1216", 1
  store { i64, i64 } %218, { i64, i64 }* %"147_0", align 4
  %"145_0217" = load i64, i64* %"145_0", align 4
  %"147_0218" = load { i64, i64 }, { i64, i64 }* %"147_0", align 4
  %219 = insertvalue { { i64, i64 }, i64 } poison, i64 %"145_0217", 1
  %220 = insertvalue { { i64, i64 }, i64 } %219, { i64, i64 } %"147_0218", 0
  store { { i64, i64 }, i64 } %220, { { i64, i64 }, i64 }* %"148_0", align 4
  %"148_0219" = load { { i64, i64 }, i64 }, { { i64, i64 }, i64 }* %"148_0", align 4
  %221 = extractvalue { { i64, i64 }, i64 } %"148_0219", 1
  %222 = extractvalue { { i64, i64 }, i64 } %"148_0219", 0
  store i64 %221, i64* %"149_0", align 4
  store { i64, i64 } %222, { i64, i64 }* %"149_1", align 4
  %"149_0220" = load i64, i64* %"149_0", align 4
  %223 = sitofp i64 %"149_0220" to double
  store double %223, double* %"151_0", align 8
  %"151_0221" = load double, double* %"151_0", align 8
  %"152_0222" = load double, double* %"152_0", align 8
  %224 = fmul double %"151_0221", %"152_0222"
  store double %224, double* %"154_0", align 8
  %"143_1223" = load { { i1, double }*, i64 }, { { i1, double }*, i64 }* %"143_1", align 8
  %"143_2224" = load i64, i64* %"143_2", align 4
  %"154_0225" = load double, double* %"154_0", align 8
  %225 = call { { i1, double }*, i64 } @"__hugr__.$array.__setitem__.classical.3$$t(float64)$n(100).648"({ { i1, double }*, i64 } %"143_1223", i64 %"143_2224", double %"154_0225")
  store { { i1, double }*, i64 } %225, { { i1, double }*, i64 }* %"155_0", align 8
  %"149_1226" = load { i64, i64 }, { i64, i64 }* %"149_1", align 4
  %226 = insertvalue { i1, { i64, i64 } } { i1 false, { i64, i64 } poison }, { i64, i64 } %"149_1226", 1
  store { i1, { i64, i64 } } %226, { i1, { i64, i64 } }* %"150_0", align 4
  %"150_0227" = load { i1, { i64, i64 } }, { i1, { i64, i64 } }* %"150_0", align 4
  %"155_0228" = load { { i1, double }*, i64 }, { { i1, double }*, i64 }* %"155_0", align 8
  %"158_0229" = load i64, i64* %"158_0", align 4
  store { i1, { i64, i64 } } %"150_0227", { i1, { i64, i64 } }* %"0192", align 4
  store { { i1, double }*, i64 } %"155_0228", { { i1, double }*, i64 }* %"1193", align 8
  store i64 %"158_0229", i64* %"2194", align 4
  br label %cond_exit_137

cond_exit_137:                                    ; preds = %cond_137_case_1, %cond_137_case_0
  %"0195" = load { i1, { i64, i64 } }, { i1, { i64, i64 } }* %"0192", align 4
  %"1196" = load { { i1, double }*, i64 }, { { i1, double }*, i64 }* %"1193", align 8
  %"2197" = load i64, i64* %"2194", align 4
  store { i1, { i64, i64 } } %"0195", { i1, { i64, i64 } }* %"137_0", align 4
  store { { i1, double }*, i64 } %"1196", { { i1, double }*, i64 }* %"137_1", align 8
  store i64 %"2197", i64* %"137_2", align 4
  %"137_0230" = load { i1, { i64, i64 } }, { i1, { i64, i64 } }* %"137_0", align 4
  %"137_1231" = load { { i1, double }*, i64 }, { { i1, double }*, i64 }* %"137_1", align 8
  %"137_2232" = load i64, i64* %"137_2", align 4
  store { i1, { i64, i64 } } %"137_0230", { i1, { i64, i64 } }* %"137_0", align 4
  store { { i1, double }*, i64 } %"137_1231", { { i1, double }*, i64 }* %"137_1", align 8
  store i64 %"137_2232", i64* %"137_2", align 4
  %"137_0233" = load { i1, { i64, i64 } }, { i1, { i64, i64 } }* %"137_0", align 4
  %"137_1234" = load { { i1, double }*, i64 }, { { i1, double }*, i64 }* %"137_1", align 8
  %"137_2235" = load i64, i64* %"137_2", align 4
  %227 = extractvalue { i1, { i64, i64 } } %"137_0233", 0
  switch i1 %227, label %228 [
    i1 true, label %230
  ]

228:                                              ; preds = %cond_exit_137
  %229 = extractvalue { i1, { i64, i64 } } %"137_0233", 1
  store { i64, i64 } %229, { i64, i64 }* %"132_0", align 4
  store { { i1, double }*, i64 } %"137_1234", { { i1, double }*, i64 }* %"132_1", align 8
  store i64 %"137_2235", i64* %"132_2", align 4
  br label %loop_body181

230:                                              ; preds = %cond_exit_137
  store { { i1, double }*, i64 } %"137_1234", { { i1, double }*, i64 }* %"131_0", align 8
  store i64 %"137_2235", i64* %"131_1", align 4
  br label %loop_out180

231:                                              ; preds = %234, %loop_out180
  %232 = load i64, i64* %211, align 4
  %233 = icmp ult i64 %232, 100
  br i1 %233, label %234, label %242

234:                                              ; preds = %231
  %235 = load i64, i64* %211, align 4
  %236 = add i64 %235, %array_offset239
  %237 = getelementptr inbounds { i1, double }, { i1, double }* %array_ptr238, i64 %236
  %238 = load { i1, double }, { i1, double }* %237, align 8
  %239 = call double %"159_0237"({ i1, double } %238)
  %240 = getelementptr inbounds double, double* %208, i64 %235
  store double %239, double* %240, align 8
  %241 = add i64 %235, 1
  store i64 %241, i64* %211, align 4
  br label %231

242:                                              ; preds = %231
  %243 = bitcast { i1, double }* %array_ptr238 to i8*
  call void @free(i8* %243)
  store { double*, i64 } %210, { double*, i64 }* %"160_0", align 8
  %"160_0240" = load { double*, i64 }, { double*, i64 }* %"160_0", align 8
  store { double*, i64 } %"160_0240", { double*, i64 }* %"161_0", align 8
  %"161_0241" = load { double*, i64 }, { double*, i64 }* %"161_0", align 8
  %tag_len242 = load i8, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @res_fs.CBD4AF54.0, i32 0, i32 0), align 1
  %tag_len243 = zext i8 %tag_len242 to i64
  %array_ptr244 = extractvalue { double*, i64 } %"161_0241", 0
  %array_offset245 = extractvalue { double*, i64 } %"161_0241", 1
  %244 = getelementptr inbounds double, double* %array_ptr244, i64 %array_offset245
  %out_arr_alloca246 = alloca <{ i32, i32, double*, i1* }>, align 8
  %x_ptr247 = getelementptr inbounds <{ i32, i32, double*, i1* }>, <{ i32, i32, double*, i1* }>* %out_arr_alloca246, i32 0, i32 0
  %y_ptr248 = getelementptr inbounds <{ i32, i32, double*, i1* }>, <{ i32, i32, double*, i1* }>* %out_arr_alloca246, i32 0, i32 1
  %arr_ptr249 = getelementptr inbounds <{ i32, i32, double*, i1* }>, <{ i32, i32, double*, i1* }>* %out_arr_alloca246, i32 0, i32 2
  %mask_ptr250 = getelementptr inbounds <{ i32, i32, double*, i1* }>, <{ i32, i32, double*, i1* }>* %out_arr_alloca246, i32 0, i32 3
  %245 = alloca i1, i32 100, align 1
  %246 = bitcast i1* %245 to [100 x i1]*
  store [100 x i1] zeroinitializer, [100 x i1]* %246, align 1
  store i32 100, i32* %x_ptr247, align 4
  store i32 1, i32* %y_ptr248, align 4
  store double* %244, double** %arr_ptr249, align 8
  store i1* %245, i1** %mask_ptr250, align 8
  %247 = load <{ i32, i32, double*, i1* }>, <{ i32, i32, double*, i1* }>* %out_arr_alloca246, align 1
  call void @print_float_arr(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @res_fs.CBD4AF54.0, i32 0, i32 0), i64 %tag_len243, <{ i32, i32, double*, i1* }>* %out_arr_alloca246)
  %"164_0251" = load {}, {}* %"164_0", align 1
  store {} %"164_0251", {}* %"164_0", align 1
  %"164_0252" = load {}, {}* %"164_0", align 1
  switch i1 false, label %248 [
  ]

248:                                              ; preds = %242
  br label %12
}

define double @"__hugr__.$array.__unwrap_elem.7$$t(float64).664"({ i1, double } %0) {
alloca_block:
  %"0" = alloca double, align 8
  %"665_0" = alloca { i1, double }, align 8
  %"667_0" = alloca double, align 8
  %"02" = alloca double, align 8
  %"671_0" = alloca { i32, i8* }, align 8
  %"673_0" = alloca double, align 8
  %"06" = alloca double, align 8
  %"675_0" = alloca double, align 8
  br label %entry_block

entry_block:                                      ; preds = %alloca_block
  store { i1, double } %0, { i1, double }* %"665_0", align 8
  %"665_01" = load { i1, double }, { i1, double }* %"665_0", align 8
  %1 = extractvalue { i1, double } %"665_01", 0
  switch i1 %1, label %2 [
    i1 true, label %3
  ]

2:                                                ; preds = %entry_block
  br label %cond_667_case_0

3:                                                ; preds = %entry_block
  %4 = extractvalue { i1, double } %"665_01", 1
  store double %4, double* %"06", align 8
  br label %cond_667_case_1

cond_667_case_0:                                  ; preds = %2
  store { i32, i8* } { i32 1, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @"e_Linear arr.27F92A51.0", i32 0, i32 0) }, { i32, i8* }* %"671_0", align 8
  %"671_04" = load { i32, i8* }, { i32, i8* }* %"671_0", align 8
  %5 = extractvalue { i32, i8* } %"671_04", 0
  %shift_code = add i32 %5, 1000
  %6 = extractvalue { i32, i8* } %"671_04", 1
  call void @panic(i32 %shift_code, i8* %6)
  store double 0.000000e+00, double* %"673_0", align 8
  %"673_05" = load double, double* %"673_0", align 8
  store double %"673_05", double* %"02", align 8
  br label %cond_exit_667

cond_667_case_1:                                  ; preds = %3
  %"07" = load double, double* %"06", align 8
  store double %"07", double* %"675_0", align 8
  %"675_08" = load double, double* %"675_0", align 8
  store double %"675_08", double* %"02", align 8
  br label %cond_exit_667

cond_exit_667:                                    ; preds = %cond_667_case_1, %cond_667_case_0
  %"03" = load double, double* %"02", align 8
  store double %"03", double* %"667_0", align 8
  %"667_09" = load double, double* %"667_0", align 8
  store double %"667_09", double* %"0", align 8
  %"010" = load double, double* %"0", align 8
  ret double %"010"
}

define { i1, double } @"__hugr__.$array.__comprehension.init.6$$t(float64).644"() {
alloca_block:
  %"0" = alloca { i1, double }, align 8
  %"647_0" = alloca { i1, double }, align 8
  br label %entry_block

entry_block:                                      ; preds = %alloca_block
  store { i1, double } { i1 false, double poison }, { i1, double }* %"647_0", align 8
  %"647_01" = load { i1, double }, { i1, double }* %"647_0", align 8
  store { i1, double } %"647_01", { i1, double }* %"0", align 8
  %"02" = load { i1, double }, { i1, double }* %"0", align 8
  ret { i1, double } %"02"
}

declare i8* @malloc(i64)

define i64 @"__hugr__.$array.__unwrap_elem.7$$t(int(6)).631"({ i1, i64 } %0) {
alloca_block:
  %"0" = alloca i64, align 8
  %"632_0" = alloca { i1, i64 }, align 8
  %"634_0" = alloca i64, align 8
  %"02" = alloca i64, align 8
  %"638_0" = alloca { i32, i8* }, align 8
  %"640_0" = alloca i64, align 8
  %"06" = alloca i64, align 8
  %"642_0" = alloca i64, align 8
  br label %entry_block

entry_block:                                      ; preds = %alloca_block
  store { i1, i64 } %0, { i1, i64 }* %"632_0", align 4
  %"632_01" = load { i1, i64 }, { i1, i64 }* %"632_0", align 4
  %1 = extractvalue { i1, i64 } %"632_01", 0
  switch i1 %1, label %2 [
    i1 true, label %3
  ]

2:                                                ; preds = %entry_block
  br label %cond_634_case_0

3:                                                ; preds = %entry_block
  %4 = extractvalue { i1, i64 } %"632_01", 1
  store i64 %4, i64* %"06", align 4
  br label %cond_634_case_1

cond_634_case_0:                                  ; preds = %2
  store { i32, i8* } { i32 1, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @"e_Linear arr.27F92A51.0", i32 0, i32 0) }, { i32, i8* }* %"638_0", align 8
  %"638_04" = load { i32, i8* }, { i32, i8* }* %"638_0", align 8
  %5 = extractvalue { i32, i8* } %"638_04", 0
  %shift_code = add i32 %5, 1000
  %6 = extractvalue { i32, i8* } %"638_04", 1
  call void @panic(i32 %shift_code, i8* %6)
  store i64 0, i64* %"640_0", align 4
  %"640_05" = load i64, i64* %"640_0", align 4
  store i64 %"640_05", i64* %"02", align 4
  br label %cond_exit_634

cond_634_case_1:                                  ; preds = %3
  %"07" = load i64, i64* %"06", align 4
  store i64 %"07", i64* %"642_0", align 4
  %"642_08" = load i64, i64* %"642_0", align 4
  store i64 %"642_08", i64* %"02", align 4
  br label %cond_exit_634

cond_exit_634:                                    ; preds = %cond_634_case_1, %cond_634_case_0
  %"03" = load i64, i64* %"02", align 4
  store i64 %"03", i64* %"634_0", align 4
  %"634_09" = load i64, i64* %"634_0", align 4
  store i64 %"634_09", i64* %"0", align 4
  %"010" = load i64, i64* %"0", align 4
  ret i64 %"010"
}

define { i1, i64 } @"__hugr__.$array.__comprehension.init.6$$t(int(6)).611"() {
alloca_block:
  %"0" = alloca { i1, i64 }, align 8
  %"614_0" = alloca { i1, i64 }, align 8
  br label %entry_block

entry_block:                                      ; preds = %alloca_block
  store { i1, i64 } { i1 false, i64 poison }, { i1, i64 }* %"614_0", align 4
  %"614_01" = load { i1, i64 }, { i1, i64 }* %"614_0", align 4
  store { i1, i64 } %"614_01", { i1, i64 }* %"0", align 4
  %"02" = load { i1, i64 }, { i1, i64 }* %"0", align 4
  ret { i1, i64 } %"02"
}

define i1 @__hugr__.array.__read_bool.9.312({ i1, i64, i1 } %0) {
alloca_block:
  %"0" = alloca i1, align 1
  %"313_0" = alloca { i1, i64, i1 }, align 8
  %"315_0" = alloca i1, align 1
  %"367_0" = alloca { i1, i64, i1 }, align 8
  %"365_0" = alloca i1, align 1
  %"03" = alloca i1, align 1
  %"05" = alloca i1, align 1
  %"362_0" = alloca i1, align 1
  %"08" = alloca i64, align 8
  %"360_0" = alloca i64, align 8
  %"394_0" = alloca i1, align 1
  br label %entry_block

entry_block:                                      ; preds = %alloca_block
  store { i1, i64, i1 } %0, { i1, i64, i1 }* %"313_0", align 4
  %"313_01" = load { i1, i64, i1 }, { i1, i64, i1 }* %"313_0", align 4
  store { i1, i64, i1 } %"313_01", { i1, i64, i1 }* %"367_0", align 4
  %"367_02" = load { i1, i64, i1 }, { i1, i64, i1 }* %"367_0", align 4
  %1 = extractvalue { i1, i64, i1 } %"367_02", 0
  switch i1 %1, label %2 [
    i1 true, label %4
  ]

2:                                                ; preds = %entry_block
  %3 = extractvalue { i1, i64, i1 } %"367_02", 2
  store i1 %3, i1* %"05", align 1
  br label %cond_365_case_0

4:                                                ; preds = %entry_block
  %5 = extractvalue { i1, i64, i1 } %"367_02", 1
  store i64 %5, i64* %"08", align 4
  br label %cond_365_case_1

cond_365_case_0:                                  ; preds = %2
  %"06" = load i1, i1* %"05", align 1
  store i1 %"06", i1* %"362_0", align 1
  %"362_07" = load i1, i1* %"362_0", align 1
  store i1 %"362_07", i1* %"03", align 1
  br label %cond_exit_365

cond_365_case_1:                                  ; preds = %4
  %"09" = load i64, i64* %"08", align 4
  store i64 %"09", i64* %"360_0", align 4
  %"360_010" = load i64, i64* %"360_0", align 4
  %read_bool = call i1 @___read_future_bool(i64 %"360_010")
  call void @___dec_future_refcount(i64 %"360_010")
  %measure = select i1 %read_bool, i1 true, i1 false
  store i1 %measure, i1* %"394_0", align 1
  %"394_011" = load i1, i1* %"394_0", align 1
  store i1 %"394_011", i1* %"03", align 1
  br label %cond_exit_365

cond_exit_365:                                    ; preds = %cond_365_case_1, %cond_365_case_0
  %"04" = load i1, i1* %"03", align 1
  store i1 %"04", i1* %"365_0", align 1
  %"365_012" = load i1, i1* %"365_0", align 1
  store i1 %"365_012", i1* %"315_0", align 1
  %"315_013" = load i1, i1* %"315_0", align 1
  store i1 %"315_013", i1* %"0", align 1
  %"014" = load i1, i1* %"0", align 1
  ret i1 %"014"
}

define { i1, i64, i1 } @"__hugr__.$array.__unwrap_elem.7$$t(bool).598"({ i1, { i1, i64, i1 } } %0) {
alloca_block:
  %"0" = alloca { i1, i64, i1 }, align 8
  %"599_0" = alloca { i1, { i1, i64, i1 } }, align 8
  %"601_0" = alloca { i1, i64, i1 }, align 8
  %"02" = alloca { i1, i64, i1 }, align 8
  %"605_0" = alloca { i32, i8* }, align 8
  %"607_0" = alloca { i1, i64, i1 }, align 8
  %"06" = alloca { i1, i64, i1 }, align 8
  %"609_0" = alloca { i1, i64, i1 }, align 8
  br label %entry_block

entry_block:                                      ; preds = %alloca_block
  store { i1, { i1, i64, i1 } } %0, { i1, { i1, i64, i1 } }* %"599_0", align 4
  %"599_01" = load { i1, { i1, i64, i1 } }, { i1, { i1, i64, i1 } }* %"599_0", align 4
  %1 = extractvalue { i1, { i1, i64, i1 } } %"599_01", 0
  switch i1 %1, label %2 [
    i1 true, label %3
  ]

2:                                                ; preds = %entry_block
  br label %cond_601_case_0

3:                                                ; preds = %entry_block
  %4 = extractvalue { i1, { i1, i64, i1 } } %"599_01", 1
  store { i1, i64, i1 } %4, { i1, i64, i1 }* %"06", align 4
  br label %cond_601_case_1

cond_601_case_0:                                  ; preds = %2
  store { i32, i8* } { i32 1, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @"e_Linear arr.27F92A51.0", i32 0, i32 0) }, { i32, i8* }* %"605_0", align 8
  %"605_04" = load { i32, i8* }, { i32, i8* }* %"605_0", align 8
  %5 = extractvalue { i32, i8* } %"605_04", 0
  %shift_code = add i32 %5, 1000
  %6 = extractvalue { i32, i8* } %"605_04", 1
  call void @panic(i32 %shift_code, i8* %6)
  store { i1, i64, i1 } zeroinitializer, { i1, i64, i1 }* %"607_0", align 4
  %"607_05" = load { i1, i64, i1 }, { i1, i64, i1 }* %"607_0", align 4
  store { i1, i64, i1 } %"607_05", { i1, i64, i1 }* %"02", align 4
  br label %cond_exit_601

cond_601_case_1:                                  ; preds = %3
  %"07" = load { i1, i64, i1 }, { i1, i64, i1 }* %"06", align 4
  store { i1, i64, i1 } %"07", { i1, i64, i1 }* %"609_0", align 4
  %"609_08" = load { i1, i64, i1 }, { i1, i64, i1 }* %"609_0", align 4
  store { i1, i64, i1 } %"609_08", { i1, i64, i1 }* %"02", align 4
  br label %cond_exit_601

cond_exit_601:                                    ; preds = %cond_601_case_1, %cond_601_case_0
  %"03" = load { i1, i64, i1 }, { i1, i64, i1 }* %"02", align 4
  store { i1, i64, i1 } %"03", { i1, i64, i1 }* %"601_0", align 4
  %"601_09" = load { i1, i64, i1 }, { i1, i64, i1 }* %"601_0", align 4
  store { i1, i64, i1 } %"601_09", { i1, i64, i1 }* %"0", align 4
  %"010" = load { i1, i64, i1 }, { i1, i64, i1 }* %"0", align 4
  ret { i1, i64, i1 } %"010"
}

define { i1, i64 } @"__hugr__.$array.__comprehension.init.6$$t(qubit).414"() {
alloca_block:
  %"0" = alloca { i1, i64 }, align 8
  %"417_0" = alloca { i1, i64 }, align 8
  br label %entry_block

entry_block:                                      ; preds = %alloca_block
  store { i1, i64 } { i1 false, i64 poison }, { i1, i64 }* %"417_0", align 4
  %"417_01" = load { i1, i64 }, { i1, i64 }* %"417_0", align 4
  store { i1, i64 } %"417_01", { i1, i64 }* %"0", align 4
  %"02" = load { i1, i64 }, { i1, i64 }* %"0", align 4
  ret { i1, i64 } %"02"
}

define { i1, { { i64, i64 }, i64 } } @__hugr__.__next__.170({ i64, i64 } %0) {
alloca_block:
  %"0" = alloca { i1, { { i64, i64 }, i64 } }, align 8
  %"171_0" = alloca { i64, i64 }, align 8
  %"173_0" = alloca { i1, { { i64, i64 }, i64 } }, align 8
  %"175_0" = alloca { i64, i64 }, align 8
  %"02" = alloca { i1, { { i64, i64 }, i64 } }, align 8
  %"192_0" = alloca i64, align 8
  %"192_1" = alloca i64, align 8
  %"181_0" = alloca { i1, i64, i64 }, align 8
  %"177_0" = alloca i64, align 8
  %"177_1" = alloca i64, align 8
  %"178_0" = alloca i1, align 1
  %"179_0" = alloca { i1, i64, i1 }, align 8
  %"346_0" = alloca i1, align 1
  %"344_0" = alloca { i1, i64, i1 }, align 8
  %"180_0" = alloca i1, align 1
  %"342_0" = alloca { i1, i64, i1 }, align 8
  %"340_0" = alloca i1, align 1
  %"012" = alloca i1, align 1
  %"014" = alloca i1, align 1
  %"337_0" = alloca i1, align 1
  %"017" = alloca i64, align 8
  %"336_0" = alloca i64, align 8
  %"334_0" = alloca i1, align 1
  %"025" = alloca { i1, i64, i64 }, align 8
  %"027" = alloca i64, align 8
  %"1" = alloca i64, align 8
  %"183_0" = alloca i64, align 8
  %"183_1" = alloca i64, align 8
  %"185_0" = alloca { i1, i64, i64 }, align 8
  %"031" = alloca i64, align 8
  %"132" = alloca i64, align 8
  %"187_0" = alloca i64, align 8
  %"187_1" = alloca i64, align 8
  %"189_0" = alloca { i1, i64, i64 }, align 8
  %"200_0" = alloca {}, align 8
  %"199_0" = alloca { i1, { { i64, i64 }, i64 } }, align 8
  %"194_0" = alloca i64, align 8
  %"196_0" = alloca i64, align 8
  %"197_0" = alloca { i64, i64 }, align 8
  %"198_0" = alloca { { i64, i64 }, i64 }, align 8
  %"205_0" = alloca {}, align 8
  %"204_0" = alloca { i1, { { i64, i64 }, i64 } }, align 8
  br label %entry_block

entry_block:                                      ; preds = %alloca_block
  store { i64, i64 } %0, { i64, i64 }* %"171_0", align 4
  %"171_01" = load { i64, i64 }, { i64, i64 }* %"171_0", align 4
  store { i64, i64 } %"171_01", { i64, i64 }* %"175_0", align 4
  br label %1

1:                                                ; preds = %entry_block
  %"175_03" = load { i64, i64 }, { i64, i64 }* %"175_0", align 4
  store { i64, i64 } %"175_03", { i64, i64 }* %"175_0", align 4
  %"175_04" = load { i64, i64 }, { i64, i64 }* %"175_0", align 4
  %2 = extractvalue { i64, i64 } %"175_04", 0
  %3 = extractvalue { i64, i64 } %"175_04", 1
  store i64 %2, i64* %"177_0", align 4
  store i64 %3, i64* %"177_1", align 4
  %"177_05" = load i64, i64* %"177_0", align 4
  %"177_16" = load i64, i64* %"177_1", align 4
  %4 = icmp slt i64 %"177_05", %"177_16"
  %5 = select i1 %4, i1 true, i1 false
  store i1 %5, i1* %"178_0", align 1
  %"178_07" = load i1, i1* %"178_0", align 1
  store i1 %"178_07", i1* %"346_0", align 1
  %"346_08" = load i1, i1* %"346_0", align 1
  %6 = insertvalue { i1, i64, i1 } { i1 false, i64 poison, i1 poison }, i1 %"346_08", 2
  store { i1, i64, i1 } %6, { i1, i64, i1 }* %"344_0", align 4
  %"344_09" = load { i1, i64, i1 }, { i1, i64, i1 }* %"344_0", align 4
  store { i1, i64, i1 } %"344_09", { i1, i64, i1 }* %"179_0", align 4
  %"179_010" = load { i1, i64, i1 }, { i1, i64, i1 }* %"179_0", align 4
  store { i1, i64, i1 } %"179_010", { i1, i64, i1 }* %"342_0", align 4
  %"342_011" = load { i1, i64, i1 }, { i1, i64, i1 }* %"342_0", align 4
  %7 = extractvalue { i1, i64, i1 } %"342_011", 0
  switch i1 %7, label %8 [
    i1 true, label %10
  ]

8:                                                ; preds = %1
  %9 = extractvalue { i1, i64, i1 } %"342_011", 2
  store i1 %9, i1* %"014", align 1
  br label %cond_340_case_0

10:                                               ; preds = %1
  %11 = extractvalue { i1, i64, i1 } %"342_011", 1
  store i64 %11, i64* %"017", align 4
  br label %cond_340_case_1

12:                                               ; preds = %29
  %"192_041" = load i64, i64* %"192_0", align 4
  %"192_142" = load i64, i64* %"192_1", align 4
  store i64 %"192_041", i64* %"192_0", align 4
  store i64 %"192_142", i64* %"192_1", align 4
  store {} undef, {}* %"200_0", align 1
  store i64 1, i64* %"194_0", align 4
  %"192_043" = load i64, i64* %"192_0", align 4
  %"194_044" = load i64, i64* %"194_0", align 4
  %13 = add i64 %"192_043", %"194_044"
  store i64 %13, i64* %"196_0", align 4
  %"196_045" = load i64, i64* %"196_0", align 4
  %"192_146" = load i64, i64* %"192_1", align 4
  %14 = insertvalue { i64, i64 } poison, i64 %"196_045", 0
  %15 = insertvalue { i64, i64 } %14, i64 %"192_146", 1
  store { i64, i64 } %15, { i64, i64 }* %"197_0", align 4
  %"192_047" = load i64, i64* %"192_0", align 4
  %"197_048" = load { i64, i64 }, { i64, i64 }* %"197_0", align 4
  %16 = insertvalue { { i64, i64 }, i64 } poison, i64 %"192_047", 1
  %17 = insertvalue { { i64, i64 }, i64 } %16, { i64, i64 } %"197_048", 0
  store { { i64, i64 }, i64 } %17, { { i64, i64 }, i64 }* %"198_0", align 4
  %"198_049" = load { { i64, i64 }, i64 }, { { i64, i64 }, i64 }* %"198_0", align 4
  %18 = insertvalue { i1, { { i64, i64 }, i64 } } { i1 true, { { i64, i64 }, i64 } poison }, { { i64, i64 }, i64 } %"198_049", 1
  store { i1, { { i64, i64 }, i64 } } %18, { i1, { { i64, i64 }, i64 } }* %"199_0", align 4
  %"200_050" = load {}, {}* %"200_0", align 1
  %"199_051" = load { i1, { { i64, i64 }, i64 } }, { i1, { { i64, i64 }, i64 } }* %"199_0", align 4
  store {} %"200_050", {}* %"200_0", align 1
  store { i1, { { i64, i64 }, i64 } } %"199_051", { i1, { { i64, i64 }, i64 } }* %"199_0", align 4
  %"200_052" = load {}, {}* %"200_0", align 1
  %"199_053" = load { i1, { { i64, i64 }, i64 } }, { i1, { { i64, i64 }, i64 } }* %"199_0", align 4
  switch i1 false, label %19 [
  ]

19:                                               ; preds = %12
  store { i1, { { i64, i64 }, i64 } } %"199_053", { i1, { { i64, i64 }, i64 } }* %"02", align 4
  br label %22

20:                                               ; preds = %28
  store {} undef, {}* %"205_0", align 1
  store { i1, { { i64, i64 }, i64 } } { i1 false, { { i64, i64 }, i64 } poison }, { i1, { { i64, i64 }, i64 } }* %"204_0", align 4
  %"205_054" = load {}, {}* %"205_0", align 1
  %"204_055" = load { i1, { { i64, i64 }, i64 } }, { i1, { { i64, i64 }, i64 } }* %"204_0", align 4
  store {} %"205_054", {}* %"205_0", align 1
  store { i1, { { i64, i64 }, i64 } } %"204_055", { i1, { { i64, i64 }, i64 } }* %"204_0", align 4
  %"205_056" = load {}, {}* %"205_0", align 1
  %"204_057" = load { i1, { { i64, i64 }, i64 } }, { i1, { { i64, i64 }, i64 } }* %"204_0", align 4
  switch i1 false, label %21 [
  ]

21:                                               ; preds = %20
  store { i1, { { i64, i64 }, i64 } } %"204_057", { i1, { { i64, i64 }, i64 } }* %"02", align 4
  br label %22

22:                                               ; preds = %21, %19
  %"040" = load { i1, { { i64, i64 }, i64 } }, { i1, { { i64, i64 }, i64 } }* %"02", align 4
  store { i1, { { i64, i64 }, i64 } } %"040", { i1, { { i64, i64 }, i64 } }* %"173_0", align 4
  %"173_058" = load { i1, { { i64, i64 }, i64 } }, { i1, { { i64, i64 }, i64 } }* %"173_0", align 4
  store { i1, { { i64, i64 }, i64 } } %"173_058", { i1, { { i64, i64 }, i64 } }* %"0", align 4
  %"059" = load { i1, { { i64, i64 }, i64 } }, { i1, { { i64, i64 }, i64 } }* %"0", align 4
  ret { i1, { { i64, i64 }, i64 } } %"059"

cond_340_case_0:                                  ; preds = %8
  %"015" = load i1, i1* %"014", align 1
  store i1 %"015", i1* %"337_0", align 1
  %"337_016" = load i1, i1* %"337_0", align 1
  store i1 %"337_016", i1* %"012", align 1
  br label %cond_exit_340

cond_340_case_1:                                  ; preds = %10
  %"018" = load i64, i64* %"017", align 4
  store i64 %"018", i64* %"336_0", align 4
  %"336_019" = load i64, i64* %"336_0", align 4
  %read_bool = call i1 @___read_future_bool(i64 %"336_019")
  call void @___dec_future_refcount(i64 %"336_019")
  %measure = select i1 %read_bool, i1 true, i1 false
  store i1 %measure, i1* %"334_0", align 1
  %"334_020" = load i1, i1* %"334_0", align 1
  store i1 %"334_020", i1* %"012", align 1
  br label %cond_exit_340

cond_exit_340:                                    ; preds = %cond_340_case_1, %cond_340_case_0
  %"013" = load i1, i1* %"012", align 1
  store i1 %"013", i1* %"340_0", align 1
  %"340_021" = load i1, i1* %"340_0", align 1
  store i1 %"340_021", i1* %"180_0", align 1
  %"180_022" = load i1, i1* %"180_0", align 1
  %"177_023" = load i64, i64* %"177_0", align 4
  %"177_124" = load i64, i64* %"177_1", align 4
  switch i1 %"180_022", label %23 [
    i1 true, label %24
  ]

23:                                               ; preds = %cond_exit_340
  store i64 %"177_023", i64* %"027", align 4
  store i64 %"177_124", i64* %"1", align 4
  br label %cond_181_case_0

24:                                               ; preds = %cond_exit_340
  store i64 %"177_023", i64* %"031", align 4
  store i64 %"177_124", i64* %"132", align 4
  br label %cond_181_case_1

cond_181_case_0:                                  ; preds = %23
  %"028" = load i64, i64* %"027", align 4
  %"129" = load i64, i64* %"1", align 4
  store i64 %"028", i64* %"183_0", align 4
  store i64 %"129", i64* %"183_1", align 4
  store { i1, i64, i64 } { i1 false, i64 poison, i64 poison }, { i1, i64, i64 }* %"185_0", align 4
  %"185_030" = load { i1, i64, i64 }, { i1, i64, i64 }* %"185_0", align 4
  store { i1, i64, i64 } %"185_030", { i1, i64, i64 }* %"025", align 4
  br label %cond_exit_181

cond_181_case_1:                                  ; preds = %24
  %"033" = load i64, i64* %"031", align 4
  %"134" = load i64, i64* %"132", align 4
  store i64 %"033", i64* %"187_0", align 4
  store i64 %"134", i64* %"187_1", align 4
  %"187_035" = load i64, i64* %"187_0", align 4
  %"187_136" = load i64, i64* %"187_1", align 4
  %25 = insertvalue { i1, i64, i64 } { i1 true, i64 poison, i64 poison }, i64 %"187_035", 1
  %26 = insertvalue { i1, i64, i64 } %25, i64 %"187_136", 2
  store { i1, i64, i64 } %26, { i1, i64, i64 }* %"189_0", align 4
  %"189_037" = load { i1, i64, i64 }, { i1, i64, i64 }* %"189_0", align 4
  store { i1, i64, i64 } %"189_037", { i1, i64, i64 }* %"025", align 4
  br label %cond_exit_181

cond_exit_181:                                    ; preds = %cond_181_case_1, %cond_181_case_0
  %"026" = load { i1, i64, i64 }, { i1, i64, i64 }* %"025", align 4
  store { i1, i64, i64 } %"026", { i1, i64, i64 }* %"181_0", align 4
  %"181_038" = load { i1, i64, i64 }, { i1, i64, i64 }* %"181_0", align 4
  store { i1, i64, i64 } %"181_038", { i1, i64, i64 }* %"181_0", align 4
  %"181_039" = load { i1, i64, i64 }, { i1, i64, i64 }* %"181_0", align 4
  %27 = extractvalue { i1, i64, i64 } %"181_039", 0
  switch i1 %27, label %28 [
    i1 true, label %29
  ]

28:                                               ; preds = %cond_exit_181
  br label %20

29:                                               ; preds = %cond_exit_181
  %30 = extractvalue { i1, i64, i64 } %"181_039", 1
  %31 = extractvalue { i1, i64, i64 } %"181_039", 2
  store i64 %30, i64* %"192_0", align 4
  store i64 %31, i64* %"192_1", align 4
  br label %12
}

define i64 @__hugr__.__tk2_qalloc.391() {
alloca_block:
  %"0" = alloca i64, align 8
  %"388_0" = alloca { i1, i64 }, align 8
  %"387_0" = alloca i64, align 8
  %"02" = alloca i64, align 8
  %"382_0" = alloca { i32, i8* }, align 8
  %"381_0" = alloca i64, align 8
  %"06" = alloca i64, align 8
  %"380_0" = alloca i64, align 8
  br label %entry_block

entry_block:                                      ; preds = %alloca_block
  %qalloc = call i64 @___qalloc()
  %not_max = icmp ne i64 %qalloc, -1
  br i1 %not_max, label %reset_bb, label %id_bb

reset_bb:                                         ; preds = %entry_block
  call void @___reset(i64 %qalloc)
  br label %id_bb

id_bb:                                            ; preds = %entry_block, %reset_bb
  %0 = insertvalue { i1, i64 } { i1 true, i64 poison }, i64 %qalloc, 1
  %1 = select i1 %not_max, { i1, i64 } %0, { i1, i64 } { i1 false, i64 poison }
  store { i1, i64 } %1, { i1, i64 }* %"388_0", align 4
  %"388_01" = load { i1, i64 }, { i1, i64 }* %"388_0", align 4
  %2 = extractvalue { i1, i64 } %"388_01", 0
  switch i1 %2, label %3 [
    i1 true, label %4
  ]

3:                                                ; preds = %id_bb
  br label %cond_387_case_0

4:                                                ; preds = %id_bb
  %5 = extractvalue { i1, i64 } %"388_01", 1
  store i64 %5, i64* %"06", align 4
  br label %cond_387_case_1

cond_387_case_0:                                  ; preds = %3
  store { i32, i8* } { i32 1, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @"e_No more qu.3B2EEBF0.0", i32 0, i32 0) }, { i32, i8* }* %"382_0", align 8
  %"382_04" = load { i32, i8* }, { i32, i8* }* %"382_0", align 8
  %6 = extractvalue { i32, i8* } %"382_04", 0
  %shift_code = add i32 %6, 1000
  %7 = extractvalue { i32, i8* } %"382_04", 1
  call void @panic(i32 %shift_code, i8* %7)
  store i64 0, i64* %"381_0", align 4
  %"381_05" = load i64, i64* %"381_0", align 4
  store i64 %"381_05", i64* %"02", align 4
  br label %cond_exit_387

cond_387_case_1:                                  ; preds = %4
  %"07" = load i64, i64* %"06", align 4
  store i64 %"07", i64* %"380_0", align 4
  %"380_08" = load i64, i64* %"380_0", align 4
  store i64 %"380_08", i64* %"02", align 4
  br label %cond_exit_387

cond_exit_387:                                    ; preds = %cond_387_case_1, %cond_387_case_0
  %"03" = load i64, i64* %"02", align 4
  store i64 %"03", i64* %"387_0", align 4
  %"387_09" = load i64, i64* %"387_0", align 4
  store i64 %"387_09", i64* %"0", align 4
  %"010" = load i64, i64* %"0", align 4
  ret i64 %"010"
}

define { { i1, i64 }*, i64 } @"__hugr__.$array.__setitem__.linear.4$$t(qubit)$n(10).418"({ { i1, i64 }*, i64 } %0, i64 %1, i64 %2) {
alloca_block:
  %"0" = alloca { { i1, i64 }*, i64 }, align 8
  %"419_0" = alloca { { i1, i64 }*, i64 }, align 8
  %"419_1" = alloca i64, align 8
  %"419_2" = alloca i64, align 8
  %"422_0" = alloca i64, align 8
  %"421_0" = alloca { i1, i64 }, align 8
  %"423_0" = alloca { i1, { { i1, i64 }*, i64 }, { i1, i64 } }, align 8
  %"06" = alloca { i1, { { i1, i64 }*, i64 }, { i1, i64 } }, align 8
  %"424_0" = alloca { i1, i64 }, align 8
  %"424_1" = alloca { { i1, i64 }*, i64 }, align 8
  %"09" = alloca { i1, i64 }, align 8
  %"1" = alloca { { i1, i64 }*, i64 }, align 8
  %"012" = alloca { i1, i64 }, align 8
  %"113" = alloca { { i1, i64 }*, i64 }, align 8
  %"426_0" = alloca { i1, i64 }, align 8
  %"426_1" = alloca { { i1, i64 }*, i64 }, align 8
  %"428_0" = alloca { i32, i8* }, align 8
  %"430_0" = alloca { i1, i64 }, align 8
  %"430_1" = alloca { { i1, i64 }*, i64 }, align 8
  %"021" = alloca { i1, i64 }, align 8
  %"122" = alloca { { i1, i64 }*, i64 }, align 8
  %"432_0" = alloca { i1, i64 }, align 8
  %"432_1" = alloca { { i1, i64 }*, i64 }, align 8
  %"028" = alloca i64, align 8
  %"439_0" = alloca i64, align 8
  %"441_0" = alloca { i32, i8* }, align 8
  br label %entry_block

entry_block:                                      ; preds = %alloca_block
  store { { i1, i64 }*, i64 } %0, { { i1, i64 }*, i64 }* %"419_0", align 8
  store i64 %1, i64* %"419_1", align 4
  store i64 %2, i64* %"419_2", align 4
  %"419_11" = load i64, i64* %"419_1", align 4
  store i64 %"419_11", i64* %"422_0", align 4
  %"419_22" = load i64, i64* %"419_2", align 4
  %3 = insertvalue { i1, i64 } { i1 true, i64 poison }, i64 %"419_22", 1
  store { i1, i64 } %3, { i1, i64 }* %"421_0", align 4
  %"419_03" = load { { i1, i64 }*, i64 }, { { i1, i64 }*, i64 }* %"419_0", align 8
  %"422_04" = load i64, i64* %"422_0", align 4
  %"421_05" = load { i1, i64 }, { i1, i64 }* %"421_0", align 4
  %array_ptr = extractvalue { { i1, i64 }*, i64 } %"419_03", 0
  %array_offset = extractvalue { { i1, i64 }*, i64 } %"419_03", 1
  %4 = icmp ult i64 %"422_04", 10
  br i1 %4, label %8, label %5

5:                                                ; preds = %entry_block
  %6 = insertvalue { i1, { { i1, i64 }*, i64 }, { i1, i64 } } { i1 false, { { i1, i64 }*, i64 } poison, { i1, i64 } poison }, { i1, i64 } %"421_05", 2
  %7 = insertvalue { i1, { { i1, i64 }*, i64 }, { i1, i64 } } %6, { { i1, i64 }*, i64 } %"419_03", 1
  store { i1, { { i1, i64 }*, i64 }, { i1, i64 } } %7, { i1, { { i1, i64 }*, i64 }, { i1, i64 } }* %"06", align 8
  br label %14

8:                                                ; preds = %entry_block
  %9 = add i64 %"422_04", %array_offset
  %10 = getelementptr inbounds { i1, i64 }, { i1, i64 }* %array_ptr, i64 %9
  %11 = load { i1, i64 }, { i1, i64 }* %10, align 4
  store { i1, i64 } %"421_05", { i1, i64 }* %10, align 4
  %12 = insertvalue { i1, { { i1, i64 }*, i64 }, { i1, i64 } } { i1 true, { { i1, i64 }*, i64 } poison, { i1, i64 } poison }, { i1, i64 } %11, 2
  %13 = insertvalue { i1, { { i1, i64 }*, i64 }, { i1, i64 } } %12, { { i1, i64 }*, i64 } %"419_03", 1
  store { i1, { { i1, i64 }*, i64 }, { i1, i64 } } %13, { i1, { { i1, i64 }*, i64 }, { i1, i64 } }* %"06", align 8
  br label %14

14:                                               ; preds = %5, %8
  %"07" = load { i1, { { i1, i64 }*, i64 }, { i1, i64 } }, { i1, { { i1, i64 }*, i64 }, { i1, i64 } }* %"06", align 8
  store { i1, { { i1, i64 }*, i64 }, { i1, i64 } } %"07", { i1, { { i1, i64 }*, i64 }, { i1, i64 } }* %"423_0", align 8
  %"423_08" = load { i1, { { i1, i64 }*, i64 }, { i1, i64 } }, { i1, { { i1, i64 }*, i64 }, { i1, i64 } }* %"423_0", align 8
  %15 = extractvalue { i1, { { i1, i64 }*, i64 }, { i1, i64 } } %"423_08", 0
  switch i1 %15, label %16 [
    i1 true, label %19
  ]

16:                                               ; preds = %14
  %17 = extractvalue { i1, { { i1, i64 }*, i64 }, { i1, i64 } } %"423_08", 2
  %18 = extractvalue { i1, { { i1, i64 }*, i64 }, { i1, i64 } } %"423_08", 1
  store { i1, i64 } %17, { i1, i64 }* %"012", align 4
  store { { i1, i64 }*, i64 } %18, { { i1, i64 }*, i64 }* %"113", align 8
  br label %cond_424_case_0

19:                                               ; preds = %14
  %20 = extractvalue { i1, { { i1, i64 }*, i64 }, { i1, i64 } } %"423_08", 2
  %21 = extractvalue { i1, { { i1, i64 }*, i64 }, { i1, i64 } } %"423_08", 1
  store { i1, i64 } %20, { i1, i64 }* %"021", align 4
  store { { i1, i64 }*, i64 } %21, { { i1, i64 }*, i64 }* %"122", align 8
  br label %cond_424_case_1

cond_424_case_0:                                  ; preds = %16
  %"014" = load { i1, i64 }, { i1, i64 }* %"012", align 4
  %"115" = load { { i1, i64 }*, i64 }, { { i1, i64 }*, i64 }* %"113", align 8
  store { i1, i64 } %"014", { i1, i64 }* %"426_0", align 4
  store { { i1, i64 }*, i64 } %"115", { { i1, i64 }*, i64 }* %"426_1", align 8
  store { i32, i8* } { i32 1, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @"e_Array inde.2A1CB845.0", i32 0, i32 0) }, { i32, i8* }* %"428_0", align 8
  %"428_016" = load { i32, i8* }, { i32, i8* }* %"428_0", align 8
  %"426_017" = load { i1, i64 }, { i1, i64 }* %"426_0", align 4
  %"426_118" = load { { i1, i64 }*, i64 }, { { i1, i64 }*, i64 }* %"426_1", align 8
  %22 = extractvalue { i32, i8* } %"428_016", 0
  %shift_code = add i32 %22, 1000
  %23 = extractvalue { i32, i8* } %"428_016", 1
  call void @panic(i32 %shift_code, i8* %23)
  store { i1, i64 } zeroinitializer, { i1, i64 }* %"430_0", align 4
  store { { i1, i64 }*, i64 } zeroinitializer, { { i1, i64 }*, i64 }* %"430_1", align 8
  %"430_019" = load { i1, i64 }, { i1, i64 }* %"430_0", align 4
  %"430_120" = load { { i1, i64 }*, i64 }, { { i1, i64 }*, i64 }* %"430_1", align 8
  store { i1, i64 } %"430_019", { i1, i64 }* %"09", align 4
  store { { i1, i64 }*, i64 } %"430_120", { { i1, i64 }*, i64 }* %"1", align 8
  br label %cond_exit_424

cond_424_case_1:                                  ; preds = %19
  %"023" = load { i1, i64 }, { i1, i64 }* %"021", align 4
  %"124" = load { { i1, i64 }*, i64 }, { { i1, i64 }*, i64 }* %"122", align 8
  store { i1, i64 } %"023", { i1, i64 }* %"432_0", align 4
  store { { i1, i64 }*, i64 } %"124", { { i1, i64 }*, i64 }* %"432_1", align 8
  %"432_025" = load { i1, i64 }, { i1, i64 }* %"432_0", align 4
  %"432_126" = load { { i1, i64 }*, i64 }, { { i1, i64 }*, i64 }* %"432_1", align 8
  store { i1, i64 } %"432_025", { i1, i64 }* %"09", align 4
  store { { i1, i64 }*, i64 } %"432_126", { { i1, i64 }*, i64 }* %"1", align 8
  br label %cond_exit_424

cond_exit_424:                                    ; preds = %cond_424_case_1, %cond_424_case_0
  %"010" = load { i1, i64 }, { i1, i64 }* %"09", align 4
  %"111" = load { { i1, i64 }*, i64 }, { { i1, i64 }*, i64 }* %"1", align 8
  store { i1, i64 } %"010", { i1, i64 }* %"424_0", align 4
  store { { i1, i64 }*, i64 } %"111", { { i1, i64 }*, i64 }* %"424_1", align 8
  %"424_027" = load { i1, i64 }, { i1, i64 }* %"424_0", align 4
  %24 = extractvalue { i1, i64 } %"424_027", 0
  switch i1 %24, label %25 [
    i1 true, label %26
  ]

25:                                               ; preds = %cond_exit_424
  br label %cond_434_case_0

26:                                               ; preds = %cond_exit_424
  %27 = extractvalue { i1, i64 } %"424_027", 1
  store i64 %27, i64* %"028", align 4
  br label %cond_434_case_1

cond_434_case_0:                                  ; preds = %25
  br label %cond_exit_434

cond_434_case_1:                                  ; preds = %26
  %"029" = load i64, i64* %"028", align 4
  store i64 %"029", i64* %"439_0", align 4
  store { i32, i8* } { i32 1, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @"e_Linear arr.8A243695.0", i32 0, i32 0) }, { i32, i8* }* %"441_0", align 8
  %"441_030" = load { i32, i8* }, { i32, i8* }* %"441_0", align 8
  %"439_031" = load i64, i64* %"439_0", align 4
  %28 = extractvalue { i32, i8* } %"441_030", 0
  %shift_code32 = add i32 %28, 1000
  %29 = extractvalue { i32, i8* } %"441_030", 1
  call void @panic(i32 %shift_code32, i8* %29)
  br label %cond_exit_434

cond_exit_434:                                    ; preds = %cond_434_case_1, %cond_434_case_0
  %"424_133" = load { { i1, i64 }*, i64 }, { { i1, i64 }*, i64 }* %"424_1", align 8
  store { { i1, i64 }*, i64 } %"424_133", { { i1, i64 }*, i64 }* %"0", align 8
  %"034" = load { { i1, i64 }*, i64 }, { { i1, i64 }*, i64 }* %"0", align 8
  ret { { i1, i64 }*, i64 } %"034"
}

define { i64, { { i1, i64 }*, i64 } } @"__hugr__.$array.__getitem__.linear.2$$t(qubit)$n(10).444"({ { i1, i64 }*, i64 } %0, i64 %1) {
alloca_block:
  %"0" = alloca i64, align 8
  %"1" = alloca { { i1, i64 }*, i64 }, align 8
  %"445_0" = alloca { { i1, i64 }*, i64 }, align 8
  %"445_1" = alloca i64, align 8
  %"448_0" = alloca i64, align 8
  %"447_0" = alloca { i1, i64 }, align 8
  %"449_0" = alloca { i1, { { i1, i64 }*, i64 }, { i1, i64 } }, align 8
  %"05" = alloca { i1, { { i1, i64 }*, i64 }, { i1, i64 } }, align 8
  %"450_0" = alloca { i1, i64 }, align 8
  %"450_1" = alloca { { i1, i64 }*, i64 }, align 8
  %"08" = alloca { i1, i64 }, align 8
  %"19" = alloca { { i1, i64 }*, i64 }, align 8
  %"012" = alloca { i1, i64 }, align 8
  %"113" = alloca { { i1, i64 }*, i64 }, align 8
  %"452_0" = alloca { i1, i64 }, align 8
  %"452_1" = alloca { { i1, i64 }*, i64 }, align 8
  %"454_0" = alloca { i32, i8* }, align 8
  %"456_0" = alloca { i1, i64 }, align 8
  %"456_1" = alloca { { i1, i64 }*, i64 }, align 8
  %"021" = alloca { i1, i64 }, align 8
  %"122" = alloca { { i1, i64 }*, i64 }, align 8
  %"458_0" = alloca { i1, i64 }, align 8
  %"458_1" = alloca { { i1, i64 }*, i64 }, align 8
  %"460_0" = alloca i64, align 8
  %"028" = alloca i64, align 8
  %"464_0" = alloca { i32, i8* }, align 8
  %"466_0" = alloca i64, align 8
  %"033" = alloca i64, align 8
  %"468_0" = alloca i64, align 8
  br label %entry_block

entry_block:                                      ; preds = %alloca_block
  store { { i1, i64 }*, i64 } %0, { { i1, i64 }*, i64 }* %"445_0", align 8
  store i64 %1, i64* %"445_1", align 4
  %"445_11" = load i64, i64* %"445_1", align 4
  store i64 %"445_11", i64* %"448_0", align 4
  store { i1, i64 } { i1 false, i64 poison }, { i1, i64 }* %"447_0", align 4
  %"445_02" = load { { i1, i64 }*, i64 }, { { i1, i64 }*, i64 }* %"445_0", align 8
  %"448_03" = load i64, i64* %"448_0", align 4
  %"447_04" = load { i1, i64 }, { i1, i64 }* %"447_0", align 4
  %array_ptr = extractvalue { { i1, i64 }*, i64 } %"445_02", 0
  %array_offset = extractvalue { { i1, i64 }*, i64 } %"445_02", 1
  %2 = icmp ult i64 %"448_03", 10
  br i1 %2, label %6, label %3

3:                                                ; preds = %entry_block
  %4 = insertvalue { i1, { { i1, i64 }*, i64 }, { i1, i64 } } { i1 false, { { i1, i64 }*, i64 } poison, { i1, i64 } poison }, { i1, i64 } %"447_04", 2
  %5 = insertvalue { i1, { { i1, i64 }*, i64 }, { i1, i64 } } %4, { { i1, i64 }*, i64 } %"445_02", 1
  store { i1, { { i1, i64 }*, i64 }, { i1, i64 } } %5, { i1, { { i1, i64 }*, i64 }, { i1, i64 } }* %"05", align 8
  br label %12

6:                                                ; preds = %entry_block
  %7 = add i64 %"448_03", %array_offset
  %8 = getelementptr inbounds { i1, i64 }, { i1, i64 }* %array_ptr, i64 %7
  %9 = load { i1, i64 }, { i1, i64 }* %8, align 4
  store { i1, i64 } %"447_04", { i1, i64 }* %8, align 4
  %10 = insertvalue { i1, { { i1, i64 }*, i64 }, { i1, i64 } } { i1 true, { { i1, i64 }*, i64 } poison, { i1, i64 } poison }, { i1, i64 } %9, 2
  %11 = insertvalue { i1, { { i1, i64 }*, i64 }, { i1, i64 } } %10, { { i1, i64 }*, i64 } %"445_02", 1
  store { i1, { { i1, i64 }*, i64 }, { i1, i64 } } %11, { i1, { { i1, i64 }*, i64 }, { i1, i64 } }* %"05", align 8
  br label %12

12:                                               ; preds = %3, %6
  %"06" = load { i1, { { i1, i64 }*, i64 }, { i1, i64 } }, { i1, { { i1, i64 }*, i64 }, { i1, i64 } }* %"05", align 8
  store { i1, { { i1, i64 }*, i64 }, { i1, i64 } } %"06", { i1, { { i1, i64 }*, i64 }, { i1, i64 } }* %"449_0", align 8
  %"449_07" = load { i1, { { i1, i64 }*, i64 }, { i1, i64 } }, { i1, { { i1, i64 }*, i64 }, { i1, i64 } }* %"449_0", align 8
  %13 = extractvalue { i1, { { i1, i64 }*, i64 }, { i1, i64 } } %"449_07", 0
  switch i1 %13, label %14 [
    i1 true, label %17
  ]

14:                                               ; preds = %12
  %15 = extractvalue { i1, { { i1, i64 }*, i64 }, { i1, i64 } } %"449_07", 2
  %16 = extractvalue { i1, { { i1, i64 }*, i64 }, { i1, i64 } } %"449_07", 1
  store { i1, i64 } %15, { i1, i64 }* %"012", align 4
  store { { i1, i64 }*, i64 } %16, { { i1, i64 }*, i64 }* %"113", align 8
  br label %cond_450_case_0

17:                                               ; preds = %12
  %18 = extractvalue { i1, { { i1, i64 }*, i64 }, { i1, i64 } } %"449_07", 2
  %19 = extractvalue { i1, { { i1, i64 }*, i64 }, { i1, i64 } } %"449_07", 1
  store { i1, i64 } %18, { i1, i64 }* %"021", align 4
  store { { i1, i64 }*, i64 } %19, { { i1, i64 }*, i64 }* %"122", align 8
  br label %cond_450_case_1

cond_450_case_0:                                  ; preds = %14
  %"014" = load { i1, i64 }, { i1, i64 }* %"012", align 4
  %"115" = load { { i1, i64 }*, i64 }, { { i1, i64 }*, i64 }* %"113", align 8
  store { i1, i64 } %"014", { i1, i64 }* %"452_0", align 4
  store { { i1, i64 }*, i64 } %"115", { { i1, i64 }*, i64 }* %"452_1", align 8
  store { i32, i8* } { i32 1, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @"e_Array inde.2A1CB845.0", i32 0, i32 0) }, { i32, i8* }* %"454_0", align 8
  %"454_016" = load { i32, i8* }, { i32, i8* }* %"454_0", align 8
  %"452_017" = load { i1, i64 }, { i1, i64 }* %"452_0", align 4
  %"452_118" = load { { i1, i64 }*, i64 }, { { i1, i64 }*, i64 }* %"452_1", align 8
  %20 = extractvalue { i32, i8* } %"454_016", 0
  %shift_code = add i32 %20, 1000
  %21 = extractvalue { i32, i8* } %"454_016", 1
  call void @panic(i32 %shift_code, i8* %21)
  store { i1, i64 } zeroinitializer, { i1, i64 }* %"456_0", align 4
  store { { i1, i64 }*, i64 } zeroinitializer, { { i1, i64 }*, i64 }* %"456_1", align 8
  %"456_019" = load { i1, i64 }, { i1, i64 }* %"456_0", align 4
  %"456_120" = load { { i1, i64 }*, i64 }, { { i1, i64 }*, i64 }* %"456_1", align 8
  store { i1, i64 } %"456_019", { i1, i64 }* %"08", align 4
  store { { i1, i64 }*, i64 } %"456_120", { { i1, i64 }*, i64 }* %"19", align 8
  br label %cond_exit_450

cond_450_case_1:                                  ; preds = %17
  %"023" = load { i1, i64 }, { i1, i64 }* %"021", align 4
  %"124" = load { { i1, i64 }*, i64 }, { { i1, i64 }*, i64 }* %"122", align 8
  store { i1, i64 } %"023", { i1, i64 }* %"458_0", align 4
  store { { i1, i64 }*, i64 } %"124", { { i1, i64 }*, i64 }* %"458_1", align 8
  %"458_025" = load { i1, i64 }, { i1, i64 }* %"458_0", align 4
  %"458_126" = load { { i1, i64 }*, i64 }, { { i1, i64 }*, i64 }* %"458_1", align 8
  store { i1, i64 } %"458_025", { i1, i64 }* %"08", align 4
  store { { i1, i64 }*, i64 } %"458_126", { { i1, i64 }*, i64 }* %"19", align 8
  br label %cond_exit_450

cond_exit_450:                                    ; preds = %cond_450_case_1, %cond_450_case_0
  %"010" = load { i1, i64 }, { i1, i64 }* %"08", align 4
  %"111" = load { { i1, i64 }*, i64 }, { { i1, i64 }*, i64 }* %"19", align 8
  store { i1, i64 } %"010", { i1, i64 }* %"450_0", align 4
  store { { i1, i64 }*, i64 } %"111", { { i1, i64 }*, i64 }* %"450_1", align 8
  %"450_027" = load { i1, i64 }, { i1, i64 }* %"450_0", align 4
  %22 = extractvalue { i1, i64 } %"450_027", 0
  switch i1 %22, label %23 [
    i1 true, label %24
  ]

23:                                               ; preds = %cond_exit_450
  br label %cond_460_case_0

24:                                               ; preds = %cond_exit_450
  %25 = extractvalue { i1, i64 } %"450_027", 1
  store i64 %25, i64* %"033", align 4
  br label %cond_460_case_1

cond_460_case_0:                                  ; preds = %23
  store { i32, i8* } { i32 1, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @"e_Linear arr.27F92A51.0", i32 0, i32 0) }, { i32, i8* }* %"464_0", align 8
  %"464_030" = load { i32, i8* }, { i32, i8* }* %"464_0", align 8
  %26 = extractvalue { i32, i8* } %"464_030", 0
  %shift_code31 = add i32 %26, 1000
  %27 = extractvalue { i32, i8* } %"464_030", 1
  call void @panic(i32 %shift_code31, i8* %27)
  store i64 0, i64* %"466_0", align 4
  %"466_032" = load i64, i64* %"466_0", align 4
  store i64 %"466_032", i64* %"028", align 4
  br label %cond_exit_460

cond_460_case_1:                                  ; preds = %24
  %"034" = load i64, i64* %"033", align 4
  store i64 %"034", i64* %"468_0", align 4
  %"468_035" = load i64, i64* %"468_0", align 4
  store i64 %"468_035", i64* %"028", align 4
  br label %cond_exit_460

cond_exit_460:                                    ; preds = %cond_460_case_1, %cond_460_case_0
  %"029" = load i64, i64* %"028", align 4
  store i64 %"029", i64* %"460_0", align 4
  %"460_036" = load i64, i64* %"460_0", align 4
  %"450_137" = load { { i1, i64 }*, i64 }, { { i1, i64 }*, i64 }* %"450_1", align 8
  store i64 %"460_036", i64* %"0", align 4
  store { { i1, i64 }*, i64 } %"450_137", { { i1, i64 }*, i64 }* %"1", align 8
  %"038" = load i64, i64* %"0", align 4
  %"139" = load { { i1, i64 }*, i64 }, { { i1, i64 }*, i64 }* %"1", align 8
  %mrv = insertvalue { i64, { { i1, i64 }*, i64 } } undef, i64 %"038", 0
  %mrv40 = insertvalue { i64, { { i1, i64 }*, i64 } } %mrv, { { i1, i64 }*, i64 } %"139", 1
  ret { i64, { { i1, i64 }*, i64 } } %mrv40
}

define i64 @__hugr__.__tk2_x.378(i64 %0) {
alloca_block:
  %"0" = alloca i64, align 8
  %"377_0" = alloca i64, align 8
  %"374_0" = alloca double, align 8
  %"372_0" = alloca double, align 8
  %"371_0" = alloca i64, align 8
  br label %entry_block

entry_block:                                      ; preds = %alloca_block
  store i64 %0, i64* %"377_0", align 4
  store double 0x400921FB54442D18, double* %"374_0", align 8
  store double 0.000000e+00, double* %"372_0", align 8
  %"377_01" = load i64, i64* %"377_0", align 4
  %"374_02" = load double, double* %"374_0", align 8
  %"372_03" = load double, double* %"372_0", align 8
  call void @___rxy(i64 %"377_01", double %"374_02", double %"372_03")
  store i64 %"377_01", i64* %"371_0", align 4
  %"371_04" = load i64, i64* %"371_0", align 4
  store i64 %"371_04", i64* %"0", align 4
  %"05" = load i64, i64* %"0", align 4
  ret i64 %"05"
}

define { { i1, { i1, i64, i1 } }*, i64 } @"__hugr__.$measure_array$$n(10).472"({ { i1, i64 }*, i64 } %0) {
alloca_block:
  %"0" = alloca { { i1, { i1, i64, i1 } }*, i64 }, align 8
  %"473_0" = alloca { { i1, i64 }*, i64 }, align 8
  %"475_0" = alloca { { i1, { i1, i64, i1 } }*, i64 }, align 8
  %"477_0" = alloca { { i1, i64 }*, i64 }, align 8
  %"02" = alloca { { i1, { i1, i64, i1 } }*, i64 }, align 8
  %"595_0" = alloca {}, align 8
  %"502_0" = alloca { { i1, { i1, i64, i1 } }*, i64 }, align 8
  %"487_0" = alloca { { { i1, i64 }*, i64 }, i64 }, align 8
  %"500_0" = alloca { { i1, i64 }*, i64 }, align 8
  %"500_1" = alloca i64, align 8
  %"501_0" = alloca { { { i1, i64 }*, i64 }, i64 }, align 8
  %"485_0" = alloca i64, align 8
  %"479_0" = alloca { i1, { i1, i64, i1 } } ()*, align 8
  %"484_0" = alloca { { i1, { i1, i64, i1 } }*, i64 }, align 8
  %"502_1" = alloca i64, align 8
  %"503_0" = alloca { { { i1, i64 }*, i64 }, i64 }, align 8
  %"503_1" = alloca { { i1, { i1, i64, i1 } }*, i64 }, align 8
  %"503_2" = alloca i64, align 8
  %"560_0" = alloca { i1, { { { i1, i64 }*, i64 }, i64 } }, align 8
  %"560_1" = alloca { { i1, { i1, i64, i1 } }*, i64 }, align 8
  %"560_2" = alloca i64, align 8
  %"505_0" = alloca { { i1, i64 }*, i64 }, align 8
  %"505_1" = alloca i64, align 8
  %"506_0" = alloca { { { i1, i64 }*, i64 }, i64 }, align 8
  %"507_0" = alloca { i1, { { { { i1, i64 }*, i64 }, i64 }, i64 } }, align 8
  %"022" = alloca { i1, { { { i1, i64 }*, i64 }, i64 } }, align 8
  %"1" = alloca { { i1, { i1, i64, i1 } }*, i64 }, align 8
  %"2" = alloca i64, align 8
  %"026" = alloca { { i1, { i1, i64, i1 } }*, i64 }, align 8
  %"127" = alloca i64, align 8
  %"562_0" = alloca { { i1, { i1, i64, i1 } }*, i64 }, align 8
  %"562_1" = alloca i64, align 8
  %"564_0" = alloca { i1, { { { i1, i64 }*, i64 }, i64 } }, align 8
  %"033" = alloca { { { { i1, i64 }*, i64 }, i64 }, i64 }, align 8
  %"134" = alloca { { i1, { i1, i64, i1 } }*, i64 }, align 8
  %"235" = alloca i64, align 8
  %"566_0" = alloca { { { { i1, i64 }*, i64 }, i64 }, i64 }, align 8
  %"566_1" = alloca { { i1, { i1, i64, i1 } }*, i64 }, align 8
  %"566_2" = alloca i64, align 8
  %"592_0" = alloca i64, align 8
  %"594_0" = alloca i64, align 8
  %"568_0" = alloca i64, align 8
  %"568_1" = alloca { { { i1, i64 }*, i64 }, i64 }, align 8
  %"569_0" = alloca { { i1, i64 }*, i64 }, align 8
  %"569_1" = alloca i64, align 8
  %"570_0" = alloca { { { i1, i64 }*, i64 }, i64 }, align 8
  %"571_0" = alloca { { { { i1, i64 }*, i64 }, i64 }, i64 }, align 8
  %"572_0" = alloca i64, align 8
  %"572_1" = alloca { { { i1, i64 }*, i64 }, i64 }, align 8
  %"574_0" = alloca { i1, i64, i1 }, align 8
  %"320_0" = alloca i64, align 8
  %"318_0" = alloca i64, align 8
  %"317_0" = alloca { i1, i64, i1 }, align 8
  %"575_0" = alloca { { i1, { i1, i64, i1 } }*, i64 }, align 8
  %"573_0" = alloca { i1, { { { i1, i64 }*, i64 }, i64 } }, align 8
  br label %entry_block

entry_block:                                      ; preds = %alloca_block
  store { { i1, i64 }*, i64 } %0, { { i1, i64 }*, i64 }* %"473_0", align 8
  %"473_01" = load { { i1, i64 }*, i64 }, { { i1, i64 }*, i64 }* %"473_0", align 8
  store { { i1, i64 }*, i64 } %"473_01", { { i1, i64 }*, i64 }* %"477_0", align 8
  br label %1

1:                                                ; preds = %entry_block
  %"477_03" = load { { i1, i64 }*, i64 }, { { i1, i64 }*, i64 }* %"477_0", align 8
  store { { i1, i64 }*, i64 } %"477_03", { { i1, i64 }*, i64 }* %"477_0", align 8
  store {} undef, {}* %"595_0", align 1
  %"477_04" = load { { i1, i64 }*, i64 }, { { i1, i64 }*, i64 }* %"477_0", align 8
  %2 = call { { { i1, i64 }*, i64 }, i64 } @"__hugr__.$__iter__$$t(qubit)$n(10).488"({ { i1, i64 }*, i64 } %"477_04")
  store { { { i1, i64 }*, i64 }, i64 } %2, { { { i1, i64 }*, i64 }, i64 }* %"487_0", align 8
  %"487_05" = load { { { i1, i64 }*, i64 }, i64 }, { { { i1, i64 }*, i64 }, i64 }* %"487_0", align 8
  %3 = extractvalue { { { i1, i64 }*, i64 }, i64 } %"487_05", 0
  %4 = extractvalue { { { i1, i64 }*, i64 }, i64 } %"487_05", 1
  store { { i1, i64 }*, i64 } %3, { { i1, i64 }*, i64 }* %"500_0", align 8
  store i64 %4, i64* %"500_1", align 4
  %"500_06" = load { { i1, i64 }*, i64 }, { { i1, i64 }*, i64 }* %"500_0", align 8
  %"500_17" = load i64, i64* %"500_1", align 4
  %5 = insertvalue { { { i1, i64 }*, i64 }, i64 } poison, { { i1, i64 }*, i64 } %"500_06", 0
  %6 = insertvalue { { { i1, i64 }*, i64 }, i64 } %5, i64 %"500_17", 1
  store { { { i1, i64 }*, i64 }, i64 } %6, { { { i1, i64 }*, i64 }, i64 }* %"501_0", align 8
  store i64 0, i64* %"485_0", align 4
  store { i1, { i1, i64, i1 } } ()* @"__hugr__.$array.__comprehension.init.6$$t(bool).480", { i1, { i1, i64, i1 } } ()** %"479_0", align 8
  %"479_08" = load { i1, { i1, i64, i1 } } ()*, { i1, { i1, i64, i1 } } ()** %"479_0", align 8
  %7 = call i8* @malloc(i64 mul (i64 ptrtoint ({ i1, { i1, i64, i1 } }* getelementptr ({ i1, { i1, i64, i1 } }, { i1, { i1, i64, i1 } }* null, i32 1) to i64), i64 10))
  %8 = bitcast i8* %7 to { i1, { i1, i64, i1 } }*
  %9 = insertvalue { { i1, { i1, i64, i1 } }*, i64 } poison, { i1, { i1, i64, i1 } }* %8, 0
  %10 = insertvalue { { i1, { i1, i64, i1 } }*, i64 } %9, i64 0, 1
  %11 = alloca i64, align 8
  store i64 0, i64* %11, align 4
  br label %13

12:                                               ; preds = %31
  %"069" = load { { i1, { i1, i64, i1 } }*, i64 }, { { i1, { i1, i64, i1 } }*, i64 }* %"02", align 8
  store { { i1, { i1, i64, i1 } }*, i64 } %"069", { { i1, { i1, i64, i1 } }*, i64 }* %"475_0", align 8
  %"475_070" = load { { i1, { i1, i64, i1 } }*, i64 }, { { i1, { i1, i64, i1 } }*, i64 }* %"475_0", align 8
  store { { i1, { i1, i64, i1 } }*, i64 } %"475_070", { { i1, { i1, i64, i1 } }*, i64 }* %"0", align 8
  %"071" = load { { i1, { i1, i64, i1 } }*, i64 }, { { i1, { i1, i64, i1 } }*, i64 }* %"0", align 8
  ret { { i1, { i1, i64, i1 } }*, i64 } %"071"

13:                                               ; preds = %16, %1
  %14 = load i64, i64* %11, align 4
  %15 = icmp ult i64 %14, 10
  br i1 %15, label %16, label %21

16:                                               ; preds = %13
  %17 = load i64, i64* %11, align 4
  %18 = call { i1, { i1, i64, i1 } } %"479_08"()
  %19 = getelementptr inbounds { i1, { i1, i64, i1 } }, { i1, { i1, i64, i1 } }* %8, i64 %17
  store { i1, { i1, i64, i1 } } %18, { i1, { i1, i64, i1 } }* %19, align 4
  %20 = add i64 %17, 1
  store i64 %20, i64* %11, align 4
  br label %13

21:                                               ; preds = %13
  store { { i1, { i1, i64, i1 } }*, i64 } %10, { { i1, { i1, i64, i1 } }*, i64 }* %"484_0", align 8
  %"501_09" = load { { { i1, i64 }*, i64 }, i64 }, { { { i1, i64 }*, i64 }, i64 }* %"501_0", align 8
  %"484_010" = load { { i1, { i1, i64, i1 } }*, i64 }, { { i1, { i1, i64, i1 } }*, i64 }* %"484_0", align 8
  %"485_011" = load i64, i64* %"485_0", align 4
  store { { { i1, i64 }*, i64 }, i64 } %"501_09", { { { i1, i64 }*, i64 }, i64 }* %"503_0", align 8
  store { { i1, { i1, i64, i1 } }*, i64 } %"484_010", { { i1, { i1, i64, i1 } }*, i64 }* %"503_1", align 8
  store i64 %"485_011", i64* %"503_2", align 4
  br label %loop_body

loop_body:                                        ; preds = %47, %21
  %"503_012" = load { { { i1, i64 }*, i64 }, i64 }, { { { i1, i64 }*, i64 }, i64 }* %"503_0", align 8
  %"503_113" = load { { i1, { i1, i64, i1 } }*, i64 }, { { i1, { i1, i64, i1 } }*, i64 }* %"503_1", align 8
  %"503_214" = load i64, i64* %"503_2", align 4
  store { { { i1, i64 }*, i64 }, i64 } %"503_012", { { { i1, i64 }*, i64 }, i64 }* %"503_0", align 8
  store { { i1, { i1, i64, i1 } }*, i64 } %"503_113", { { i1, { i1, i64, i1 } }*, i64 }* %"503_1", align 8
  store i64 %"503_214", i64* %"503_2", align 4
  %"503_015" = load { { { i1, i64 }*, i64 }, i64 }, { { { i1, i64 }*, i64 }, i64 }* %"503_0", align 8
  %22 = extractvalue { { { i1, i64 }*, i64 }, i64 } %"503_015", 0
  %23 = extractvalue { { { i1, i64 }*, i64 }, i64 } %"503_015", 1
  store { { i1, i64 }*, i64 } %22, { { i1, i64 }*, i64 }* %"505_0", align 8
  store i64 %23, i64* %"505_1", align 4
  %"505_016" = load { { i1, i64 }*, i64 }, { { i1, i64 }*, i64 }* %"505_0", align 8
  %"505_117" = load i64, i64* %"505_1", align 4
  %24 = insertvalue { { { i1, i64 }*, i64 }, i64 } poison, { { i1, i64 }*, i64 } %"505_016", 0
  %25 = insertvalue { { { i1, i64 }*, i64 }, i64 } %24, i64 %"505_117", 1
  store { { { i1, i64 }*, i64 }, i64 } %25, { { { i1, i64 }*, i64 }, i64 }* %"506_0", align 8
  %"506_018" = load { { { i1, i64 }*, i64 }, i64 }, { { { i1, i64 }*, i64 }, i64 }* %"506_0", align 8
  %26 = call { i1, { { { { i1, i64 }*, i64 }, i64 }, i64 } } @"__hugr__.$__next__$$t(qubit)$n(10).508"({ { { i1, i64 }*, i64 }, i64 } %"506_018")
  store { i1, { { { { i1, i64 }*, i64 }, i64 }, i64 } } %26, { i1, { { { { i1, i64 }*, i64 }, i64 }, i64 } }* %"507_0", align 8
  %"507_019" = load { i1, { { { { i1, i64 }*, i64 }, i64 }, i64 } }, { i1, { { { { i1, i64 }*, i64 }, i64 }, i64 } }* %"507_0", align 8
  %"503_120" = load { { i1, { i1, i64, i1 } }*, i64 }, { { i1, { i1, i64, i1 } }*, i64 }* %"503_1", align 8
  %"503_221" = load i64, i64* %"503_2", align 4
  %27 = extractvalue { i1, { { { { i1, i64 }*, i64 }, i64 }, i64 } } %"507_019", 0
  switch i1 %27, label %28 [
    i1 true, label %29
  ]

28:                                               ; preds = %loop_body
  store { { i1, { i1, i64, i1 } }*, i64 } %"503_120", { { i1, { i1, i64, i1 } }*, i64 }* %"026", align 8
  store i64 %"503_221", i64* %"127", align 4
  br label %cond_560_case_0

29:                                               ; preds = %loop_body
  %30 = extractvalue { i1, { { { { i1, i64 }*, i64 }, i64 }, i64 } } %"507_019", 1
  store { { { { i1, i64 }*, i64 }, i64 }, i64 } %30, { { { { i1, i64 }*, i64 }, i64 }, i64 }* %"033", align 8
  store { { i1, { i1, i64, i1 } }*, i64 } %"503_120", { { i1, { i1, i64, i1 } }*, i64 }* %"134", align 8
  store i64 %"503_221", i64* %"235", align 4
  br label %cond_560_case_1

loop_out:                                         ; preds = %49
  %"595_065" = load {}, {}* %"595_0", align 1
  %"502_066" = load { { i1, { i1, i64, i1 } }*, i64 }, { { i1, { i1, i64, i1 } }*, i64 }* %"502_0", align 8
  store {} %"595_065", {}* %"595_0", align 1
  store { { i1, { i1, i64, i1 } }*, i64 } %"502_066", { { i1, { i1, i64, i1 } }*, i64 }* %"502_0", align 8
  %"595_067" = load {}, {}* %"595_0", align 1
  %"502_068" = load { { i1, { i1, i64, i1 } }*, i64 }, { { i1, { i1, i64, i1 } }*, i64 }* %"502_0", align 8
  switch i1 false, label %31 [
  ]

31:                                               ; preds = %loop_out
  store { { i1, { i1, i64, i1 } }*, i64 } %"502_068", { { i1, { i1, i64, i1 } }*, i64 }* %"02", align 8
  br label %12

cond_560_case_0:                                  ; preds = %28
  %"028" = load { { i1, { i1, i64, i1 } }*, i64 }, { { i1, { i1, i64, i1 } }*, i64 }* %"026", align 8
  %"129" = load i64, i64* %"127", align 4
  store { { i1, { i1, i64, i1 } }*, i64 } %"028", { { i1, { i1, i64, i1 } }*, i64 }* %"562_0", align 8
  store i64 %"129", i64* %"562_1", align 4
  store { i1, { { { i1, i64 }*, i64 }, i64 } } { i1 true, { { { i1, i64 }*, i64 }, i64 } poison }, { i1, { { { i1, i64 }*, i64 }, i64 } }* %"564_0", align 8
  %"564_030" = load { i1, { { { i1, i64 }*, i64 }, i64 } }, { i1, { { { i1, i64 }*, i64 }, i64 } }* %"564_0", align 8
  %"562_031" = load { { i1, { i1, i64, i1 } }*, i64 }, { { i1, { i1, i64, i1 } }*, i64 }* %"562_0", align 8
  %"562_132" = load i64, i64* %"562_1", align 4
  store { i1, { { { i1, i64 }*, i64 }, i64 } } %"564_030", { i1, { { { i1, i64 }*, i64 }, i64 } }* %"022", align 8
  store { { i1, { i1, i64, i1 } }*, i64 } %"562_031", { { i1, { i1, i64, i1 } }*, i64 }* %"1", align 8
  store i64 %"562_132", i64* %"2", align 4
  br label %cond_exit_560

cond_560_case_1:                                  ; preds = %29
  %"036" = load { { { { i1, i64 }*, i64 }, i64 }, i64 }, { { { { i1, i64 }*, i64 }, i64 }, i64 }* %"033", align 8
  %"137" = load { { i1, { i1, i64, i1 } }*, i64 }, { { i1, { i1, i64, i1 } }*, i64 }* %"134", align 8
  %"238" = load i64, i64* %"235", align 4
  store { { { { i1, i64 }*, i64 }, i64 }, i64 } %"036", { { { { i1, i64 }*, i64 }, i64 }, i64 }* %"566_0", align 8
  store { { i1, { i1, i64, i1 } }*, i64 } %"137", { { i1, { i1, i64, i1 } }*, i64 }* %"566_1", align 8
  store i64 %"238", i64* %"566_2", align 4
  store i64 1, i64* %"592_0", align 4
  %"566_239" = load i64, i64* %"566_2", align 4
  %"592_040" = load i64, i64* %"592_0", align 4
  %32 = add i64 %"566_239", %"592_040"
  store i64 %32, i64* %"594_0", align 4
  %"566_041" = load { { { { i1, i64 }*, i64 }, i64 }, i64 }, { { { { i1, i64 }*, i64 }, i64 }, i64 }* %"566_0", align 8
  %33 = extractvalue { { { { i1, i64 }*, i64 }, i64 }, i64 } %"566_041", 1
  %34 = extractvalue { { { { i1, i64 }*, i64 }, i64 }, i64 } %"566_041", 0
  store i64 %33, i64* %"568_0", align 4
  store { { { i1, i64 }*, i64 }, i64 } %34, { { { i1, i64 }*, i64 }, i64 }* %"568_1", align 8
  %"568_142" = load { { { i1, i64 }*, i64 }, i64 }, { { { i1, i64 }*, i64 }, i64 }* %"568_1", align 8
  %35 = extractvalue { { { i1, i64 }*, i64 }, i64 } %"568_142", 0
  %36 = extractvalue { { { i1, i64 }*, i64 }, i64 } %"568_142", 1
  store { { i1, i64 }*, i64 } %35, { { i1, i64 }*, i64 }* %"569_0", align 8
  store i64 %36, i64* %"569_1", align 4
  %"569_043" = load { { i1, i64 }*, i64 }, { { i1, i64 }*, i64 }* %"569_0", align 8
  %"569_144" = load i64, i64* %"569_1", align 4
  %37 = insertvalue { { { i1, i64 }*, i64 }, i64 } poison, { { i1, i64 }*, i64 } %"569_043", 0
  %38 = insertvalue { { { i1, i64 }*, i64 }, i64 } %37, i64 %"569_144", 1
  store { { { i1, i64 }*, i64 }, i64 } %38, { { { i1, i64 }*, i64 }, i64 }* %"570_0", align 8
  %"568_045" = load i64, i64* %"568_0", align 4
  %"570_046" = load { { { i1, i64 }*, i64 }, i64 }, { { { i1, i64 }*, i64 }, i64 }* %"570_0", align 8
  %39 = insertvalue { { { { i1, i64 }*, i64 }, i64 }, i64 } poison, i64 %"568_045", 1
  %40 = insertvalue { { { { i1, i64 }*, i64 }, i64 }, i64 } %39, { { { i1, i64 }*, i64 }, i64 } %"570_046", 0
  store { { { { i1, i64 }*, i64 }, i64 }, i64 } %40, { { { { i1, i64 }*, i64 }, i64 }, i64 }* %"571_0", align 8
  %"571_047" = load { { { { i1, i64 }*, i64 }, i64 }, i64 }, { { { { i1, i64 }*, i64 }, i64 }, i64 }* %"571_0", align 8
  %41 = extractvalue { { { { i1, i64 }*, i64 }, i64 }, i64 } %"571_047", 1
  %42 = extractvalue { { { { i1, i64 }*, i64 }, i64 }, i64 } %"571_047", 0
  store i64 %41, i64* %"572_0", align 4
  store { { { i1, i64 }*, i64 }, i64 } %42, { { { i1, i64 }*, i64 }, i64 }* %"572_1", align 8
  %"572_048" = load i64, i64* %"572_0", align 4
  store i64 %"572_048", i64* %"320_0", align 4
  %"320_049" = load i64, i64* %"320_0", align 4
  %lazy_measure = call i64 @___lazy_measure(i64 %"320_049")
  call void @___qfree(i64 %"320_049")
  store i64 %lazy_measure, i64* %"318_0", align 4
  %"318_050" = load i64, i64* %"318_0", align 4
  %43 = insertvalue { i1, i64, i1 } { i1 true, i64 poison, i1 poison }, i64 %"318_050", 1
  store { i1, i64, i1 } %43, { i1, i64, i1 }* %"317_0", align 4
  %"317_051" = load { i1, i64, i1 }, { i1, i64, i1 }* %"317_0", align 4
  store { i1, i64, i1 } %"317_051", { i1, i64, i1 }* %"574_0", align 4
  %"566_152" = load { { i1, { i1, i64, i1 } }*, i64 }, { { i1, { i1, i64, i1 } }*, i64 }* %"566_1", align 8
  %"566_253" = load i64, i64* %"566_2", align 4
  %"574_054" = load { i1, i64, i1 }, { i1, i64, i1 }* %"574_0", align 4
  %44 = call { { i1, { i1, i64, i1 } }*, i64 } @"__hugr__.$array.__setitem__.classical.3$$t(bool)$n(10).576"({ { i1, { i1, i64, i1 } }*, i64 } %"566_152", i64 %"566_253", { i1, i64, i1 } %"574_054")
  store { { i1, { i1, i64, i1 } }*, i64 } %44, { { i1, { i1, i64, i1 } }*, i64 }* %"575_0", align 8
  %"572_155" = load { { { i1, i64 }*, i64 }, i64 }, { { { i1, i64 }*, i64 }, i64 }* %"572_1", align 8
  %45 = insertvalue { i1, { { { i1, i64 }*, i64 }, i64 } } { i1 false, { { { i1, i64 }*, i64 }, i64 } poison }, { { { i1, i64 }*, i64 }, i64 } %"572_155", 1
  store { i1, { { { i1, i64 }*, i64 }, i64 } } %45, { i1, { { { i1, i64 }*, i64 }, i64 } }* %"573_0", align 8
  %"573_056" = load { i1, { { { i1, i64 }*, i64 }, i64 } }, { i1, { { { i1, i64 }*, i64 }, i64 } }* %"573_0", align 8
  %"575_057" = load { { i1, { i1, i64, i1 } }*, i64 }, { { i1, { i1, i64, i1 } }*, i64 }* %"575_0", align 8
  %"594_058" = load i64, i64* %"594_0", align 4
  store { i1, { { { i1, i64 }*, i64 }, i64 } } %"573_056", { i1, { { { i1, i64 }*, i64 }, i64 } }* %"022", align 8
  store { { i1, { i1, i64, i1 } }*, i64 } %"575_057", { { i1, { i1, i64, i1 } }*, i64 }* %"1", align 8
  store i64 %"594_058", i64* %"2", align 4
  br label %cond_exit_560

cond_exit_560:                                    ; preds = %cond_560_case_1, %cond_560_case_0
  %"023" = load { i1, { { { i1, i64 }*, i64 }, i64 } }, { i1, { { { i1, i64 }*, i64 }, i64 } }* %"022", align 8
  %"124" = load { { i1, { i1, i64, i1 } }*, i64 }, { { i1, { i1, i64, i1 } }*, i64 }* %"1", align 8
  %"225" = load i64, i64* %"2", align 4
  store { i1, { { { i1, i64 }*, i64 }, i64 } } %"023", { i1, { { { i1, i64 }*, i64 }, i64 } }* %"560_0", align 8
  store { { i1, { i1, i64, i1 } }*, i64 } %"124", { { i1, { i1, i64, i1 } }*, i64 }* %"560_1", align 8
  store i64 %"225", i64* %"560_2", align 4
  %"560_059" = load { i1, { { { i1, i64 }*, i64 }, i64 } }, { i1, { { { i1, i64 }*, i64 }, i64 } }* %"560_0", align 8
  %"560_160" = load { { i1, { i1, i64, i1 } }*, i64 }, { { i1, { i1, i64, i1 } }*, i64 }* %"560_1", align 8
  %"560_261" = load i64, i64* %"560_2", align 4
  store { i1, { { { i1, i64 }*, i64 }, i64 } } %"560_059", { i1, { { { i1, i64 }*, i64 }, i64 } }* %"560_0", align 8
  store { { i1, { i1, i64, i1 } }*, i64 } %"560_160", { { i1, { i1, i64, i1 } }*, i64 }* %"560_1", align 8
  store i64 %"560_261", i64* %"560_2", align 4
  %"560_062" = load { i1, { { { i1, i64 }*, i64 }, i64 } }, { i1, { { { i1, i64 }*, i64 }, i64 } }* %"560_0", align 8
  %"560_163" = load { { i1, { i1, i64, i1 } }*, i64 }, { { i1, { i1, i64, i1 } }*, i64 }* %"560_1", align 8
  %"560_264" = load i64, i64* %"560_2", align 4
  %46 = extractvalue { i1, { { { i1, i64 }*, i64 }, i64 } } %"560_062", 0
  switch i1 %46, label %47 [
    i1 true, label %49
  ]

47:                                               ; preds = %cond_exit_560
  %48 = extractvalue { i1, { { { i1, i64 }*, i64 }, i64 } } %"560_062", 1
  store { { { i1, i64 }*, i64 }, i64 } %48, { { { i1, i64 }*, i64 }, i64 }* %"503_0", align 8
  store { { i1, { i1, i64, i1 } }*, i64 } %"560_163", { { i1, { i1, i64, i1 } }*, i64 }* %"503_1", align 8
  store i64 %"560_264", i64* %"503_2", align 4
  br label %loop_body

49:                                               ; preds = %cond_exit_560
  store { { i1, { i1, i64, i1 } }*, i64 } %"560_163", { { i1, { i1, i64, i1 } }*, i64 }* %"502_0", align 8
  store i64 %"560_264", i64* %"502_1", align 4
  br label %loop_out
}

declare void @free(i8*)

declare void @print_bool_arr(i8*, i64, <{ i32, i32, i1*, i1* }>*)

define { { i1, i64 }*, i64 } @"__hugr__.$array.__setitem__.classical.3$$t(int(6))$n(100).615"({ { i1, i64 }*, i64 } %0, i64 %1, i64 %2) {
alloca_block:
  %"0" = alloca { { i1, i64 }*, i64 }, align 8
  %"616_0" = alloca { { i1, i64 }*, i64 }, align 8
  %"616_1" = alloca i64, align 8
  %"616_2" = alloca i64, align 8
  %"619_0" = alloca { i1, i64 }, align 8
  %"618_0" = alloca i64, align 8
  %"620_0" = alloca { i1, { { i1, i64 }*, i64 }, { i1, i64 } }, align 8
  %"06" = alloca { i1, { { i1, i64 }*, i64 }, { i1, i64 } }, align 8
  %"621_0" = alloca { i1, i64 }, align 8
  %"621_1" = alloca { { i1, i64 }*, i64 }, align 8
  %"09" = alloca { i1, i64 }, align 8
  %"1" = alloca { { i1, i64 }*, i64 }, align 8
  %"012" = alloca { i1, i64 }, align 8
  %"113" = alloca { { i1, i64 }*, i64 }, align 8
  %"623_0" = alloca { i1, i64 }, align 8
  %"623_1" = alloca { { i1, i64 }*, i64 }, align 8
  %"625_0" = alloca { i32, i8* }, align 8
  %"627_0" = alloca { i1, i64 }, align 8
  %"627_1" = alloca { { i1, i64 }*, i64 }, align 8
  %"021" = alloca { i1, i64 }, align 8
  %"122" = alloca { { i1, i64 }*, i64 }, align 8
  %"629_0" = alloca { i1, i64 }, align 8
  %"629_1" = alloca { { i1, i64 }*, i64 }, align 8
  br label %entry_block

entry_block:                                      ; preds = %alloca_block
  store { { i1, i64 }*, i64 } %0, { { i1, i64 }*, i64 }* %"616_0", align 8
  store i64 %1, i64* %"616_1", align 4
  store i64 %2, i64* %"616_2", align 4
  %"616_21" = load i64, i64* %"616_2", align 4
  %3 = insertvalue { i1, i64 } { i1 true, i64 poison }, i64 %"616_21", 1
  store { i1, i64 } %3, { i1, i64 }* %"619_0", align 4
  %"616_12" = load i64, i64* %"616_1", align 4
  store i64 %"616_12", i64* %"618_0", align 4
  %"616_03" = load { { i1, i64 }*, i64 }, { { i1, i64 }*, i64 }* %"616_0", align 8
  %"618_04" = load i64, i64* %"618_0", align 4
  %"619_05" = load { i1, i64 }, { i1, i64 }* %"619_0", align 4
  %array_ptr = extractvalue { { i1, i64 }*, i64 } %"616_03", 0
  %array_offset = extractvalue { { i1, i64 }*, i64 } %"616_03", 1
  %4 = icmp ult i64 %"618_04", 100
  br i1 %4, label %8, label %5

5:                                                ; preds = %entry_block
  %6 = insertvalue { i1, { { i1, i64 }*, i64 }, { i1, i64 } } { i1 false, { { i1, i64 }*, i64 } poison, { i1, i64 } poison }, { i1, i64 } %"619_05", 2
  %7 = insertvalue { i1, { { i1, i64 }*, i64 }, { i1, i64 } } %6, { { i1, i64 }*, i64 } %"616_03", 1
  store { i1, { { i1, i64 }*, i64 }, { i1, i64 } } %7, { i1, { { i1, i64 }*, i64 }, { i1, i64 } }* %"06", align 8
  br label %14

8:                                                ; preds = %entry_block
  %9 = add i64 %"618_04", %array_offset
  %10 = getelementptr inbounds { i1, i64 }, { i1, i64 }* %array_ptr, i64 %9
  %11 = load { i1, i64 }, { i1, i64 }* %10, align 4
  store { i1, i64 } %"619_05", { i1, i64 }* %10, align 4
  %12 = insertvalue { i1, { { i1, i64 }*, i64 }, { i1, i64 } } { i1 true, { { i1, i64 }*, i64 } poison, { i1, i64 } poison }, { i1, i64 } %11, 2
  %13 = insertvalue { i1, { { i1, i64 }*, i64 }, { i1, i64 } } %12, { { i1, i64 }*, i64 } %"616_03", 1
  store { i1, { { i1, i64 }*, i64 }, { i1, i64 } } %13, { i1, { { i1, i64 }*, i64 }, { i1, i64 } }* %"06", align 8
  br label %14

14:                                               ; preds = %5, %8
  %"07" = load { i1, { { i1, i64 }*, i64 }, { i1, i64 } }, { i1, { { i1, i64 }*, i64 }, { i1, i64 } }* %"06", align 8
  store { i1, { { i1, i64 }*, i64 }, { i1, i64 } } %"07", { i1, { { i1, i64 }*, i64 }, { i1, i64 } }* %"620_0", align 8
  %"620_08" = load { i1, { { i1, i64 }*, i64 }, { i1, i64 } }, { i1, { { i1, i64 }*, i64 }, { i1, i64 } }* %"620_0", align 8
  %15 = extractvalue { i1, { { i1, i64 }*, i64 }, { i1, i64 } } %"620_08", 0
  switch i1 %15, label %16 [
    i1 true, label %19
  ]

16:                                               ; preds = %14
  %17 = extractvalue { i1, { { i1, i64 }*, i64 }, { i1, i64 } } %"620_08", 2
  %18 = extractvalue { i1, { { i1, i64 }*, i64 }, { i1, i64 } } %"620_08", 1
  store { i1, i64 } %17, { i1, i64 }* %"012", align 4
  store { { i1, i64 }*, i64 } %18, { { i1, i64 }*, i64 }* %"113", align 8
  br label %cond_621_case_0

19:                                               ; preds = %14
  %20 = extractvalue { i1, { { i1, i64 }*, i64 }, { i1, i64 } } %"620_08", 2
  %21 = extractvalue { i1, { { i1, i64 }*, i64 }, { i1, i64 } } %"620_08", 1
  store { i1, i64 } %20, { i1, i64 }* %"021", align 4
  store { { i1, i64 }*, i64 } %21, { { i1, i64 }*, i64 }* %"122", align 8
  br label %cond_621_case_1

cond_621_case_0:                                  ; preds = %16
  %"014" = load { i1, i64 }, { i1, i64 }* %"012", align 4
  %"115" = load { { i1, i64 }*, i64 }, { { i1, i64 }*, i64 }* %"113", align 8
  store { i1, i64 } %"014", { i1, i64 }* %"623_0", align 4
  store { { i1, i64 }*, i64 } %"115", { { i1, i64 }*, i64 }* %"623_1", align 8
  store { i32, i8* } { i32 1, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @"e_Array inde.2A1CB845.0", i32 0, i32 0) }, { i32, i8* }* %"625_0", align 8
  %"625_016" = load { i32, i8* }, { i32, i8* }* %"625_0", align 8
  %"623_017" = load { i1, i64 }, { i1, i64 }* %"623_0", align 4
  %"623_118" = load { { i1, i64 }*, i64 }, { { i1, i64 }*, i64 }* %"623_1", align 8
  %22 = extractvalue { i32, i8* } %"625_016", 0
  %shift_code = add i32 %22, 1000
  %23 = extractvalue { i32, i8* } %"625_016", 1
  call void @panic(i32 %shift_code, i8* %23)
  store { i1, i64 } zeroinitializer, { i1, i64 }* %"627_0", align 4
  store { { i1, i64 }*, i64 } zeroinitializer, { { i1, i64 }*, i64 }* %"627_1", align 8
  %"627_019" = load { i1, i64 }, { i1, i64 }* %"627_0", align 4
  %"627_120" = load { { i1, i64 }*, i64 }, { { i1, i64 }*, i64 }* %"627_1", align 8
  store { i1, i64 } %"627_019", { i1, i64 }* %"09", align 4
  store { { i1, i64 }*, i64 } %"627_120", { { i1, i64 }*, i64 }* %"1", align 8
  br label %cond_exit_621

cond_621_case_1:                                  ; preds = %19
  %"023" = load { i1, i64 }, { i1, i64 }* %"021", align 4
  %"124" = load { { i1, i64 }*, i64 }, { { i1, i64 }*, i64 }* %"122", align 8
  store { i1, i64 } %"023", { i1, i64 }* %"629_0", align 4
  store { { i1, i64 }*, i64 } %"124", { { i1, i64 }*, i64 }* %"629_1", align 8
  %"629_025" = load { i1, i64 }, { i1, i64 }* %"629_0", align 4
  %"629_126" = load { { i1, i64 }*, i64 }, { { i1, i64 }*, i64 }* %"629_1", align 8
  store { i1, i64 } %"629_025", { i1, i64 }* %"09", align 4
  store { { i1, i64 }*, i64 } %"629_126", { { i1, i64 }*, i64 }* %"1", align 8
  br label %cond_exit_621

cond_exit_621:                                    ; preds = %cond_621_case_1, %cond_621_case_0
  %"010" = load { i1, i64 }, { i1, i64 }* %"09", align 4
  %"111" = load { { i1, i64 }*, i64 }, { { i1, i64 }*, i64 }* %"1", align 8
  store { i1, i64 } %"010", { i1, i64 }* %"621_0", align 4
  store { { i1, i64 }*, i64 } %"111", { { i1, i64 }*, i64 }* %"621_1", align 8
  %"621_127" = load { { i1, i64 }*, i64 }, { { i1, i64 }*, i64 }* %"621_1", align 8
  store { { i1, i64 }*, i64 } %"621_127", { { i1, i64 }*, i64 }* %"0", align 8
  %"028" = load { { i1, i64 }*, i64 }, { { i1, i64 }*, i64 }* %"0", align 8
  ret { { i1, i64 }*, i64 } %"028"
}

declare void @print_int_arr(i8*, i64, <{ i32, i32, i64*, i1* }>*)

define { { i1, double }*, i64 } @"__hugr__.$array.__setitem__.classical.3$$t(float64)$n(100).648"({ { i1, double }*, i64 } %0, i64 %1, double %2) {
alloca_block:
  %"0" = alloca { { i1, double }*, i64 }, align 8
  %"649_0" = alloca { { i1, double }*, i64 }, align 8
  %"649_1" = alloca i64, align 8
  %"649_2" = alloca double, align 8
  %"652_0" = alloca { i1, double }, align 8
  %"651_0" = alloca i64, align 8
  %"653_0" = alloca { i1, { { i1, double }*, i64 }, { i1, double } }, align 8
  %"06" = alloca { i1, { { i1, double }*, i64 }, { i1, double } }, align 8
  %"654_0" = alloca { i1, double }, align 8
  %"654_1" = alloca { { i1, double }*, i64 }, align 8
  %"09" = alloca { i1, double }, align 8
  %"1" = alloca { { i1, double }*, i64 }, align 8
  %"012" = alloca { i1, double }, align 8
  %"113" = alloca { { i1, double }*, i64 }, align 8
  %"656_0" = alloca { i1, double }, align 8
  %"656_1" = alloca { { i1, double }*, i64 }, align 8
  %"658_0" = alloca { i32, i8* }, align 8
  %"660_0" = alloca { i1, double }, align 8
  %"660_1" = alloca { { i1, double }*, i64 }, align 8
  %"021" = alloca { i1, double }, align 8
  %"122" = alloca { { i1, double }*, i64 }, align 8
  %"662_0" = alloca { i1, double }, align 8
  %"662_1" = alloca { { i1, double }*, i64 }, align 8
  br label %entry_block

entry_block:                                      ; preds = %alloca_block
  store { { i1, double }*, i64 } %0, { { i1, double }*, i64 }* %"649_0", align 8
  store i64 %1, i64* %"649_1", align 4
  store double %2, double* %"649_2", align 8
  %"649_21" = load double, double* %"649_2", align 8
  %3 = insertvalue { i1, double } { i1 true, double poison }, double %"649_21", 1
  store { i1, double } %3, { i1, double }* %"652_0", align 8
  %"649_12" = load i64, i64* %"649_1", align 4
  store i64 %"649_12", i64* %"651_0", align 4
  %"649_03" = load { { i1, double }*, i64 }, { { i1, double }*, i64 }* %"649_0", align 8
  %"651_04" = load i64, i64* %"651_0", align 4
  %"652_05" = load { i1, double }, { i1, double }* %"652_0", align 8
  %array_ptr = extractvalue { { i1, double }*, i64 } %"649_03", 0
  %array_offset = extractvalue { { i1, double }*, i64 } %"649_03", 1
  %4 = icmp ult i64 %"651_04", 100
  br i1 %4, label %8, label %5

5:                                                ; preds = %entry_block
  %6 = insertvalue { i1, { { i1, double }*, i64 }, { i1, double } } { i1 false, { { i1, double }*, i64 } poison, { i1, double } poison }, { i1, double } %"652_05", 2
  %7 = insertvalue { i1, { { i1, double }*, i64 }, { i1, double } } %6, { { i1, double }*, i64 } %"649_03", 1
  store { i1, { { i1, double }*, i64 }, { i1, double } } %7, { i1, { { i1, double }*, i64 }, { i1, double } }* %"06", align 8
  br label %14

8:                                                ; preds = %entry_block
  %9 = add i64 %"651_04", %array_offset
  %10 = getelementptr inbounds { i1, double }, { i1, double }* %array_ptr, i64 %9
  %11 = load { i1, double }, { i1, double }* %10, align 8
  store { i1, double } %"652_05", { i1, double }* %10, align 8
  %12 = insertvalue { i1, { { i1, double }*, i64 }, { i1, double } } { i1 true, { { i1, double }*, i64 } poison, { i1, double } poison }, { i1, double } %11, 2
  %13 = insertvalue { i1, { { i1, double }*, i64 }, { i1, double } } %12, { { i1, double }*, i64 } %"649_03", 1
  store { i1, { { i1, double }*, i64 }, { i1, double } } %13, { i1, { { i1, double }*, i64 }, { i1, double } }* %"06", align 8
  br label %14

14:                                               ; preds = %5, %8
  %"07" = load { i1, { { i1, double }*, i64 }, { i1, double } }, { i1, { { i1, double }*, i64 }, { i1, double } }* %"06", align 8
  store { i1, { { i1, double }*, i64 }, { i1, double } } %"07", { i1, { { i1, double }*, i64 }, { i1, double } }* %"653_0", align 8
  %"653_08" = load { i1, { { i1, double }*, i64 }, { i1, double } }, { i1, { { i1, double }*, i64 }, { i1, double } }* %"653_0", align 8
  %15 = extractvalue { i1, { { i1, double }*, i64 }, { i1, double } } %"653_08", 0
  switch i1 %15, label %16 [
    i1 true, label %19
  ]

16:                                               ; preds = %14
  %17 = extractvalue { i1, { { i1, double }*, i64 }, { i1, double } } %"653_08", 2
  %18 = extractvalue { i1, { { i1, double }*, i64 }, { i1, double } } %"653_08", 1
  store { i1, double } %17, { i1, double }* %"012", align 8
  store { { i1, double }*, i64 } %18, { { i1, double }*, i64 }* %"113", align 8
  br label %cond_654_case_0

19:                                               ; preds = %14
  %20 = extractvalue { i1, { { i1, double }*, i64 }, { i1, double } } %"653_08", 2
  %21 = extractvalue { i1, { { i1, double }*, i64 }, { i1, double } } %"653_08", 1
  store { i1, double } %20, { i1, double }* %"021", align 8
  store { { i1, double }*, i64 } %21, { { i1, double }*, i64 }* %"122", align 8
  br label %cond_654_case_1

cond_654_case_0:                                  ; preds = %16
  %"014" = load { i1, double }, { i1, double }* %"012", align 8
  %"115" = load { { i1, double }*, i64 }, { { i1, double }*, i64 }* %"113", align 8
  store { i1, double } %"014", { i1, double }* %"656_0", align 8
  store { { i1, double }*, i64 } %"115", { { i1, double }*, i64 }* %"656_1", align 8
  store { i32, i8* } { i32 1, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @"e_Array inde.2A1CB845.0", i32 0, i32 0) }, { i32, i8* }* %"658_0", align 8
  %"658_016" = load { i32, i8* }, { i32, i8* }* %"658_0", align 8
  %"656_017" = load { i1, double }, { i1, double }* %"656_0", align 8
  %"656_118" = load { { i1, double }*, i64 }, { { i1, double }*, i64 }* %"656_1", align 8
  %22 = extractvalue { i32, i8* } %"658_016", 0
  %shift_code = add i32 %22, 1000
  %23 = extractvalue { i32, i8* } %"658_016", 1
  call void @panic(i32 %shift_code, i8* %23)
  store { i1, double } zeroinitializer, { i1, double }* %"660_0", align 8
  store { { i1, double }*, i64 } zeroinitializer, { { i1, double }*, i64 }* %"660_1", align 8
  %"660_019" = load { i1, double }, { i1, double }* %"660_0", align 8
  %"660_120" = load { { i1, double }*, i64 }, { { i1, double }*, i64 }* %"660_1", align 8
  store { i1, double } %"660_019", { i1, double }* %"09", align 8
  store { { i1, double }*, i64 } %"660_120", { { i1, double }*, i64 }* %"1", align 8
  br label %cond_exit_654

cond_654_case_1:                                  ; preds = %19
  %"023" = load { i1, double }, { i1, double }* %"021", align 8
  %"124" = load { { i1, double }*, i64 }, { { i1, double }*, i64 }* %"122", align 8
  store { i1, double } %"023", { i1, double }* %"662_0", align 8
  store { { i1, double }*, i64 } %"124", { { i1, double }*, i64 }* %"662_1", align 8
  %"662_025" = load { i1, double }, { i1, double }* %"662_0", align 8
  %"662_126" = load { { i1, double }*, i64 }, { { i1, double }*, i64 }* %"662_1", align 8
  store { i1, double } %"662_025", { i1, double }* %"09", align 8
  store { { i1, double }*, i64 } %"662_126", { { i1, double }*, i64 }* %"1", align 8
  br label %cond_exit_654

cond_exit_654:                                    ; preds = %cond_654_case_1, %cond_654_case_0
  %"010" = load { i1, double }, { i1, double }* %"09", align 8
  %"111" = load { { i1, double }*, i64 }, { { i1, double }*, i64 }* %"1", align 8
  store { i1, double } %"010", { i1, double }* %"654_0", align 8
  store { { i1, double }*, i64 } %"111", { { i1, double }*, i64 }* %"654_1", align 8
  %"654_127" = load { { i1, double }*, i64 }, { { i1, double }*, i64 }* %"654_1", align 8
  store { { i1, double }*, i64 } %"654_127", { { i1, double }*, i64 }* %"0", align 8
  %"028" = load { { i1, double }*, i64 }, { { i1, double }*, i64 }* %"0", align 8
  ret { { i1, double }*, i64 } %"028"
}

declare void @print_float_arr(i8*, i64, <{ i32, i32, double*, i1* }>*)

define { i1, { i1, i64, i1 } } @"__hugr__.$array.__comprehension.init.6$$t(bool).480"() {
alloca_block:
  %"0" = alloca { i1, { i1, i64, i1 } }, align 8
  %"483_0" = alloca { i1, { i1, i64, i1 } }, align 8
  br label %entry_block

entry_block:                                      ; preds = %alloca_block
  store { i1, { i1, i64, i1 } } { i1 false, { i1, i64, i1 } poison }, { i1, { i1, i64, i1 } }* %"483_0", align 4
  %"483_01" = load { i1, { i1, i64, i1 } }, { i1, { i1, i64, i1 } }* %"483_0", align 4
  store { i1, { i1, i64, i1 } } %"483_01", { i1, { i1, i64, i1 } }* %"0", align 4
  %"02" = load { i1, { i1, i64, i1 } }, { i1, { i1, i64, i1 } }* %"0", align 4
  ret { i1, { i1, i64, i1 } } %"02"
}

declare i1 @___read_future_bool(i64)

declare void @___dec_future_refcount(i64)

; Function Attrs: noreturn
declare void @panic(i32, i8*) #0

define { { { i1, i64 }*, i64 }, i64 } @"__hugr__.$__iter__$$t(qubit)$n(10).488"({ { i1, i64 }*, i64 } %0) {
alloca_block:
  %"0" = alloca { { { i1, i64 }*, i64 }, i64 }, align 8
  %"489_0" = alloca { { i1, i64 }*, i64 }, align 8
  %"491_0" = alloca { { { i1, i64 }*, i64 }, i64 }, align 8
  %"493_0" = alloca { { i1, i64 }*, i64 }, align 8
  %"02" = alloca { { { i1, i64 }*, i64 }, i64 }, align 8
  %"498_0" = alloca {}, align 8
  %"497_0" = alloca { { { i1, i64 }*, i64 }, i64 }, align 8
  %"495_0" = alloca i64, align 8
  br label %entry_block

entry_block:                                      ; preds = %alloca_block
  store { { i1, i64 }*, i64 } %0, { { i1, i64 }*, i64 }* %"489_0", align 8
  %"489_01" = load { { i1, i64 }*, i64 }, { { i1, i64 }*, i64 }* %"489_0", align 8
  store { { i1, i64 }*, i64 } %"489_01", { { i1, i64 }*, i64 }* %"493_0", align 8
  br label %1

1:                                                ; preds = %entry_block
  %"493_03" = load { { i1, i64 }*, i64 }, { { i1, i64 }*, i64 }* %"493_0", align 8
  store { { i1, i64 }*, i64 } %"493_03", { { i1, i64 }*, i64 }* %"493_0", align 8
  store {} undef, {}* %"498_0", align 1
  store i64 0, i64* %"495_0", align 4
  %"493_04" = load { { i1, i64 }*, i64 }, { { i1, i64 }*, i64 }* %"493_0", align 8
  %"495_05" = load i64, i64* %"495_0", align 4
  %2 = insertvalue { { { i1, i64 }*, i64 }, i64 } poison, { { i1, i64 }*, i64 } %"493_04", 0
  %3 = insertvalue { { { i1, i64 }*, i64 }, i64 } %2, i64 %"495_05", 1
  store { { { i1, i64 }*, i64 }, i64 } %3, { { { i1, i64 }*, i64 }, i64 }* %"497_0", align 8
  %"498_06" = load {}, {}* %"498_0", align 1
  %"497_07" = load { { { i1, i64 }*, i64 }, i64 }, { { { i1, i64 }*, i64 }, i64 }* %"497_0", align 8
  store {} %"498_06", {}* %"498_0", align 1
  store { { { i1, i64 }*, i64 }, i64 } %"497_07", { { { i1, i64 }*, i64 }, i64 }* %"497_0", align 8
  %"498_08" = load {}, {}* %"498_0", align 1
  %"497_09" = load { { { i1, i64 }*, i64 }, i64 }, { { { i1, i64 }*, i64 }, i64 }* %"497_0", align 8
  switch i1 false, label %4 [
  ]

4:                                                ; preds = %1
  store { { { i1, i64 }*, i64 }, i64 } %"497_09", { { { i1, i64 }*, i64 }, i64 }* %"02", align 8
  br label %5

5:                                                ; preds = %4
  %"010" = load { { { i1, i64 }*, i64 }, i64 }, { { { i1, i64 }*, i64 }, i64 }* %"02", align 8
  store { { { i1, i64 }*, i64 }, i64 } %"010", { { { i1, i64 }*, i64 }, i64 }* %"491_0", align 8
  %"491_011" = load { { { i1, i64 }*, i64 }, i64 }, { { { i1, i64 }*, i64 }, i64 }* %"491_0", align 8
  store { { { i1, i64 }*, i64 }, i64 } %"491_011", { { { i1, i64 }*, i64 }, i64 }* %"0", align 8
  %"012" = load { { { i1, i64 }*, i64 }, i64 }, { { { i1, i64 }*, i64 }, i64 }* %"0", align 8
  ret { { { i1, i64 }*, i64 }, i64 } %"012"
}

define { i1, { { { { i1, i64 }*, i64 }, i64 }, i64 } } @"__hugr__.$__next__$$t(qubit)$n(10).508"({ { { i1, i64 }*, i64 }, i64 } %0) {
alloca_block:
  %"0" = alloca { i1, { { { { i1, i64 }*, i64 }, i64 }, i64 } }, align 8
  %"509_0" = alloca { { { i1, i64 }*, i64 }, i64 }, align 8
  %"511_0" = alloca { i1, { { { { i1, i64 }*, i64 }, i64 }, i64 } }, align 8
  %"513_0" = alloca { { { i1, i64 }*, i64 }, i64 }, align 8
  %"02" = alloca { i1, { { { { i1, i64 }*, i64 }, i64 }, i64 } }, align 8
  %"523_0" = alloca i64, align 8
  %"523_1" = alloca { { i1, i64 }*, i64 }, align 8
  %"534_0" = alloca i64, align 8
  %"534_1" = alloca { { i1, i64 }*, i64 }, align 8
  %"520_0" = alloca i1, align 1
  %"515_1" = alloca i64, align 8
  %"515_0" = alloca { { i1, i64 }*, i64 }, align 8
  %"516_0" = alloca i64, align 8
  %"517_0" = alloca i64, align 8
  %"518_0" = alloca i1, align 1
  %"519_0" = alloca { i1, i64, i1 }, align 8
  %"333_0" = alloca i1, align 1
  %"331_0" = alloca { i1, i64, i1 }, align 8
  %"330_0" = alloca { i1, i64, i1 }, align 8
  %"327_0" = alloca i1, align 1
  %"013" = alloca i1, align 1
  %"015" = alloca i1, align 1
  %"324_0" = alloca i1, align 1
  %"018" = alloca i64, align 8
  %"323_0" = alloca i64, align 8
  %"321_0" = alloca i1, align 1
  %"532_0" = alloca {}, align 8
  %"531_0" = alloca { i1, { { { { i1, i64 }*, i64 }, i64 }, i64 } }, align 8
  %"526_0" = alloca i64, align 8
  %"528_0" = alloca i64, align 8
  %"525_0" = alloca i64, align 8
  %"525_1" = alloca { { i1, i64 }*, i64 }, align 8
  %"529_0" = alloca { { { i1, i64 }*, i64 }, i64 }, align 8
  %"530_0" = alloca { { { { i1, i64 }*, i64 }, i64 }, i64 }, align 8
  %"556_0" = alloca {}, align 8
  %"555_0" = alloca { i1, { { { { i1, i64 }*, i64 }, i64 }, i64 } }, align 8
  %"554_0" = alloca {}, align 8
  %"537_0" = alloca {} ({ i1, i64 })*, align 8
  %"536_0" = alloca { { { i1, i64 }*, i64 }, i64 }, align 8
  %"552_0" = alloca { { i1, i64 }*, i64 }, align 8
  %"552_1" = alloca i64, align 8
  %"553_0" = alloca { {}*, i64 }, align 8
  br label %entry_block

entry_block:                                      ; preds = %alloca_block
  store { { { i1, i64 }*, i64 }, i64 } %0, { { { i1, i64 }*, i64 }, i64 }* %"509_0", align 8
  %"509_01" = load { { { i1, i64 }*, i64 }, i64 }, { { { i1, i64 }*, i64 }, i64 }* %"509_0", align 8
  store { { { i1, i64 }*, i64 }, i64 } %"509_01", { { { i1, i64 }*, i64 }, i64 }* %"513_0", align 8
  br label %1

1:                                                ; preds = %entry_block
  %"513_03" = load { { { i1, i64 }*, i64 }, i64 }, { { { i1, i64 }*, i64 }, i64 }* %"513_0", align 8
  store { { { i1, i64 }*, i64 }, i64 } %"513_03", { { { i1, i64 }*, i64 }, i64 }* %"513_0", align 8
  store i64 10, i64* %"516_0", align 4
  %"516_04" = load i64, i64* %"516_0", align 4
  store i64 %"516_04", i64* %"517_0", align 4
  %"513_05" = load { { { i1, i64 }*, i64 }, i64 }, { { { i1, i64 }*, i64 }, i64 }* %"513_0", align 8
  %2 = extractvalue { { { i1, i64 }*, i64 }, i64 } %"513_05", 0
  %3 = extractvalue { { { i1, i64 }*, i64 }, i64 } %"513_05", 1
  store { { i1, i64 }*, i64 } %2, { { i1, i64 }*, i64 }* %"515_0", align 8
  store i64 %3, i64* %"515_1", align 4
  %"515_16" = load i64, i64* %"515_1", align 4
  %"517_07" = load i64, i64* %"517_0", align 4
  %4 = icmp slt i64 %"515_16", %"517_07"
  %5 = select i1 %4, i1 true, i1 false
  store i1 %5, i1* %"518_0", align 1
  %"518_08" = load i1, i1* %"518_0", align 1
  store i1 %"518_08", i1* %"333_0", align 1
  %"333_09" = load i1, i1* %"333_0", align 1
  %6 = insertvalue { i1, i64, i1 } { i1 false, i64 poison, i1 poison }, i1 %"333_09", 2
  store { i1, i64, i1 } %6, { i1, i64, i1 }* %"331_0", align 4
  %"331_010" = load { i1, i64, i1 }, { i1, i64, i1 }* %"331_0", align 4
  store { i1, i64, i1 } %"331_010", { i1, i64, i1 }* %"519_0", align 4
  %"519_011" = load { i1, i64, i1 }, { i1, i64, i1 }* %"519_0", align 4
  store { i1, i64, i1 } %"519_011", { i1, i64, i1 }* %"330_0", align 4
  %"330_012" = load { i1, i64, i1 }, { i1, i64, i1 }* %"330_0", align 4
  %7 = extractvalue { i1, i64, i1 } %"330_012", 0
  switch i1 %7, label %8 [
    i1 true, label %10
  ]

8:                                                ; preds = %1
  %9 = extractvalue { i1, i64, i1 } %"330_012", 2
  store i1 %9, i1* %"015", align 1
  br label %cond_327_case_0

10:                                               ; preds = %1
  %11 = extractvalue { i1, i64, i1 } %"330_012", 1
  store i64 %11, i64* %"018", align 4
  br label %cond_327_case_1

12:                                               ; preds = %35
  %"523_030" = load i64, i64* %"523_0", align 4
  %"523_131" = load { { i1, i64 }*, i64 }, { { i1, i64 }*, i64 }* %"523_1", align 8
  store i64 %"523_030", i64* %"523_0", align 4
  store { { i1, i64 }*, i64 } %"523_131", { { i1, i64 }*, i64 }* %"523_1", align 8
  store {} undef, {}* %"532_0", align 1
  store i64 1, i64* %"526_0", align 4
  %"523_032" = load i64, i64* %"523_0", align 4
  %"526_033" = load i64, i64* %"526_0", align 4
  %13 = add i64 %"523_032", %"526_033"
  store i64 %13, i64* %"528_0", align 4
  %"523_134" = load { { i1, i64 }*, i64 }, { { i1, i64 }*, i64 }* %"523_1", align 8
  %"523_035" = load i64, i64* %"523_0", align 4
  %14 = call { i64, { { i1, i64 }*, i64 } } @"__hugr__.$array.__getitem__.linear.2$$t(qubit)$n(10).444"({ { i1, i64 }*, i64 } %"523_134", i64 %"523_035")
  %15 = extractvalue { i64, { { i1, i64 }*, i64 } } %14, 0
  %16 = extractvalue { i64, { { i1, i64 }*, i64 } } %14, 1
  store i64 %15, i64* %"525_0", align 4
  store { { i1, i64 }*, i64 } %16, { { i1, i64 }*, i64 }* %"525_1", align 8
  %"525_136" = load { { i1, i64 }*, i64 }, { { i1, i64 }*, i64 }* %"525_1", align 8
  %"528_037" = load i64, i64* %"528_0", align 4
  %17 = insertvalue { { { i1, i64 }*, i64 }, i64 } poison, { { i1, i64 }*, i64 } %"525_136", 0
  %18 = insertvalue { { { i1, i64 }*, i64 }, i64 } %17, i64 %"528_037", 1
  store { { { i1, i64 }*, i64 }, i64 } %18, { { { i1, i64 }*, i64 }, i64 }* %"529_0", align 8
  %"525_038" = load i64, i64* %"525_0", align 4
  %"529_039" = load { { { i1, i64 }*, i64 }, i64 }, { { { i1, i64 }*, i64 }, i64 }* %"529_0", align 8
  %19 = insertvalue { { { { i1, i64 }*, i64 }, i64 }, i64 } poison, i64 %"525_038", 1
  %20 = insertvalue { { { { i1, i64 }*, i64 }, i64 }, i64 } %19, { { { i1, i64 }*, i64 }, i64 } %"529_039", 0
  store { { { { i1, i64 }*, i64 }, i64 }, i64 } %20, { { { { i1, i64 }*, i64 }, i64 }, i64 }* %"530_0", align 8
  %"530_040" = load { { { { i1, i64 }*, i64 }, i64 }, i64 }, { { { { i1, i64 }*, i64 }, i64 }, i64 }* %"530_0", align 8
  %21 = insertvalue { i1, { { { { i1, i64 }*, i64 }, i64 }, i64 } } { i1 true, { { { { i1, i64 }*, i64 }, i64 }, i64 } poison }, { { { { i1, i64 }*, i64 }, i64 }, i64 } %"530_040", 1
  store { i1, { { { { i1, i64 }*, i64 }, i64 }, i64 } } %21, { i1, { { { { i1, i64 }*, i64 }, i64 }, i64 } }* %"531_0", align 8
  %"532_041" = load {}, {}* %"532_0", align 1
  %"531_042" = load { i1, { { { { i1, i64 }*, i64 }, i64 }, i64 } }, { i1, { { { { i1, i64 }*, i64 }, i64 }, i64 } }* %"531_0", align 8
  store {} %"532_041", {}* %"532_0", align 1
  store { i1, { { { { i1, i64 }*, i64 }, i64 }, i64 } } %"531_042", { i1, { { { { i1, i64 }*, i64 }, i64 }, i64 } }* %"531_0", align 8
  %"532_043" = load {}, {}* %"532_0", align 1
  %"531_044" = load { i1, { { { { i1, i64 }*, i64 }, i64 }, i64 } }, { i1, { { { { i1, i64 }*, i64 }, i64 }, i64 } }* %"531_0", align 8
  switch i1 false, label %22 [
  ]

22:                                               ; preds = %12
  store { i1, { { { { i1, i64 }*, i64 }, i64 }, i64 } } %"531_044", { i1, { { { { i1, i64 }*, i64 }, i64 }, i64 } }* %"02", align 8
  br label %33

23:                                               ; preds = %34
  %"534_045" = load i64, i64* %"534_0", align 4
  %"534_146" = load { { i1, i64 }*, i64 }, { { i1, i64 }*, i64 }* %"534_1", align 8
  store i64 %"534_045", i64* %"534_0", align 4
  store { { i1, i64 }*, i64 } %"534_146", { { i1, i64 }*, i64 }* %"534_1", align 8
  store {} undef, {}* %"556_0", align 1
  store { i1, { { { { i1, i64 }*, i64 }, i64 }, i64 } } { i1 false, { { { { i1, i64 }*, i64 }, i64 }, i64 } poison }, { i1, { { { { i1, i64 }*, i64 }, i64 }, i64 } }* %"555_0", align 8
  store {} undef, {}* %"554_0", align 1
  store {} ({ i1, i64 })* @"__hugr__.$ArrayIter._assert_all_used.helper.5$$t(qubit).538", {} ({ i1, i64 })** %"537_0", align 8
  %"534_147" = load { { i1, i64 }*, i64 }, { { i1, i64 }*, i64 }* %"534_1", align 8
  %"534_048" = load i64, i64* %"534_0", align 4
  %24 = insertvalue { { { i1, i64 }*, i64 }, i64 } poison, { { i1, i64 }*, i64 } %"534_147", 0
  %25 = insertvalue { { { i1, i64 }*, i64 }, i64 } %24, i64 %"534_048", 1
  store { { { i1, i64 }*, i64 }, i64 } %25, { { { i1, i64 }*, i64 }, i64 }* %"536_0", align 8
  %"536_049" = load { { { i1, i64 }*, i64 }, i64 }, { { { i1, i64 }*, i64 }, i64 }* %"536_0", align 8
  %26 = extractvalue { { { i1, i64 }*, i64 }, i64 } %"536_049", 0
  %27 = extractvalue { { { i1, i64 }*, i64 }, i64 } %"536_049", 1
  store { { i1, i64 }*, i64 } %26, { { i1, i64 }*, i64 }* %"552_0", align 8
  store i64 %27, i64* %"552_1", align 4
  %"552_050" = load { { i1, i64 }*, i64 }, { { i1, i64 }*, i64 }* %"552_0", align 8
  %"537_051" = load {} ({ i1, i64 })*, {} ({ i1, i64 })** %"537_0", align 8
  %array_ptr = extractvalue { { i1, i64 }*, i64 } %"552_050", 0
  %array_offset = extractvalue { { i1, i64 }*, i64 } %"552_050", 1
  %28 = call i8* @malloc(i64 mul (i64 ptrtoint ({}* getelementptr ({}, {}* null, i32 1) to i64), i64 10))
  %29 = bitcast i8* %28 to {}*
  %30 = insertvalue { {}*, i64 } poison, {}* %29, 0
  %31 = insertvalue { {}*, i64 } %30, i64 0, 1
  %32 = alloca i64, align 8
  store i64 0, i64* %32, align 4
  br label %36

33:                                               ; preds = %50, %22
  %"029" = load { i1, { { { { i1, i64 }*, i64 }, i64 }, i64 } }, { i1, { { { { i1, i64 }*, i64 }, i64 }, i64 } }* %"02", align 8
  store { i1, { { { { i1, i64 }*, i64 }, i64 }, i64 } } %"029", { i1, { { { { i1, i64 }*, i64 }, i64 }, i64 } }* %"511_0", align 8
  %"511_058" = load { i1, { { { { i1, i64 }*, i64 }, i64 }, i64 } }, { i1, { { { { i1, i64 }*, i64 }, i64 }, i64 } }* %"511_0", align 8
  store { i1, { { { { i1, i64 }*, i64 }, i64 }, i64 } } %"511_058", { i1, { { { { i1, i64 }*, i64 }, i64 }, i64 } }* %"0", align 8
  %"059" = load { i1, { { { { i1, i64 }*, i64 }, i64 }, i64 } }, { i1, { { { { i1, i64 }*, i64 }, i64 }, i64 } }* %"0", align 8
  ret { i1, { { { { i1, i64 }*, i64 }, i64 }, i64 } } %"059"

cond_327_case_0:                                  ; preds = %8
  %"016" = load i1, i1* %"015", align 1
  store i1 %"016", i1* %"324_0", align 1
  %"324_017" = load i1, i1* %"324_0", align 1
  store i1 %"324_017", i1* %"013", align 1
  br label %cond_exit_327

cond_327_case_1:                                  ; preds = %10
  %"019" = load i64, i64* %"018", align 4
  store i64 %"019", i64* %"323_0", align 4
  %"323_020" = load i64, i64* %"323_0", align 4
  %read_bool = call i1 @___read_future_bool(i64 %"323_020")
  call void @___dec_future_refcount(i64 %"323_020")
  %measure = select i1 %read_bool, i1 true, i1 false
  store i1 %measure, i1* %"321_0", align 1
  %"321_021" = load i1, i1* %"321_0", align 1
  store i1 %"321_021", i1* %"013", align 1
  br label %cond_exit_327

cond_exit_327:                                    ; preds = %cond_327_case_1, %cond_327_case_0
  %"014" = load i1, i1* %"013", align 1
  store i1 %"014", i1* %"327_0", align 1
  %"327_022" = load i1, i1* %"327_0", align 1
  store i1 %"327_022", i1* %"520_0", align 1
  %"520_023" = load i1, i1* %"520_0", align 1
  %"515_124" = load i64, i64* %"515_1", align 4
  %"515_025" = load { { i1, i64 }*, i64 }, { { i1, i64 }*, i64 }* %"515_0", align 8
  store i1 %"520_023", i1* %"520_0", align 1
  store i64 %"515_124", i64* %"515_1", align 4
  store { { i1, i64 }*, i64 } %"515_025", { { i1, i64 }*, i64 }* %"515_0", align 8
  %"520_026" = load i1, i1* %"520_0", align 1
  %"515_127" = load i64, i64* %"515_1", align 4
  %"515_028" = load { { i1, i64 }*, i64 }, { { i1, i64 }*, i64 }* %"515_0", align 8
  switch i1 %"520_026", label %34 [
    i1 true, label %35
  ]

34:                                               ; preds = %cond_exit_327
  store i64 %"515_127", i64* %"534_0", align 4
  store { { i1, i64 }*, i64 } %"515_028", { { i1, i64 }*, i64 }* %"534_1", align 8
  br label %23

35:                                               ; preds = %cond_exit_327
  store i64 %"515_127", i64* %"523_0", align 4
  store { { i1, i64 }*, i64 } %"515_028", { { i1, i64 }*, i64 }* %"523_1", align 8
  br label %12

36:                                               ; preds = %39, %23
  %37 = load i64, i64* %32, align 4
  %38 = icmp ult i64 %37, 10
  br i1 %38, label %39, label %47

39:                                               ; preds = %36
  %40 = load i64, i64* %32, align 4
  %41 = add i64 %40, %array_offset
  %42 = getelementptr inbounds { i1, i64 }, { i1, i64 }* %array_ptr, i64 %41
  %43 = load { i1, i64 }, { i1, i64 }* %42, align 4
  %44 = call {} %"537_051"({ i1, i64 } %43)
  %45 = getelementptr inbounds {}, {}* %29, i64 %40
  store {} %44, {}* %45, align 1
  %46 = add i64 %40, 1
  store i64 %46, i64* %32, align 4
  br label %36

47:                                               ; preds = %36
  %48 = bitcast { i1, i64 }* %array_ptr to i8*
  call void @free(i8* %48)
  store { {}*, i64 } %31, { {}*, i64 }* %"553_0", align 8
  %"553_052" = load { {}*, i64 }, { {}*, i64 }* %"553_0", align 8
  %array_ptr53 = extractvalue { {}*, i64 } %"553_052", 0
  %49 = bitcast {}* %array_ptr53 to i8*
  call void @free(i8* %49)
  %"556_054" = load {}, {}* %"556_0", align 1
  %"555_055" = load { i1, { { { { i1, i64 }*, i64 }, i64 }, i64 } }, { i1, { { { { i1, i64 }*, i64 }, i64 }, i64 } }* %"555_0", align 8
  store {} %"556_054", {}* %"556_0", align 1
  store { i1, { { { { i1, i64 }*, i64 }, i64 }, i64 } } %"555_055", { i1, { { { { i1, i64 }*, i64 }, i64 }, i64 } }* %"555_0", align 8
  %"556_056" = load {}, {}* %"556_0", align 1
  %"555_057" = load { i1, { { { { i1, i64 }*, i64 }, i64 }, i64 } }, { i1, { { { { i1, i64 }*, i64 }, i64 }, i64 } }* %"555_0", align 8
  switch i1 false, label %50 [
  ]

50:                                               ; preds = %47
  store { i1, { { { { i1, i64 }*, i64 }, i64 }, i64 } } %"555_057", { i1, { { { { i1, i64 }*, i64 }, i64 }, i64 } }* %"02", align 8
  br label %33
}

declare i64 @___lazy_measure(i64)

declare void @___qfree(i64)

define { { i1, { i1, i64, i1 } }*, i64 } @"__hugr__.$array.__setitem__.classical.3$$t(bool)$n(10).576"({ { i1, { i1, i64, i1 } }*, i64 } %0, i64 %1, { i1, i64, i1 } %2) {
alloca_block:
  %"0" = alloca { { i1, { i1, i64, i1 } }*, i64 }, align 8
  %"577_0" = alloca { { i1, { i1, i64, i1 } }*, i64 }, align 8
  %"577_1" = alloca i64, align 8
  %"577_2" = alloca { i1, i64, i1 }, align 8
  %"580_0" = alloca { i1, { i1, i64, i1 } }, align 8
  %"579_0" = alloca i64, align 8
  %"581_0" = alloca { i1, { { i1, { i1, i64, i1 } }*, i64 }, { i1, { i1, i64, i1 } } }, align 8
  %"06" = alloca { i1, { { i1, { i1, i64, i1 } }*, i64 }, { i1, { i1, i64, i1 } } }, align 8
  %"582_0" = alloca { i1, { i1, i64, i1 } }, align 8
  %"582_1" = alloca { { i1, { i1, i64, i1 } }*, i64 }, align 8
  %"09" = alloca { i1, { i1, i64, i1 } }, align 8
  %"1" = alloca { { i1, { i1, i64, i1 } }*, i64 }, align 8
  %"012" = alloca { i1, { i1, i64, i1 } }, align 8
  %"113" = alloca { { i1, { i1, i64, i1 } }*, i64 }, align 8
  %"584_0" = alloca { i1, { i1, i64, i1 } }, align 8
  %"584_1" = alloca { { i1, { i1, i64, i1 } }*, i64 }, align 8
  %"586_0" = alloca { i32, i8* }, align 8
  %"588_0" = alloca { i1, { i1, i64, i1 } }, align 8
  %"588_1" = alloca { { i1, { i1, i64, i1 } }*, i64 }, align 8
  %"021" = alloca { i1, { i1, i64, i1 } }, align 8
  %"122" = alloca { { i1, { i1, i64, i1 } }*, i64 }, align 8
  %"590_0" = alloca { i1, { i1, i64, i1 } }, align 8
  %"590_1" = alloca { { i1, { i1, i64, i1 } }*, i64 }, align 8
  %"028" = alloca { i1, i64, i1 }, align 8
  %"352_0" = alloca { i1, i64, i1 }, align 8
  %"031" = alloca i1, align 1
  %"369_0" = alloca i1, align 1
  %"033" = alloca i64, align 8
  %"357_0" = alloca i64, align 8
  br label %entry_block

entry_block:                                      ; preds = %alloca_block
  store { { i1, { i1, i64, i1 } }*, i64 } %0, { { i1, { i1, i64, i1 } }*, i64 }* %"577_0", align 8
  store i64 %1, i64* %"577_1", align 4
  store { i1, i64, i1 } %2, { i1, i64, i1 }* %"577_2", align 4
  %"577_21" = load { i1, i64, i1 }, { i1, i64, i1 }* %"577_2", align 4
  %3 = insertvalue { i1, { i1, i64, i1 } } { i1 true, { i1, i64, i1 } poison }, { i1, i64, i1 } %"577_21", 1
  store { i1, { i1, i64, i1 } } %3, { i1, { i1, i64, i1 } }* %"580_0", align 4
  %"577_12" = load i64, i64* %"577_1", align 4
  store i64 %"577_12", i64* %"579_0", align 4
  %"577_03" = load { { i1, { i1, i64, i1 } }*, i64 }, { { i1, { i1, i64, i1 } }*, i64 }* %"577_0", align 8
  %"579_04" = load i64, i64* %"579_0", align 4
  %"580_05" = load { i1, { i1, i64, i1 } }, { i1, { i1, i64, i1 } }* %"580_0", align 4
  %array_ptr = extractvalue { { i1, { i1, i64, i1 } }*, i64 } %"577_03", 0
  %array_offset = extractvalue { { i1, { i1, i64, i1 } }*, i64 } %"577_03", 1
  %4 = icmp ult i64 %"579_04", 10
  br i1 %4, label %8, label %5

5:                                                ; preds = %entry_block
  %6 = insertvalue { i1, { { i1, { i1, i64, i1 } }*, i64 }, { i1, { i1, i64, i1 } } } { i1 false, { { i1, { i1, i64, i1 } }*, i64 } poison, { i1, { i1, i64, i1 } } poison }, { i1, { i1, i64, i1 } } %"580_05", 2
  %7 = insertvalue { i1, { { i1, { i1, i64, i1 } }*, i64 }, { i1, { i1, i64, i1 } } } %6, { { i1, { i1, i64, i1 } }*, i64 } %"577_03", 1
  store { i1, { { i1, { i1, i64, i1 } }*, i64 }, { i1, { i1, i64, i1 } } } %7, { i1, { { i1, { i1, i64, i1 } }*, i64 }, { i1, { i1, i64, i1 } } }* %"06", align 8
  br label %14

8:                                                ; preds = %entry_block
  %9 = add i64 %"579_04", %array_offset
  %10 = getelementptr inbounds { i1, { i1, i64, i1 } }, { i1, { i1, i64, i1 } }* %array_ptr, i64 %9
  %11 = load { i1, { i1, i64, i1 } }, { i1, { i1, i64, i1 } }* %10, align 4
  store { i1, { i1, i64, i1 } } %"580_05", { i1, { i1, i64, i1 } }* %10, align 4
  %12 = insertvalue { i1, { { i1, { i1, i64, i1 } }*, i64 }, { i1, { i1, i64, i1 } } } { i1 true, { { i1, { i1, i64, i1 } }*, i64 } poison, { i1, { i1, i64, i1 } } poison }, { i1, { i1, i64, i1 } } %11, 2
  %13 = insertvalue { i1, { { i1, { i1, i64, i1 } }*, i64 }, { i1, { i1, i64, i1 } } } %12, { { i1, { i1, i64, i1 } }*, i64 } %"577_03", 1
  store { i1, { { i1, { i1, i64, i1 } }*, i64 }, { i1, { i1, i64, i1 } } } %13, { i1, { { i1, { i1, i64, i1 } }*, i64 }, { i1, { i1, i64, i1 } } }* %"06", align 8
  br label %14

14:                                               ; preds = %5, %8
  %"07" = load { i1, { { i1, { i1, i64, i1 } }*, i64 }, { i1, { i1, i64, i1 } } }, { i1, { { i1, { i1, i64, i1 } }*, i64 }, { i1, { i1, i64, i1 } } }* %"06", align 8
  store { i1, { { i1, { i1, i64, i1 } }*, i64 }, { i1, { i1, i64, i1 } } } %"07", { i1, { { i1, { i1, i64, i1 } }*, i64 }, { i1, { i1, i64, i1 } } }* %"581_0", align 8
  %"581_08" = load { i1, { { i1, { i1, i64, i1 } }*, i64 }, { i1, { i1, i64, i1 } } }, { i1, { { i1, { i1, i64, i1 } }*, i64 }, { i1, { i1, i64, i1 } } }* %"581_0", align 8
  %15 = extractvalue { i1, { { i1, { i1, i64, i1 } }*, i64 }, { i1, { i1, i64, i1 } } } %"581_08", 0
  switch i1 %15, label %16 [
    i1 true, label %19
  ]

16:                                               ; preds = %14
  %17 = extractvalue { i1, { { i1, { i1, i64, i1 } }*, i64 }, { i1, { i1, i64, i1 } } } %"581_08", 2
  %18 = extractvalue { i1, { { i1, { i1, i64, i1 } }*, i64 }, { i1, { i1, i64, i1 } } } %"581_08", 1
  store { i1, { i1, i64, i1 } } %17, { i1, { i1, i64, i1 } }* %"012", align 4
  store { { i1, { i1, i64, i1 } }*, i64 } %18, { { i1, { i1, i64, i1 } }*, i64 }* %"113", align 8
  br label %cond_582_case_0

19:                                               ; preds = %14
  %20 = extractvalue { i1, { { i1, { i1, i64, i1 } }*, i64 }, { i1, { i1, i64, i1 } } } %"581_08", 2
  %21 = extractvalue { i1, { { i1, { i1, i64, i1 } }*, i64 }, { i1, { i1, i64, i1 } } } %"581_08", 1
  store { i1, { i1, i64, i1 } } %20, { i1, { i1, i64, i1 } }* %"021", align 4
  store { { i1, { i1, i64, i1 } }*, i64 } %21, { { i1, { i1, i64, i1 } }*, i64 }* %"122", align 8
  br label %cond_582_case_1

cond_582_case_0:                                  ; preds = %16
  %"014" = load { i1, { i1, i64, i1 } }, { i1, { i1, i64, i1 } }* %"012", align 4
  %"115" = load { { i1, { i1, i64, i1 } }*, i64 }, { { i1, { i1, i64, i1 } }*, i64 }* %"113", align 8
  store { i1, { i1, i64, i1 } } %"014", { i1, { i1, i64, i1 } }* %"584_0", align 4
  store { { i1, { i1, i64, i1 } }*, i64 } %"115", { { i1, { i1, i64, i1 } }*, i64 }* %"584_1", align 8
  store { i32, i8* } { i32 1, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @"e_Array inde.2A1CB845.0", i32 0, i32 0) }, { i32, i8* }* %"586_0", align 8
  %"586_016" = load { i32, i8* }, { i32, i8* }* %"586_0", align 8
  %"584_017" = load { i1, { i1, i64, i1 } }, { i1, { i1, i64, i1 } }* %"584_0", align 4
  %"584_118" = load { { i1, { i1, i64, i1 } }*, i64 }, { { i1, { i1, i64, i1 } }*, i64 }* %"584_1", align 8
  %22 = extractvalue { i32, i8* } %"586_016", 0
  %shift_code = add i32 %22, 1000
  %23 = extractvalue { i32, i8* } %"586_016", 1
  call void @panic(i32 %shift_code, i8* %23)
  store { i1, { i1, i64, i1 } } zeroinitializer, { i1, { i1, i64, i1 } }* %"588_0", align 4
  store { { i1, { i1, i64, i1 } }*, i64 } zeroinitializer, { { i1, { i1, i64, i1 } }*, i64 }* %"588_1", align 8
  %"588_019" = load { i1, { i1, i64, i1 } }, { i1, { i1, i64, i1 } }* %"588_0", align 4
  %"588_120" = load { { i1, { i1, i64, i1 } }*, i64 }, { { i1, { i1, i64, i1 } }*, i64 }* %"588_1", align 8
  store { i1, { i1, i64, i1 } } %"588_019", { i1, { i1, i64, i1 } }* %"09", align 4
  store { { i1, { i1, i64, i1 } }*, i64 } %"588_120", { { i1, { i1, i64, i1 } }*, i64 }* %"1", align 8
  br label %cond_exit_582

cond_582_case_1:                                  ; preds = %19
  %"023" = load { i1, { i1, i64, i1 } }, { i1, { i1, i64, i1 } }* %"021", align 4
  %"124" = load { { i1, { i1, i64, i1 } }*, i64 }, { { i1, { i1, i64, i1 } }*, i64 }* %"122", align 8
  store { i1, { i1, i64, i1 } } %"023", { i1, { i1, i64, i1 } }* %"590_0", align 4
  store { { i1, { i1, i64, i1 } }*, i64 } %"124", { { i1, { i1, i64, i1 } }*, i64 }* %"590_1", align 8
  %"590_025" = load { i1, { i1, i64, i1 } }, { i1, { i1, i64, i1 } }* %"590_0", align 4
  %"590_126" = load { { i1, { i1, i64, i1 } }*, i64 }, { { i1, { i1, i64, i1 } }*, i64 }* %"590_1", align 8
  store { i1, { i1, i64, i1 } } %"590_025", { i1, { i1, i64, i1 } }* %"09", align 4
  store { { i1, { i1, i64, i1 } }*, i64 } %"590_126", { { i1, { i1, i64, i1 } }*, i64 }* %"1", align 8
  br label %cond_exit_582

cond_exit_582:                                    ; preds = %cond_582_case_1, %cond_582_case_0
  %"010" = load { i1, { i1, i64, i1 } }, { i1, { i1, i64, i1 } }* %"09", align 4
  %"111" = load { { i1, { i1, i64, i1 } }*, i64 }, { { i1, { i1, i64, i1 } }*, i64 }* %"1", align 8
  store { i1, { i1, i64, i1 } } %"010", { i1, { i1, i64, i1 } }* %"582_0", align 4
  store { { i1, { i1, i64, i1 } }*, i64 } %"111", { { i1, { i1, i64, i1 } }*, i64 }* %"582_1", align 8
  %"582_027" = load { i1, { i1, i64, i1 } }, { i1, { i1, i64, i1 } }* %"582_0", align 4
  %24 = extractvalue { i1, { i1, i64, i1 } } %"582_027", 0
  switch i1 %24, label %25 [
    i1 true, label %26
  ]

25:                                               ; preds = %cond_exit_582
  br label %cond_368_case_0

26:                                               ; preds = %cond_exit_582
  %27 = extractvalue { i1, { i1, i64, i1 } } %"582_027", 1
  store { i1, i64, i1 } %27, { i1, i64, i1 }* %"028", align 4
  br label %cond_368_case_1

cond_368_case_0:                                  ; preds = %25
  br label %cond_exit_368

cond_368_case_1:                                  ; preds = %26
  %"029" = load { i1, i64, i1 }, { i1, i64, i1 }* %"028", align 4
  store { i1, i64, i1 } %"029", { i1, i64, i1 }* %"352_0", align 4
  %"352_030" = load { i1, i64, i1 }, { i1, i64, i1 }* %"352_0", align 4
  %28 = extractvalue { i1, i64, i1 } %"352_030", 0
  switch i1 %28, label %29 [
    i1 true, label %31
  ]

29:                                               ; preds = %cond_368_case_1
  %30 = extractvalue { i1, i64, i1 } %"352_030", 2
  store i1 %30, i1* %"031", align 1
  br label %cond_404_case_0

31:                                               ; preds = %cond_368_case_1
  %32 = extractvalue { i1, i64, i1 } %"352_030", 1
  store i64 %32, i64* %"033", align 4
  br label %cond_404_case_1

cond_exit_368:                                    ; preds = %cond_exit_404, %cond_368_case_0
  %"582_136" = load { { i1, { i1, i64, i1 } }*, i64 }, { { i1, { i1, i64, i1 } }*, i64 }* %"582_1", align 8
  store { { i1, { i1, i64, i1 } }*, i64 } %"582_136", { { i1, { i1, i64, i1 } }*, i64 }* %"0", align 8
  %"037" = load { { i1, { i1, i64, i1 } }*, i64 }, { { i1, { i1, i64, i1 } }*, i64 }* %"0", align 8
  ret { { i1, { i1, i64, i1 } }*, i64 } %"037"

cond_404_case_0:                                  ; preds = %29
  %"032" = load i1, i1* %"031", align 1
  store i1 %"032", i1* %"369_0", align 1
  br label %cond_exit_404

cond_404_case_1:                                  ; preds = %31
  %"034" = load i64, i64* %"033", align 4
  store i64 %"034", i64* %"357_0", align 4
  %"357_035" = load i64, i64* %"357_0", align 4
  call void @___dec_future_refcount(i64 %"357_035")
  br label %cond_exit_404

cond_exit_404:                                    ; preds = %cond_404_case_1, %cond_404_case_0
  br label %cond_exit_368
}

define {} @"__hugr__.$ArrayIter._assert_all_used.helper.5$$t(qubit).538"({ i1, i64 } %0) {
alloca_block:
  %"0" = alloca {}, align 8
  %"539_0" = alloca { i1, i64 }, align 8
  %"551_0" = alloca {}, align 8
  %"02" = alloca i64, align 8
  %"546_0" = alloca i64, align 8
  %"548_0" = alloca { i32, i8* }, align 8
  br label %entry_block

entry_block:                                      ; preds = %alloca_block
  store { i1, i64 } %0, { i1, i64 }* %"539_0", align 4
  store {} undef, {}* %"551_0", align 1
  %"539_01" = load { i1, i64 }, { i1, i64 }* %"539_0", align 4
  %1 = extractvalue { i1, i64 } %"539_01", 0
  switch i1 %1, label %2 [
    i1 true, label %3
  ]

2:                                                ; preds = %entry_block
  br label %cond_541_case_0

3:                                                ; preds = %entry_block
  %4 = extractvalue { i1, i64 } %"539_01", 1
  store i64 %4, i64* %"02", align 4
  br label %cond_541_case_1

cond_541_case_0:                                  ; preds = %2
  br label %cond_exit_541

cond_541_case_1:                                  ; preds = %3
  %"03" = load i64, i64* %"02", align 4
  store i64 %"03", i64* %"546_0", align 4
  store { i32, i8* } { i32 1, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @e_ArrayIter..ED8B8605.0, i32 0, i32 0) }, { i32, i8* }* %"548_0", align 8
  %"548_04" = load { i32, i8* }, { i32, i8* }* %"548_0", align 8
  %"546_05" = load i64, i64* %"546_0", align 4
  %5 = extractvalue { i32, i8* } %"548_04", 0
  %shift_code = add i32 %5, 1000
  %6 = extractvalue { i32, i8* } %"548_04", 1
  call void @panic(i32 %shift_code, i8* %6)
  br label %cond_exit_541

cond_exit_541:                                    ; preds = %cond_541_case_1, %cond_541_case_0
  %"551_06" = load {}, {}* %"551_0", align 1
  store {} %"551_06", {}* %"0", align 1
  %"07" = load {}, {}* %"0", align 1
  ret {} %"07"
}

declare i64 @___qalloc()

declare void @___reset(i64)

declare void @___rxy(i64, double, double)

define i64 @qmain(i64 %0) {
entry:
  call void @setup(i64 %0)
  call void @__hugr__.main.1()
  %1 = call i64 @teardown()
  ret i64 %1
}

declare void @setup(i64)

declare i64 @teardown()

attributes #0 = { noreturn }

!name = !{!0}

!0 = !{!"mainlib"}
