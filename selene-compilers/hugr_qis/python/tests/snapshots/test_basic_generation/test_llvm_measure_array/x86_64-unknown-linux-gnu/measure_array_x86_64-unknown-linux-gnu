; ModuleID = 'hugr'
source_filename = "hugr"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@"e_Array inde.2A1CB845.0" = private constant [35 x i8] c"\22EXIT:INT:Array index out of bounds"
@"e_Linear arr.8A243695.0" = private constant [48 x i8] c"/EXIT:INT:Linear array element has not been used"
@"e_Linear arr.27F92A51.0" = private constant [52 x i8] c"3EXIT:INT:Linear array element has already been used"
@e_ArrayIter..ED8B8605.0 = private constant [69 x i8] c"DEXIT:INT:ArrayIter._assert_all_used: array element has not been used"
@"e_No more qu.3B2EEBF0.0" = private constant [47 x i8] c".EXIT:INT:No more qubits available to allocate."

define void @__hugr__.main.1() local_unnamed_addr {
alloca_block:
  br label %cond_33_case_1

cond_33_case_1:                                   ; preds = %alloca_block, %cond_exit_33
  %"25_0.sroa.0.0498" = phi i64 [ 0, %alloca_block ], [ %0, %cond_exit_33 ]
  %"25_1.sroa.95.0497" = phi i64 [ undef, %alloca_block ], [ %.fca.9.1.extract257, %cond_exit_33 ]
  %"25_1.sroa.90.0496" = phi i1 [ false, %alloca_block ], [ %.fca.9.0.extract256, %cond_exit_33 ]
  %"25_1.sroa.85.0495" = phi i64 [ undef, %alloca_block ], [ %.fca.8.1.extract255, %cond_exit_33 ]
  %"25_1.sroa.80.0494" = phi i1 [ false, %alloca_block ], [ %.fca.8.0.extract254, %cond_exit_33 ]
  %"25_1.sroa.75.0493" = phi i64 [ undef, %alloca_block ], [ %.fca.7.1.extract253, %cond_exit_33 ]
  %"25_1.sroa.70.0492" = phi i1 [ false, %alloca_block ], [ %.fca.7.0.extract252, %cond_exit_33 ]
  %"25_1.sroa.65.0491" = phi i64 [ undef, %alloca_block ], [ %.fca.6.1.extract251, %cond_exit_33 ]
  %"25_1.sroa.60.0490" = phi i1 [ false, %alloca_block ], [ %.fca.6.0.extract250, %cond_exit_33 ]
  %"25_1.sroa.55.0489" = phi i64 [ undef, %alloca_block ], [ %.fca.5.1.extract249, %cond_exit_33 ]
  %"25_1.sroa.50.0488" = phi i1 [ false, %alloca_block ], [ %.fca.5.0.extract248, %cond_exit_33 ]
  %"25_1.sroa.45.0487" = phi i64 [ undef, %alloca_block ], [ %.fca.4.1.extract247, %cond_exit_33 ]
  %"25_1.sroa.40.0486" = phi i1 [ false, %alloca_block ], [ %.fca.4.0.extract246, %cond_exit_33 ]
  %"25_1.sroa.35.0485" = phi i64 [ undef, %alloca_block ], [ %.fca.3.1.extract245, %cond_exit_33 ]
  %"25_1.sroa.30.0484" = phi i1 [ false, %alloca_block ], [ %.fca.3.0.extract244, %cond_exit_33 ]
  %"25_1.sroa.25.0483" = phi i64 [ undef, %alloca_block ], [ %.fca.2.1.extract243, %cond_exit_33 ]
  %"25_1.sroa.20.0482" = phi i1 [ false, %alloca_block ], [ %.fca.2.0.extract242, %cond_exit_33 ]
  %"25_1.sroa.15.0481" = phi i64 [ undef, %alloca_block ], [ %.fca.1.1.extract241, %cond_exit_33 ]
  %"25_1.sroa.10.0480" = phi i1 [ false, %alloca_block ], [ %.fca.1.0.extract240, %cond_exit_33 ]
  %"25_1.sroa.5.0479" = phi i64 [ undef, %alloca_block ], [ %.fca.0.1.extract239, %cond_exit_33 ]
  %"25_1.sroa.0.0478" = phi i1 [ false, %alloca_block ], [ %.fca.0.0.extract238, %cond_exit_33 ]
  %0 = add nuw nsw i64 %"25_0.sroa.0.0498", 1
  %"25_111.fca.0.0.insert" = insertvalue [10 x { i1, i64 }] poison, i1 %"25_1.sroa.0.0478", 0, 0
  %"25_111.fca.0.1.insert" = insertvalue [10 x { i1, i64 }] %"25_111.fca.0.0.insert", i64 %"25_1.sroa.5.0479", 0, 1
  %"25_111.fca.1.0.insert" = insertvalue [10 x { i1, i64 }] %"25_111.fca.0.1.insert", i1 %"25_1.sroa.10.0480", 1, 0
  %"25_111.fca.1.1.insert" = insertvalue [10 x { i1, i64 }] %"25_111.fca.1.0.insert", i64 %"25_1.sroa.15.0481", 1, 1
  %"25_111.fca.2.0.insert" = insertvalue [10 x { i1, i64 }] %"25_111.fca.1.1.insert", i1 %"25_1.sroa.20.0482", 2, 0
  %"25_111.fca.2.1.insert" = insertvalue [10 x { i1, i64 }] %"25_111.fca.2.0.insert", i64 %"25_1.sroa.25.0483", 2, 1
  %"25_111.fca.3.0.insert" = insertvalue [10 x { i1, i64 }] %"25_111.fca.2.1.insert", i1 %"25_1.sroa.30.0484", 3, 0
  %"25_111.fca.3.1.insert" = insertvalue [10 x { i1, i64 }] %"25_111.fca.3.0.insert", i64 %"25_1.sroa.35.0485", 3, 1
  %"25_111.fca.4.0.insert" = insertvalue [10 x { i1, i64 }] %"25_111.fca.3.1.insert", i1 %"25_1.sroa.40.0486", 4, 0
  %"25_111.fca.4.1.insert" = insertvalue [10 x { i1, i64 }] %"25_111.fca.4.0.insert", i64 %"25_1.sroa.45.0487", 4, 1
  %"25_111.fca.5.0.insert" = insertvalue [10 x { i1, i64 }] %"25_111.fca.4.1.insert", i1 %"25_1.sroa.50.0488", 5, 0
  %"25_111.fca.5.1.insert" = insertvalue [10 x { i1, i64 }] %"25_111.fca.5.0.insert", i64 %"25_1.sroa.55.0489", 5, 1
  %"25_111.fca.6.0.insert" = insertvalue [10 x { i1, i64 }] %"25_111.fca.5.1.insert", i1 %"25_1.sroa.60.0490", 6, 0
  %"25_111.fca.6.1.insert" = insertvalue [10 x { i1, i64 }] %"25_111.fca.6.0.insert", i64 %"25_1.sroa.65.0491", 6, 1
  %"25_111.fca.7.0.insert" = insertvalue [10 x { i1, i64 }] %"25_111.fca.6.1.insert", i1 %"25_1.sroa.70.0492", 7, 0
  %"25_111.fca.7.1.insert" = insertvalue [10 x { i1, i64 }] %"25_111.fca.7.0.insert", i64 %"25_1.sroa.75.0493", 7, 1
  %"25_111.fca.8.0.insert" = insertvalue [10 x { i1, i64 }] %"25_111.fca.7.1.insert", i1 %"25_1.sroa.80.0494", 8, 0
  %"25_111.fca.8.1.insert" = insertvalue [10 x { i1, i64 }] %"25_111.fca.8.0.insert", i64 %"25_1.sroa.85.0495", 8, 1
  %"25_111.fca.9.0.insert" = insertvalue [10 x { i1, i64 }] %"25_111.fca.8.1.insert", i1 %"25_1.sroa.90.0496", 9, 0
  %"25_111.fca.9.1.insert" = insertvalue [10 x { i1, i64 }] %"25_111.fca.9.0.insert", i64 %"25_1.sroa.95.0497", 9, 1
  %qalloc.i = tail call i64 @___qalloc()
  %not_max.not.i = icmp eq i64 %qalloc.i, -1
  br i1 %not_max.not.i, label %id_bb.i, label %reset_bb.i

reset_bb.i:                                       ; preds = %cond_33_case_1
  tail call void @___reset(i64 %qalloc.i)
  br label %id_bb.i

id_bb.i:                                          ; preds = %reset_bb.i, %cond_33_case_1
  %1 = insertvalue { i1, i64 } { i1 true, i64 poison }, i64 %qalloc.i, 1
  %2 = select i1 %not_max.not.i, { i1, i64 } { i1 false, i64 poison }, { i1, i64 } %1
  %.fca.0.extract.i = extractvalue { i1, i64 } %2, 0
  br i1 %.fca.0.extract.i, label %cond_exit_33, label %cond_221_case_0.i

cond_221_case_0.i:                                ; preds = %id_bb.i
  tail call void @panic(i32 1001, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @"e_No more qu.3B2EEBF0.0", i64 0, i64 0))
  unreachable

cond_exit_33:                                     ; preds = %id_bb.i
  %.fca.1.extract.i = extractvalue { i1, i64 } %2, 1
  %3 = tail call [10 x { i1, i64 }] @"__hugr__.$array.__setitem__.linear.4$$t(qubit)$n(10).297"([10 x { i1, i64 }] %"25_111.fca.9.1.insert", i64 %"25_0.sroa.0.0498", i64 %.fca.1.extract.i)
  %.fca.0.0.extract238 = extractvalue [10 x { i1, i64 }] %3, 0, 0
  %.fca.0.1.extract239 = extractvalue [10 x { i1, i64 }] %3, 0, 1
  %.fca.1.0.extract240 = extractvalue [10 x { i1, i64 }] %3, 1, 0
  %.fca.1.1.extract241 = extractvalue [10 x { i1, i64 }] %3, 1, 1
  %.fca.2.0.extract242 = extractvalue [10 x { i1, i64 }] %3, 2, 0
  %.fca.2.1.extract243 = extractvalue [10 x { i1, i64 }] %3, 2, 1
  %.fca.3.0.extract244 = extractvalue [10 x { i1, i64 }] %3, 3, 0
  %.fca.3.1.extract245 = extractvalue [10 x { i1, i64 }] %3, 3, 1
  %.fca.4.0.extract246 = extractvalue [10 x { i1, i64 }] %3, 4, 0
  %.fca.4.1.extract247 = extractvalue [10 x { i1, i64 }] %3, 4, 1
  %.fca.5.0.extract248 = extractvalue [10 x { i1, i64 }] %3, 5, 0
  %.fca.5.1.extract249 = extractvalue [10 x { i1, i64 }] %3, 5, 1
  %.fca.6.0.extract250 = extractvalue [10 x { i1, i64 }] %3, 6, 0
  %.fca.6.1.extract251 = extractvalue [10 x { i1, i64 }] %3, 6, 1
  %.fca.7.0.extract252 = extractvalue [10 x { i1, i64 }] %3, 7, 0
  %.fca.7.1.extract253 = extractvalue [10 x { i1, i64 }] %3, 7, 1
  %.fca.8.0.extract254 = extractvalue [10 x { i1, i64 }] %3, 8, 0
  %.fca.8.1.extract255 = extractvalue [10 x { i1, i64 }] %3, 8, 1
  %.fca.9.0.extract256 = extractvalue [10 x { i1, i64 }] %3, 9, 0
  %.fca.9.1.extract257 = extractvalue [10 x { i1, i64 }] %3, 9, 1
  %exitcond.not = icmp eq i64 %0, 10
  br i1 %exitcond.not, label %loop_out, label %cond_33_case_1

loop_out:                                         ; preds = %cond_exit_33
  %4 = tail call { i64, [10 x { i1, i64 }] } @"__hugr__.$array.__getitem__.linear.2$$t(qubit)$n(10).323"([10 x { i1, i64 }] %3, i64 0)
  %5 = extractvalue { i64, [10 x { i1, i64 }] } %4, 0
  %6 = extractvalue { i64, [10 x { i1, i64 }] } %4, 1
  tail call void @___rxy(i64 %5, double 0x400921FB54442D18, double 0.000000e+00)
  %7 = tail call [10 x { i1, i64 }] @"__hugr__.$array.__setitem__.linear.4$$t(qubit)$n(10).297"([10 x { i1, i64 }] %6, i64 0, i64 %5)
  %8 = tail call { i64, [10 x { i1, i64 }] } @"__hugr__.$array.__getitem__.linear.2$$t(qubit)$n(10).323"([10 x { i1, i64 }] %7, i64 2)
  %9 = extractvalue { i64, [10 x { i1, i64 }] } %8, 0
  %10 = extractvalue { i64, [10 x { i1, i64 }] } %8, 1
  tail call void @___rxy(i64 %9, double 0x400921FB54442D18, double 0.000000e+00)
  %11 = tail call [10 x { i1, i64 }] @"__hugr__.$array.__setitem__.linear.4$$t(qubit)$n(10).297"([10 x { i1, i64 }] %10, i64 2, i64 %9)
  %12 = tail call { i64, [10 x { i1, i64 }] } @"__hugr__.$array.__getitem__.linear.2$$t(qubit)$n(10).323"([10 x { i1, i64 }] %11, i64 3)
  %13 = extractvalue { i64, [10 x { i1, i64 }] } %12, 0
  %14 = extractvalue { i64, [10 x { i1, i64 }] } %12, 1
  tail call void @___rxy(i64 %13, double 0x400921FB54442D18, double 0.000000e+00)
  %15 = tail call [10 x { i1, i64 }] @"__hugr__.$array.__setitem__.linear.4$$t(qubit)$n(10).297"([10 x { i1, i64 }] %14, i64 3, i64 %13)
  %16 = tail call { i64, [10 x { i1, i64 }] } @"__hugr__.$array.__getitem__.linear.2$$t(qubit)$n(10).323"([10 x { i1, i64 }] %15, i64 9)
  %17 = extractvalue { i64, [10 x { i1, i64 }] } %16, 0
  %18 = extractvalue { i64, [10 x { i1, i64 }] } %16, 1
  tail call void @___rxy(i64 %17, double 0x400921FB54442D18, double 0.000000e+00)
  %19 = tail call [10 x { i1, i64 }] @"__hugr__.$array.__setitem__.linear.4$$t(qubit)$n(10).297"([10 x { i1, i64 }] %18, i64 9, i64 %17)
  %20 = tail call [10 x { i1, { i1, i64, i1 } }] @"__hugr__.$measure_array$$n(10).351"([10 x { i1, i64 }] %19)
  %.elt391 = extractvalue [10 x { i1, { i1, i64, i1 } }] %20, 0
  %.elt393 = extractvalue [10 x { i1, { i1, i64, i1 } }] %20, 1
  %.elt395 = extractvalue [10 x { i1, { i1, i64, i1 } }] %20, 2
  %.elt397 = extractvalue [10 x { i1, { i1, i64, i1 } }] %20, 3
  %.elt399 = extractvalue [10 x { i1, { i1, i64, i1 } }] %20, 4
  %.elt401 = extractvalue [10 x { i1, { i1, i64, i1 } }] %20, 5
  %.elt403 = extractvalue [10 x { i1, { i1, i64, i1 } }] %20, 6
  %.elt405 = extractvalue [10 x { i1, { i1, i64, i1 } }] %20, 7
  %.elt407 = extractvalue [10 x { i1, { i1, i64, i1 } }] %20, 8
  %.elt409 = extractvalue [10 x { i1, { i1, i64, i1 } }] %20, 9
  %.fca.0.extract13.i = extractvalue { i1, { i1, i64, i1 } } %.elt391, 0
  br i1 %.fca.0.extract13.i, label %cond_186_case_1.i, label %__hugr__.const_fun_206.143.exit

cond_186_case_1.i:                                ; preds = %loop_out
  %21 = extractvalue { i1, { i1, i64, i1 } } %.elt391, 1
  %.fca.0.extract.i411 = extractvalue { i1, i64, i1 } %21, 0
  br i1 %.fca.0.extract.i411, label %cond_164_case_1.i, label %__hugr__.const_fun_206.143.exit

cond_164_case_1.i:                                ; preds = %cond_186_case_1.i
  %.fca.1.extract.i412 = extractvalue { i1, i64, i1 } %21, 1
  tail call void @___dec_future_refcount(i64 %.fca.1.extract.i412)
  br label %__hugr__.const_fun_206.143.exit

__hugr__.const_fun_206.143.exit:                  ; preds = %loop_out, %cond_186_case_1.i, %cond_164_case_1.i
  %.fca.0.extract13.i.1 = extractvalue { i1, { i1, i64, i1 } } %.elt393, 0
  br i1 %.fca.0.extract13.i.1, label %cond_186_case_1.i.1, label %__hugr__.const_fun_206.143.exit.1

cond_186_case_1.i.1:                              ; preds = %__hugr__.const_fun_206.143.exit
  %22 = extractvalue { i1, { i1, i64, i1 } } %.elt393, 1
  %.fca.0.extract.i411.1 = extractvalue { i1, i64, i1 } %22, 0
  br i1 %.fca.0.extract.i411.1, label %cond_164_case_1.i.1, label %__hugr__.const_fun_206.143.exit.1

cond_164_case_1.i.1:                              ; preds = %cond_186_case_1.i.1
  %.fca.1.extract.i412.1 = extractvalue { i1, i64, i1 } %22, 1
  tail call void @___dec_future_refcount(i64 %.fca.1.extract.i412.1)
  br label %__hugr__.const_fun_206.143.exit.1

__hugr__.const_fun_206.143.exit.1:                ; preds = %cond_164_case_1.i.1, %cond_186_case_1.i.1, %__hugr__.const_fun_206.143.exit
  %.fca.0.extract13.i.2 = extractvalue { i1, { i1, i64, i1 } } %.elt395, 0
  br i1 %.fca.0.extract13.i.2, label %cond_186_case_1.i.2, label %__hugr__.const_fun_206.143.exit.2

cond_186_case_1.i.2:                              ; preds = %__hugr__.const_fun_206.143.exit.1
  %23 = extractvalue { i1, { i1, i64, i1 } } %.elt395, 1
  %.fca.0.extract.i411.2 = extractvalue { i1, i64, i1 } %23, 0
  br i1 %.fca.0.extract.i411.2, label %cond_164_case_1.i.2, label %__hugr__.const_fun_206.143.exit.2

cond_164_case_1.i.2:                              ; preds = %cond_186_case_1.i.2
  %.fca.1.extract.i412.2 = extractvalue { i1, i64, i1 } %23, 1
  tail call void @___dec_future_refcount(i64 %.fca.1.extract.i412.2)
  br label %__hugr__.const_fun_206.143.exit.2

__hugr__.const_fun_206.143.exit.2:                ; preds = %cond_164_case_1.i.2, %cond_186_case_1.i.2, %__hugr__.const_fun_206.143.exit.1
  %.fca.0.extract13.i.3 = extractvalue { i1, { i1, i64, i1 } } %.elt397, 0
  br i1 %.fca.0.extract13.i.3, label %cond_186_case_1.i.3, label %__hugr__.const_fun_206.143.exit.3

cond_186_case_1.i.3:                              ; preds = %__hugr__.const_fun_206.143.exit.2
  %24 = extractvalue { i1, { i1, i64, i1 } } %.elt397, 1
  %.fca.0.extract.i411.3 = extractvalue { i1, i64, i1 } %24, 0
  br i1 %.fca.0.extract.i411.3, label %cond_164_case_1.i.3, label %__hugr__.const_fun_206.143.exit.3

cond_164_case_1.i.3:                              ; preds = %cond_186_case_1.i.3
  %.fca.1.extract.i412.3 = extractvalue { i1, i64, i1 } %24, 1
  tail call void @___dec_future_refcount(i64 %.fca.1.extract.i412.3)
  br label %__hugr__.const_fun_206.143.exit.3

__hugr__.const_fun_206.143.exit.3:                ; preds = %cond_164_case_1.i.3, %cond_186_case_1.i.3, %__hugr__.const_fun_206.143.exit.2
  %.fca.0.extract13.i.4 = extractvalue { i1, { i1, i64, i1 } } %.elt399, 0
  br i1 %.fca.0.extract13.i.4, label %cond_186_case_1.i.4, label %__hugr__.const_fun_206.143.exit.4

cond_186_case_1.i.4:                              ; preds = %__hugr__.const_fun_206.143.exit.3
  %25 = extractvalue { i1, { i1, i64, i1 } } %.elt399, 1
  %.fca.0.extract.i411.4 = extractvalue { i1, i64, i1 } %25, 0
  br i1 %.fca.0.extract.i411.4, label %cond_164_case_1.i.4, label %__hugr__.const_fun_206.143.exit.4

cond_164_case_1.i.4:                              ; preds = %cond_186_case_1.i.4
  %.fca.1.extract.i412.4 = extractvalue { i1, i64, i1 } %25, 1
  tail call void @___dec_future_refcount(i64 %.fca.1.extract.i412.4)
  br label %__hugr__.const_fun_206.143.exit.4

__hugr__.const_fun_206.143.exit.4:                ; preds = %cond_164_case_1.i.4, %cond_186_case_1.i.4, %__hugr__.const_fun_206.143.exit.3
  %.fca.0.extract13.i.5 = extractvalue { i1, { i1, i64, i1 } } %.elt401, 0
  br i1 %.fca.0.extract13.i.5, label %cond_186_case_1.i.5, label %__hugr__.const_fun_206.143.exit.5

cond_186_case_1.i.5:                              ; preds = %__hugr__.const_fun_206.143.exit.4
  %26 = extractvalue { i1, { i1, i64, i1 } } %.elt401, 1
  %.fca.0.extract.i411.5 = extractvalue { i1, i64, i1 } %26, 0
  br i1 %.fca.0.extract.i411.5, label %cond_164_case_1.i.5, label %__hugr__.const_fun_206.143.exit.5

cond_164_case_1.i.5:                              ; preds = %cond_186_case_1.i.5
  %.fca.1.extract.i412.5 = extractvalue { i1, i64, i1 } %26, 1
  tail call void @___dec_future_refcount(i64 %.fca.1.extract.i412.5)
  br label %__hugr__.const_fun_206.143.exit.5

__hugr__.const_fun_206.143.exit.5:                ; preds = %cond_164_case_1.i.5, %cond_186_case_1.i.5, %__hugr__.const_fun_206.143.exit.4
  %.fca.0.extract13.i.6 = extractvalue { i1, { i1, i64, i1 } } %.elt403, 0
  br i1 %.fca.0.extract13.i.6, label %cond_186_case_1.i.6, label %__hugr__.const_fun_206.143.exit.6

cond_186_case_1.i.6:                              ; preds = %__hugr__.const_fun_206.143.exit.5
  %27 = extractvalue { i1, { i1, i64, i1 } } %.elt403, 1
  %.fca.0.extract.i411.6 = extractvalue { i1, i64, i1 } %27, 0
  br i1 %.fca.0.extract.i411.6, label %cond_164_case_1.i.6, label %__hugr__.const_fun_206.143.exit.6

cond_164_case_1.i.6:                              ; preds = %cond_186_case_1.i.6
  %.fca.1.extract.i412.6 = extractvalue { i1, i64, i1 } %27, 1
  tail call void @___dec_future_refcount(i64 %.fca.1.extract.i412.6)
  br label %__hugr__.const_fun_206.143.exit.6

__hugr__.const_fun_206.143.exit.6:                ; preds = %cond_164_case_1.i.6, %cond_186_case_1.i.6, %__hugr__.const_fun_206.143.exit.5
  %.fca.0.extract13.i.7 = extractvalue { i1, { i1, i64, i1 } } %.elt405, 0
  br i1 %.fca.0.extract13.i.7, label %cond_186_case_1.i.7, label %__hugr__.const_fun_206.143.exit.7

cond_186_case_1.i.7:                              ; preds = %__hugr__.const_fun_206.143.exit.6
  %28 = extractvalue { i1, { i1, i64, i1 } } %.elt405, 1
  %.fca.0.extract.i411.7 = extractvalue { i1, i64, i1 } %28, 0
  br i1 %.fca.0.extract.i411.7, label %cond_164_case_1.i.7, label %__hugr__.const_fun_206.143.exit.7

cond_164_case_1.i.7:                              ; preds = %cond_186_case_1.i.7
  %.fca.1.extract.i412.7 = extractvalue { i1, i64, i1 } %28, 1
  tail call void @___dec_future_refcount(i64 %.fca.1.extract.i412.7)
  br label %__hugr__.const_fun_206.143.exit.7

__hugr__.const_fun_206.143.exit.7:                ; preds = %cond_164_case_1.i.7, %cond_186_case_1.i.7, %__hugr__.const_fun_206.143.exit.6
  %.fca.0.extract13.i.8 = extractvalue { i1, { i1, i64, i1 } } %.elt407, 0
  br i1 %.fca.0.extract13.i.8, label %cond_186_case_1.i.8, label %__hugr__.const_fun_206.143.exit.8

cond_186_case_1.i.8:                              ; preds = %__hugr__.const_fun_206.143.exit.7
  %29 = extractvalue { i1, { i1, i64, i1 } } %.elt407, 1
  %.fca.0.extract.i411.8 = extractvalue { i1, i64, i1 } %29, 0
  br i1 %.fca.0.extract.i411.8, label %cond_164_case_1.i.8, label %__hugr__.const_fun_206.143.exit.8

cond_164_case_1.i.8:                              ; preds = %cond_186_case_1.i.8
  %.fca.1.extract.i412.8 = extractvalue { i1, i64, i1 } %29, 1
  tail call void @___dec_future_refcount(i64 %.fca.1.extract.i412.8)
  br label %__hugr__.const_fun_206.143.exit.8

__hugr__.const_fun_206.143.exit.8:                ; preds = %cond_164_case_1.i.8, %cond_186_case_1.i.8, %__hugr__.const_fun_206.143.exit.7
  %.fca.0.extract13.i.9 = extractvalue { i1, { i1, i64, i1 } } %.elt409, 0
  br i1 %.fca.0.extract13.i.9, label %cond_186_case_1.i.9, label %__hugr__.const_fun_206.143.exit.9

cond_186_case_1.i.9:                              ; preds = %__hugr__.const_fun_206.143.exit.8
  %30 = extractvalue { i1, { i1, i64, i1 } } %.elt409, 1
  %.fca.0.extract.i411.9 = extractvalue { i1, i64, i1 } %30, 0
  br i1 %.fca.0.extract.i411.9, label %cond_164_case_1.i.9, label %__hugr__.const_fun_206.143.exit.9

cond_164_case_1.i.9:                              ; preds = %cond_186_case_1.i.9
  %.fca.1.extract.i412.9 = extractvalue { i1, i64, i1 } %30, 1
  tail call void @___dec_future_refcount(i64 %.fca.1.extract.i412.9)
  br label %__hugr__.const_fun_206.143.exit.9

__hugr__.const_fun_206.143.exit.9:                ; preds = %cond_164_case_1.i.9, %cond_186_case_1.i.9, %__hugr__.const_fun_206.143.exit.8
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind readnone willreturn
define { i1, i64 } @"__hugr__.$array.__comprehension.init.6$$t(qubit).293"() local_unnamed_addr #0 {
alloca_block:
  ret { i1, i64 } { i1 false, i64 poison }
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind readnone willreturn
define { i1, { { i64, i64 }, i64 } } @__hugr__.__next__.28({ i64, i64 } %0) local_unnamed_addr #0 {
alloca_block:
  %.fca.0.extract84 = extractvalue { i64, i64 } %0, 0
  %.fca.1.extract85 = extractvalue { i64, i64 } %0, 1
  %1 = icmp slt i64 %.fca.0.extract84, %.fca.1.extract85
  %2 = add i64 %.fca.0.extract84, 1
  %"040.fca.0.insert" = insertvalue { i1, { { i64, i64 }, i64 } } poison, i1 %1, 0
  %"040.fca.1.0.0.insert" = insertvalue { i1, { { i64, i64 }, i64 } } %"040.fca.0.insert", i64 %2, 1, 0, 0
  %"040.fca.1.0.1.insert" = insertvalue { i1, { { i64, i64 }, i64 } } %"040.fca.1.0.0.insert", i64 %.fca.1.extract85, 1, 0, 1
  %"040.fca.1.1.insert" = insertvalue { i1, { { i64, i64 }, i64 } } %"040.fca.1.0.1.insert", i64 %.fca.0.extract84, 1, 1
  ret { i1, { { i64, i64 }, i64 } } %"040.fca.1.1.insert"
}

define i64 @__hugr__.__tk2_qalloc.227() local_unnamed_addr {
alloca_block:
  %qalloc = tail call i64 @___qalloc()
  %not_max.not = icmp eq i64 %qalloc, -1
  br i1 %not_max.not, label %id_bb, label %reset_bb

reset_bb:                                         ; preds = %alloca_block
  tail call void @___reset(i64 %qalloc)
  br label %id_bb

id_bb:                                            ; preds = %alloca_block, %reset_bb
  %0 = insertvalue { i1, i64 } { i1 true, i64 poison }, i64 %qalloc, 1
  %1 = select i1 %not_max.not, { i1, i64 } { i1 false, i64 poison }, { i1, i64 } %0
  %.fca.0.extract = extractvalue { i1, i64 } %1, 0
  br i1 %.fca.0.extract, label %cond_221_case_1, label %cond_221_case_0

cond_221_case_1:                                  ; preds = %id_bb
  %.fca.1.extract = extractvalue { i1, i64 } %1, 1
  ret i64 %.fca.1.extract

cond_221_case_0:                                  ; preds = %id_bb
  tail call void @panic(i32 1001, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @"e_No more qu.3B2EEBF0.0", i64 0, i64 0))
  unreachable
}

define [10 x { i1, i64 }] @"__hugr__.$array.__setitem__.linear.4$$t(qubit)$n(10).297"([10 x { i1, i64 }] %0, i64 %1, i64 %2) local_unnamed_addr {
alloca_block:
  %3 = icmp ult i64 %1, 10
  br i1 %3, label %cond_303_case_1, label %cond_303_case_0

cond_303_case_0:                                  ; preds = %alloca_block
  tail call void @panic(i32 1001, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @"e_Array inde.2A1CB845.0", i64 0, i64 0))
  unreachable

cond_303_case_1:                                  ; preds = %alloca_block
  %"300_05.fca.1.insert" = insertvalue { i1, i64 } { i1 true, i64 poison }, i64 %2, 1
  %4 = alloca [10 x { i1, i64 }], align 8
  %.repack = getelementptr inbounds [10 x { i1, i64 }], [10 x { i1, i64 }]* %4, i64 0, i64 0
  %.elt = extractvalue [10 x { i1, i64 }] %0, 0
  store { i1, i64 } %.elt, { i1, i64 }* %.repack, align 8
  %.repack129 = getelementptr inbounds [10 x { i1, i64 }], [10 x { i1, i64 }]* %4, i64 0, i64 1
  %.elt130 = extractvalue [10 x { i1, i64 }] %0, 1
  store { i1, i64 } %.elt130, { i1, i64 }* %.repack129, align 8
  %.repack131 = getelementptr inbounds [10 x { i1, i64 }], [10 x { i1, i64 }]* %4, i64 0, i64 2
  %.elt132 = extractvalue [10 x { i1, i64 }] %0, 2
  store { i1, i64 } %.elt132, { i1, i64 }* %.repack131, align 8
  %.repack133 = getelementptr inbounds [10 x { i1, i64 }], [10 x { i1, i64 }]* %4, i64 0, i64 3
  %.elt134 = extractvalue [10 x { i1, i64 }] %0, 3
  store { i1, i64 } %.elt134, { i1, i64 }* %.repack133, align 8
  %.repack135 = getelementptr inbounds [10 x { i1, i64 }], [10 x { i1, i64 }]* %4, i64 0, i64 4
  %.elt136 = extractvalue [10 x { i1, i64 }] %0, 4
  store { i1, i64 } %.elt136, { i1, i64 }* %.repack135, align 8
  %.repack137 = getelementptr inbounds [10 x { i1, i64 }], [10 x { i1, i64 }]* %4, i64 0, i64 5
  %.elt138 = extractvalue [10 x { i1, i64 }] %0, 5
  store { i1, i64 } %.elt138, { i1, i64 }* %.repack137, align 8
  %.repack139 = getelementptr inbounds [10 x { i1, i64 }], [10 x { i1, i64 }]* %4, i64 0, i64 6
  %.elt140 = extractvalue [10 x { i1, i64 }] %0, 6
  store { i1, i64 } %.elt140, { i1, i64 }* %.repack139, align 8
  %.repack141 = getelementptr inbounds [10 x { i1, i64 }], [10 x { i1, i64 }]* %4, i64 0, i64 7
  %.elt142 = extractvalue [10 x { i1, i64 }] %0, 7
  store { i1, i64 } %.elt142, { i1, i64 }* %.repack141, align 8
  %.repack143 = getelementptr inbounds [10 x { i1, i64 }], [10 x { i1, i64 }]* %4, i64 0, i64 8
  %.elt144 = extractvalue [10 x { i1, i64 }] %0, 8
  store { i1, i64 } %.elt144, { i1, i64 }* %.repack143, align 8
  %.repack145 = getelementptr inbounds [10 x { i1, i64 }], [10 x { i1, i64 }]* %4, i64 0, i64 9
  %.elt146 = extractvalue [10 x { i1, i64 }] %0, 9
  store { i1, i64 } %.elt146, { i1, i64 }* %.repack145, align 8
  %5 = getelementptr inbounds [10 x { i1, i64 }], [10 x { i1, i64 }]* %4, i64 0, i64 %1
  %6 = getelementptr inbounds { i1, i64 }, { i1, i64 }* %5, i64 0, i32 0
  %7 = load i1, i1* %6, align 8
  store { i1, i64 } %"300_05.fca.1.insert", { i1, i64 }* %5, align 8
  %.unpack = load { i1, i64 }, { i1, i64 }* %.repack, align 8
  %.unpack149 = load { i1, i64 }, { i1, i64 }* %.repack129, align 8
  %.unpack151 = load { i1, i64 }, { i1, i64 }* %.repack131, align 8
  %.unpack153 = load { i1, i64 }, { i1, i64 }* %.repack133, align 8
  %.unpack155 = load { i1, i64 }, { i1, i64 }* %.repack135, align 8
  %.unpack157 = load { i1, i64 }, { i1, i64 }* %.repack137, align 8
  %.unpack159 = load { i1, i64 }, { i1, i64 }* %.repack139, align 8
  %.unpack161 = load { i1, i64 }, { i1, i64 }* %.repack141, align 8
  %.unpack163 = load { i1, i64 }, { i1, i64 }* %.repack143, align 8
  %.unpack165 = load { i1, i64 }, { i1, i64 }* %.repack145, align 8
  br i1 %7, label %cond_312_case_1, label %cond_exit_312

cond_312_case_1:                                  ; preds = %cond_303_case_1
  tail call void @panic(i32 1001, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @"e_Linear arr.8A243695.0", i64 0, i64 0))
  unreachable

cond_exit_312:                                    ; preds = %cond_303_case_1
  %.fca.2.9.1.extract = extractvalue { i1, i64 } %.unpack165, 1
  %.fca.2.9.0.extract = extractvalue { i1, i64 } %.unpack165, 0
  %.fca.2.8.1.extract = extractvalue { i1, i64 } %.unpack163, 1
  %.fca.2.8.0.extract = extractvalue { i1, i64 } %.unpack163, 0
  %.fca.2.7.1.extract = extractvalue { i1, i64 } %.unpack161, 1
  %.fca.2.7.0.extract = extractvalue { i1, i64 } %.unpack161, 0
  %.fca.2.6.1.extract = extractvalue { i1, i64 } %.unpack159, 1
  %.fca.2.6.0.extract = extractvalue { i1, i64 } %.unpack159, 0
  %.fca.2.5.1.extract = extractvalue { i1, i64 } %.unpack157, 1
  %.fca.2.5.0.extract = extractvalue { i1, i64 } %.unpack157, 0
  %.fca.2.4.1.extract = extractvalue { i1, i64 } %.unpack155, 1
  %.fca.2.4.0.extract = extractvalue { i1, i64 } %.unpack155, 0
  %.fca.2.3.1.extract = extractvalue { i1, i64 } %.unpack153, 1
  %.fca.2.3.0.extract = extractvalue { i1, i64 } %.unpack153, 0
  %.fca.2.2.1.extract = extractvalue { i1, i64 } %.unpack151, 1
  %.fca.2.2.0.extract = extractvalue { i1, i64 } %.unpack151, 0
  %.fca.2.1.1.extract = extractvalue { i1, i64 } %.unpack149, 1
  %.fca.2.1.0.extract = extractvalue { i1, i64 } %.unpack149, 0
  %.fca.2.0.1.extract = extractvalue { i1, i64 } %.unpack, 1
  %.fca.2.0.0.extract = extractvalue { i1, i64 } %.unpack, 0
  %8 = insertvalue [10 x { i1, i64 }] poison, i1 %.fca.2.0.0.extract, 0, 0
  %9 = insertvalue [10 x { i1, i64 }] %8, i64 %.fca.2.0.1.extract, 0, 1
  %10 = insertvalue [10 x { i1, i64 }] %9, i1 %.fca.2.1.0.extract, 1, 0
  %11 = insertvalue [10 x { i1, i64 }] %10, i64 %.fca.2.1.1.extract, 1, 1
  %12 = insertvalue [10 x { i1, i64 }] %11, i1 %.fca.2.2.0.extract, 2, 0
  %13 = insertvalue [10 x { i1, i64 }] %12, i64 %.fca.2.2.1.extract, 2, 1
  %14 = insertvalue [10 x { i1, i64 }] %13, i1 %.fca.2.3.0.extract, 3, 0
  %15 = insertvalue [10 x { i1, i64 }] %14, i64 %.fca.2.3.1.extract, 3, 1
  %16 = insertvalue [10 x { i1, i64 }] %15, i1 %.fca.2.4.0.extract, 4, 0
  %17 = insertvalue [10 x { i1, i64 }] %16, i64 %.fca.2.4.1.extract, 4, 1
  %18 = insertvalue [10 x { i1, i64 }] %17, i1 %.fca.2.5.0.extract, 5, 0
  %19 = insertvalue [10 x { i1, i64 }] %18, i64 %.fca.2.5.1.extract, 5, 1
  %20 = insertvalue [10 x { i1, i64 }] %19, i1 %.fca.2.6.0.extract, 6, 0
  %21 = insertvalue [10 x { i1, i64 }] %20, i64 %.fca.2.6.1.extract, 6, 1
  %22 = insertvalue [10 x { i1, i64 }] %21, i1 %.fca.2.7.0.extract, 7, 0
  %23 = insertvalue [10 x { i1, i64 }] %22, i64 %.fca.2.7.1.extract, 7, 1
  %24 = insertvalue [10 x { i1, i64 }] %23, i1 %.fca.2.8.0.extract, 8, 0
  %25 = insertvalue [10 x { i1, i64 }] %24, i64 %.fca.2.8.1.extract, 8, 1
  %26 = insertvalue [10 x { i1, i64 }] %25, i1 %.fca.2.9.0.extract, 9, 0
  %27 = insertvalue [10 x { i1, i64 }] %26, i64 %.fca.2.9.1.extract, 9, 1
  ret [10 x { i1, i64 }] %27
}

define { i64, [10 x { i1, i64 }] } @"__hugr__.$array.__getitem__.linear.2$$t(qubit)$n(10).323"([10 x { i1, i64 }] %0, i64 %1) local_unnamed_addr {
alloca_block:
  %2 = icmp ult i64 %1, 10
  br i1 %2, label %cond_329_case_1, label %cond_329_case_0

cond_329_case_0:                                  ; preds = %alloca_block
  tail call void @panic(i32 1001, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @"e_Array inde.2A1CB845.0", i64 0, i64 0))
  unreachable

cond_329_case_1:                                  ; preds = %alloca_block
  %3 = alloca [10 x { i1, i64 }], align 8
  %.repack = getelementptr inbounds [10 x { i1, i64 }], [10 x { i1, i64 }]* %3, i64 0, i64 0
  %.elt = extractvalue [10 x { i1, i64 }] %0, 0
  store { i1, i64 } %.elt, { i1, i64 }* %.repack, align 8
  %.repack133 = getelementptr inbounds [10 x { i1, i64 }], [10 x { i1, i64 }]* %3, i64 0, i64 1
  %.elt134 = extractvalue [10 x { i1, i64 }] %0, 1
  store { i1, i64 } %.elt134, { i1, i64 }* %.repack133, align 8
  %.repack135 = getelementptr inbounds [10 x { i1, i64 }], [10 x { i1, i64 }]* %3, i64 0, i64 2
  %.elt136 = extractvalue [10 x { i1, i64 }] %0, 2
  store { i1, i64 } %.elt136, { i1, i64 }* %.repack135, align 8
  %.repack137 = getelementptr inbounds [10 x { i1, i64 }], [10 x { i1, i64 }]* %3, i64 0, i64 3
  %.elt138 = extractvalue [10 x { i1, i64 }] %0, 3
  store { i1, i64 } %.elt138, { i1, i64 }* %.repack137, align 8
  %.repack139 = getelementptr inbounds [10 x { i1, i64 }], [10 x { i1, i64 }]* %3, i64 0, i64 4
  %.elt140 = extractvalue [10 x { i1, i64 }] %0, 4
  store { i1, i64 } %.elt140, { i1, i64 }* %.repack139, align 8
  %.repack141 = getelementptr inbounds [10 x { i1, i64 }], [10 x { i1, i64 }]* %3, i64 0, i64 5
  %.elt142 = extractvalue [10 x { i1, i64 }] %0, 5
  store { i1, i64 } %.elt142, { i1, i64 }* %.repack141, align 8
  %.repack143 = getelementptr inbounds [10 x { i1, i64 }], [10 x { i1, i64 }]* %3, i64 0, i64 6
  %.elt144 = extractvalue [10 x { i1, i64 }] %0, 6
  store { i1, i64 } %.elt144, { i1, i64 }* %.repack143, align 8
  %.repack145 = getelementptr inbounds [10 x { i1, i64 }], [10 x { i1, i64 }]* %3, i64 0, i64 7
  %.elt146 = extractvalue [10 x { i1, i64 }] %0, 7
  store { i1, i64 } %.elt146, { i1, i64 }* %.repack145, align 8
  %.repack147 = getelementptr inbounds [10 x { i1, i64 }], [10 x { i1, i64 }]* %3, i64 0, i64 8
  %.elt148 = extractvalue [10 x { i1, i64 }] %0, 8
  store { i1, i64 } %.elt148, { i1, i64 }* %.repack147, align 8
  %.repack149 = getelementptr inbounds [10 x { i1, i64 }], [10 x { i1, i64 }]* %3, i64 0, i64 9
  %.elt150 = extractvalue [10 x { i1, i64 }] %0, 9
  store { i1, i64 } %.elt150, { i1, i64 }* %.repack149, align 8
  %4 = getelementptr inbounds [10 x { i1, i64 }], [10 x { i1, i64 }]* %3, i64 0, i64 %1
  %5 = load { i1, i64 }, { i1, i64 }* %4, align 8
  %6 = bitcast { i1, i64 }* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(16) %6, i8 0, i64 16, i1 false)
  %.unpack = load { i1, i64 }, { i1, i64 }* %.repack, align 8
  %.unpack153 = load { i1, i64 }, { i1, i64 }* %.repack133, align 8
  %.unpack155 = load { i1, i64 }, { i1, i64 }* %.repack135, align 8
  %.unpack157 = load { i1, i64 }, { i1, i64 }* %.repack137, align 8
  %.unpack159 = load { i1, i64 }, { i1, i64 }* %.repack139, align 8
  %.unpack161 = load { i1, i64 }, { i1, i64 }* %.repack141, align 8
  %.unpack163 = load { i1, i64 }, { i1, i64 }* %.repack143, align 8
  %.unpack165 = load { i1, i64 }, { i1, i64 }* %.repack145, align 8
  %.unpack167 = load { i1, i64 }, { i1, i64 }* %.repack147, align 8
  %.unpack169 = load { i1, i64 }, { i1, i64 }* %.repack149, align 8
  %.fca.1.0.extract65 = extractvalue { i1, i64 } %5, 0
  br i1 %.fca.1.0.extract65, label %cond_338_case_1, label %cond_338_case_0

cond_338_case_1:                                  ; preds = %cond_329_case_1
  %.fca.2.9.1.extract = extractvalue { i1, i64 } %.unpack169, 1
  %.fca.2.9.0.extract = extractvalue { i1, i64 } %.unpack169, 0
  %.fca.2.8.1.extract = extractvalue { i1, i64 } %.unpack167, 1
  %.fca.2.8.0.extract = extractvalue { i1, i64 } %.unpack167, 0
  %.fca.2.7.1.extract = extractvalue { i1, i64 } %.unpack165, 1
  %.fca.2.7.0.extract = extractvalue { i1, i64 } %.unpack165, 0
  %.fca.2.6.1.extract = extractvalue { i1, i64 } %.unpack163, 1
  %.fca.2.6.0.extract = extractvalue { i1, i64 } %.unpack163, 0
  %.fca.2.5.1.extract = extractvalue { i1, i64 } %.unpack161, 1
  %.fca.2.5.0.extract = extractvalue { i1, i64 } %.unpack161, 0
  %.fca.2.4.1.extract = extractvalue { i1, i64 } %.unpack159, 1
  %.fca.2.4.0.extract = extractvalue { i1, i64 } %.unpack159, 0
  %.fca.2.3.1.extract = extractvalue { i1, i64 } %.unpack157, 1
  %.fca.2.3.0.extract = extractvalue { i1, i64 } %.unpack157, 0
  %.fca.2.2.1.extract = extractvalue { i1, i64 } %.unpack155, 1
  %.fca.2.2.0.extract = extractvalue { i1, i64 } %.unpack155, 0
  %.fca.2.1.1.extract = extractvalue { i1, i64 } %.unpack153, 1
  %.fca.2.1.0.extract = extractvalue { i1, i64 } %.unpack153, 0
  %.fca.2.0.1.extract = extractvalue { i1, i64 } %.unpack, 1
  %.fca.2.0.0.extract = extractvalue { i1, i64 } %.unpack, 0
  %.fca.1.1.extract66 = extractvalue { i1, i64 } %5, 1
  %7 = insertvalue [10 x { i1, i64 }] poison, i1 %.fca.2.0.0.extract, 0, 0
  %8 = insertvalue [10 x { i1, i64 }] %7, i64 %.fca.2.0.1.extract, 0, 1
  %9 = insertvalue [10 x { i1, i64 }] %8, i1 %.fca.2.1.0.extract, 1, 0
  %10 = insertvalue [10 x { i1, i64 }] %9, i64 %.fca.2.1.1.extract, 1, 1
  %11 = insertvalue [10 x { i1, i64 }] %10, i1 %.fca.2.2.0.extract, 2, 0
  %12 = insertvalue [10 x { i1, i64 }] %11, i64 %.fca.2.2.1.extract, 2, 1
  %13 = insertvalue [10 x { i1, i64 }] %12, i1 %.fca.2.3.0.extract, 3, 0
  %14 = insertvalue [10 x { i1, i64 }] %13, i64 %.fca.2.3.1.extract, 3, 1
  %15 = insertvalue [10 x { i1, i64 }] %14, i1 %.fca.2.4.0.extract, 4, 0
  %16 = insertvalue [10 x { i1, i64 }] %15, i64 %.fca.2.4.1.extract, 4, 1
  %17 = insertvalue [10 x { i1, i64 }] %16, i1 %.fca.2.5.0.extract, 5, 0
  %18 = insertvalue [10 x { i1, i64 }] %17, i64 %.fca.2.5.1.extract, 5, 1
  %19 = insertvalue [10 x { i1, i64 }] %18, i1 %.fca.2.6.0.extract, 6, 0
  %20 = insertvalue [10 x { i1, i64 }] %19, i64 %.fca.2.6.1.extract, 6, 1
  %21 = insertvalue [10 x { i1, i64 }] %20, i1 %.fca.2.7.0.extract, 7, 0
  %22 = insertvalue [10 x { i1, i64 }] %21, i64 %.fca.2.7.1.extract, 7, 1
  %23 = insertvalue [10 x { i1, i64 }] %22, i1 %.fca.2.8.0.extract, 8, 0
  %24 = insertvalue [10 x { i1, i64 }] %23, i64 %.fca.2.8.1.extract, 8, 1
  %25 = insertvalue [10 x { i1, i64 }] %24, i1 %.fca.2.9.0.extract, 9, 0
  %26 = insertvalue [10 x { i1, i64 }] %25, i64 %.fca.2.9.1.extract, 9, 1
  %mrv = insertvalue { i64, [10 x { i1, i64 }] } undef, i64 %.fca.1.1.extract66, 0
  %mrv40 = insertvalue { i64, [10 x { i1, i64 }] } %mrv, [10 x { i1, i64 }] %26, 1
  ret { i64, [10 x { i1, i64 }] } %mrv40

cond_338_case_0:                                  ; preds = %cond_329_case_1
  tail call void @panic(i32 1001, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @"e_Linear arr.27F92A51.0", i64 0, i64 0))
  unreachable
}

define i64 @__hugr__.__tk2_x.179(i64 returned %0) local_unnamed_addr {
alloca_block:
  tail call void @___rxy(i64 %0, double 0x400921FB54442D18, double 0.000000e+00)
  ret i64 %0
}

define [10 x { i1, { i1, i64, i1 } }] @"__hugr__.$measure_array$$n(10).351"([10 x { i1, i64 }] %0) local_unnamed_addr {
alloca_block:
  %1 = tail call { i64, [10 x { i1, i64 }] } @"__hugr__.$__iter__$$t(qubit)$n(10).367"([10 x { i1, i64 }] %0)
  %2 = tail call { i1, { { i64, [10 x { i1, i64 }] }, i64 } } @"__hugr__.$__next__$$t(qubit)$n(10).387"({ i64, [10 x { i1, i64 }] } %1)
  %.fca.0.extract116569 = extractvalue { i1, { { i64, [10 x { i1, i64 }] }, i64 } } %2, 0
  br i1 %.fca.0.extract116569, label %loop_body, label %loop_out

loop_body:                                        ; preds = %alloca_block, %loop_body
  %3 = phi { i1, { { i64, [10 x { i1, i64 }] }, i64 } } [ %8, %loop_body ], [ %2, %alloca_block ]
  %"382_1.sroa.195.0610" = phi i1 [ %.fca.9.1.2.extract, %loop_body ], [ undef, %alloca_block ]
  %"382_1.sroa.190.0609" = phi i64 [ %.fca.9.1.1.extract, %loop_body ], [ undef, %alloca_block ]
  %"382_1.sroa.185.0608" = phi i1 [ %.fca.9.1.0.extract, %loop_body ], [ undef, %alloca_block ]
  %"382_1.sroa.180.0607" = phi i1 [ %.fca.9.0.extract, %loop_body ], [ false, %alloca_block ]
  %"382_1.sroa.175.0606" = phi i1 [ %.fca.8.1.2.extract, %loop_body ], [ undef, %alloca_block ]
  %"382_1.sroa.170.0605" = phi i64 [ %.fca.8.1.1.extract, %loop_body ], [ undef, %alloca_block ]
  %"382_1.sroa.165.0604" = phi i1 [ %.fca.8.1.0.extract, %loop_body ], [ undef, %alloca_block ]
  %"382_1.sroa.160.0603" = phi i1 [ %.fca.8.0.extract, %loop_body ], [ false, %alloca_block ]
  %"382_1.sroa.155.0602" = phi i1 [ %.fca.7.1.2.extract, %loop_body ], [ undef, %alloca_block ]
  %"382_1.sroa.150.0601" = phi i64 [ %.fca.7.1.1.extract, %loop_body ], [ undef, %alloca_block ]
  %"382_1.sroa.145.0600" = phi i1 [ %.fca.7.1.0.extract, %loop_body ], [ undef, %alloca_block ]
  %"382_1.sroa.140.0599" = phi i1 [ %.fca.7.0.extract, %loop_body ], [ false, %alloca_block ]
  %"382_1.sroa.135.0598" = phi i1 [ %.fca.6.1.2.extract, %loop_body ], [ undef, %alloca_block ]
  %"382_1.sroa.130.0597" = phi i64 [ %.fca.6.1.1.extract, %loop_body ], [ undef, %alloca_block ]
  %"382_1.sroa.125.0596" = phi i1 [ %.fca.6.1.0.extract, %loop_body ], [ undef, %alloca_block ]
  %"382_1.sroa.120.0595" = phi i1 [ %.fca.6.0.extract, %loop_body ], [ false, %alloca_block ]
  %"382_1.sroa.115.0594" = phi i1 [ %.fca.5.1.2.extract, %loop_body ], [ undef, %alloca_block ]
  %"382_1.sroa.110.0593" = phi i64 [ %.fca.5.1.1.extract, %loop_body ], [ undef, %alloca_block ]
  %"382_1.sroa.105.0592" = phi i1 [ %.fca.5.1.0.extract, %loop_body ], [ undef, %alloca_block ]
  %"382_1.sroa.100.0591" = phi i1 [ %.fca.5.0.extract, %loop_body ], [ false, %alloca_block ]
  %"382_1.sroa.95.0590" = phi i1 [ %.fca.4.1.2.extract, %loop_body ], [ undef, %alloca_block ]
  %"382_1.sroa.90.0589" = phi i64 [ %.fca.4.1.1.extract, %loop_body ], [ undef, %alloca_block ]
  %"382_1.sroa.85.0588" = phi i1 [ %.fca.4.1.0.extract, %loop_body ], [ undef, %alloca_block ]
  %"382_1.sroa.80.0587" = phi i1 [ %.fca.4.0.extract, %loop_body ], [ false, %alloca_block ]
  %"382_1.sroa.75.0586" = phi i1 [ %.fca.3.1.2.extract, %loop_body ], [ undef, %alloca_block ]
  %"382_1.sroa.70.0585" = phi i64 [ %.fca.3.1.1.extract, %loop_body ], [ undef, %alloca_block ]
  %"382_1.sroa.65.0584" = phi i1 [ %.fca.3.1.0.extract, %loop_body ], [ undef, %alloca_block ]
  %"382_1.sroa.60.0583" = phi i1 [ %.fca.3.0.extract, %loop_body ], [ false, %alloca_block ]
  %"382_1.sroa.55.0582" = phi i1 [ %.fca.2.1.2.extract, %loop_body ], [ undef, %alloca_block ]
  %"382_1.sroa.50.0581" = phi i64 [ %.fca.2.1.1.extract, %loop_body ], [ undef, %alloca_block ]
  %"382_1.sroa.45.0580" = phi i1 [ %.fca.2.1.0.extract, %loop_body ], [ undef, %alloca_block ]
  %"382_1.sroa.40.0579" = phi i1 [ %.fca.2.0.extract, %loop_body ], [ false, %alloca_block ]
  %"382_1.sroa.35.0578" = phi i1 [ %.fca.1.1.2.extract, %loop_body ], [ undef, %alloca_block ]
  %"382_1.sroa.30.0577" = phi i64 [ %.fca.1.1.1.extract, %loop_body ], [ undef, %alloca_block ]
  %"382_1.sroa.25.0576" = phi i1 [ %.fca.1.1.0.extract, %loop_body ], [ undef, %alloca_block ]
  %"382_1.sroa.20.0575" = phi i1 [ %.fca.1.0.extract68, %loop_body ], [ false, %alloca_block ]
  %"382_1.sroa.15.0574" = phi i1 [ %.fca.0.1.2.extract, %loop_body ], [ undef, %alloca_block ]
  %"382_1.sroa.10.0573" = phi i64 [ %.fca.0.1.1.extract, %loop_body ], [ undef, %alloca_block ]
  %"382_1.sroa.5.0572" = phi i1 [ %.fca.0.1.0.extract, %loop_body ], [ undef, %alloca_block ]
  %"382_1.sroa.0.0571" = phi i1 [ %.fca.0.0.extract, %loop_body ], [ false, %alloca_block ]
  %"382_2.0570" = phi i64 [ %5, %loop_body ], [ 0, %alloca_block ]
  %"382_113.fca.0.0.insert" = insertvalue [10 x { i1, { i1, i64, i1 } }] poison, i1 %"382_1.sroa.0.0571", 0, 0
  %"382_113.fca.0.1.0.insert" = insertvalue [10 x { i1, { i1, i64, i1 } }] %"382_113.fca.0.0.insert", i1 %"382_1.sroa.5.0572", 0, 1, 0
  %"382_113.fca.0.1.1.insert" = insertvalue [10 x { i1, { i1, i64, i1 } }] %"382_113.fca.0.1.0.insert", i64 %"382_1.sroa.10.0573", 0, 1, 1
  %"382_113.fca.0.1.2.insert" = insertvalue [10 x { i1, { i1, i64, i1 } }] %"382_113.fca.0.1.1.insert", i1 %"382_1.sroa.15.0574", 0, 1, 2
  %"382_113.fca.1.0.insert" = insertvalue [10 x { i1, { i1, i64, i1 } }] %"382_113.fca.0.1.2.insert", i1 %"382_1.sroa.20.0575", 1, 0
  %"382_113.fca.1.1.0.insert" = insertvalue [10 x { i1, { i1, i64, i1 } }] %"382_113.fca.1.0.insert", i1 %"382_1.sroa.25.0576", 1, 1, 0
  %"382_113.fca.1.1.1.insert" = insertvalue [10 x { i1, { i1, i64, i1 } }] %"382_113.fca.1.1.0.insert", i64 %"382_1.sroa.30.0577", 1, 1, 1
  %"382_113.fca.1.1.2.insert" = insertvalue [10 x { i1, { i1, i64, i1 } }] %"382_113.fca.1.1.1.insert", i1 %"382_1.sroa.35.0578", 1, 1, 2
  %"382_113.fca.2.0.insert" = insertvalue [10 x { i1, { i1, i64, i1 } }] %"382_113.fca.1.1.2.insert", i1 %"382_1.sroa.40.0579", 2, 0
  %"382_113.fca.2.1.0.insert" = insertvalue [10 x { i1, { i1, i64, i1 } }] %"382_113.fca.2.0.insert", i1 %"382_1.sroa.45.0580", 2, 1, 0
  %"382_113.fca.2.1.1.insert" = insertvalue [10 x { i1, { i1, i64, i1 } }] %"382_113.fca.2.1.0.insert", i64 %"382_1.sroa.50.0581", 2, 1, 1
  %"382_113.fca.2.1.2.insert" = insertvalue [10 x { i1, { i1, i64, i1 } }] %"382_113.fca.2.1.1.insert", i1 %"382_1.sroa.55.0582", 2, 1, 2
  %"382_113.fca.3.0.insert" = insertvalue [10 x { i1, { i1, i64, i1 } }] %"382_113.fca.2.1.2.insert", i1 %"382_1.sroa.60.0583", 3, 0
  %"382_113.fca.3.1.0.insert" = insertvalue [10 x { i1, { i1, i64, i1 } }] %"382_113.fca.3.0.insert", i1 %"382_1.sroa.65.0584", 3, 1, 0
  %"382_113.fca.3.1.1.insert" = insertvalue [10 x { i1, { i1, i64, i1 } }] %"382_113.fca.3.1.0.insert", i64 %"382_1.sroa.70.0585", 3, 1, 1
  %"382_113.fca.3.1.2.insert" = insertvalue [10 x { i1, { i1, i64, i1 } }] %"382_113.fca.3.1.1.insert", i1 %"382_1.sroa.75.0586", 3, 1, 2
  %"382_113.fca.4.0.insert" = insertvalue [10 x { i1, { i1, i64, i1 } }] %"382_113.fca.3.1.2.insert", i1 %"382_1.sroa.80.0587", 4, 0
  %"382_113.fca.4.1.0.insert" = insertvalue [10 x { i1, { i1, i64, i1 } }] %"382_113.fca.4.0.insert", i1 %"382_1.sroa.85.0588", 4, 1, 0
  %"382_113.fca.4.1.1.insert" = insertvalue [10 x { i1, { i1, i64, i1 } }] %"382_113.fca.4.1.0.insert", i64 %"382_1.sroa.90.0589", 4, 1, 1
  %"382_113.fca.4.1.2.insert" = insertvalue [10 x { i1, { i1, i64, i1 } }] %"382_113.fca.4.1.1.insert", i1 %"382_1.sroa.95.0590", 4, 1, 2
  %"382_113.fca.5.0.insert" = insertvalue [10 x { i1, { i1, i64, i1 } }] %"382_113.fca.4.1.2.insert", i1 %"382_1.sroa.100.0591", 5, 0
  %"382_113.fca.5.1.0.insert" = insertvalue [10 x { i1, { i1, i64, i1 } }] %"382_113.fca.5.0.insert", i1 %"382_1.sroa.105.0592", 5, 1, 0
  %"382_113.fca.5.1.1.insert" = insertvalue [10 x { i1, { i1, i64, i1 } }] %"382_113.fca.5.1.0.insert", i64 %"382_1.sroa.110.0593", 5, 1, 1
  %"382_113.fca.5.1.2.insert" = insertvalue [10 x { i1, { i1, i64, i1 } }] %"382_113.fca.5.1.1.insert", i1 %"382_1.sroa.115.0594", 5, 1, 2
  %"382_113.fca.6.0.insert" = insertvalue [10 x { i1, { i1, i64, i1 } }] %"382_113.fca.5.1.2.insert", i1 %"382_1.sroa.120.0595", 6, 0
  %"382_113.fca.6.1.0.insert" = insertvalue [10 x { i1, { i1, i64, i1 } }] %"382_113.fca.6.0.insert", i1 %"382_1.sroa.125.0596", 6, 1, 0
  %"382_113.fca.6.1.1.insert" = insertvalue [10 x { i1, { i1, i64, i1 } }] %"382_113.fca.6.1.0.insert", i64 %"382_1.sroa.130.0597", 6, 1, 1
  %"382_113.fca.6.1.2.insert" = insertvalue [10 x { i1, { i1, i64, i1 } }] %"382_113.fca.6.1.1.insert", i1 %"382_1.sroa.135.0598", 6, 1, 2
  %"382_113.fca.7.0.insert" = insertvalue [10 x { i1, { i1, i64, i1 } }] %"382_113.fca.6.1.2.insert", i1 %"382_1.sroa.140.0599", 7, 0
  %"382_113.fca.7.1.0.insert" = insertvalue [10 x { i1, { i1, i64, i1 } }] %"382_113.fca.7.0.insert", i1 %"382_1.sroa.145.0600", 7, 1, 0
  %"382_113.fca.7.1.1.insert" = insertvalue [10 x { i1, { i1, i64, i1 } }] %"382_113.fca.7.1.0.insert", i64 %"382_1.sroa.150.0601", 7, 1, 1
  %"382_113.fca.7.1.2.insert" = insertvalue [10 x { i1, { i1, i64, i1 } }] %"382_113.fca.7.1.1.insert", i1 %"382_1.sroa.155.0602", 7, 1, 2
  %"382_113.fca.8.0.insert" = insertvalue [10 x { i1, { i1, i64, i1 } }] %"382_113.fca.7.1.2.insert", i1 %"382_1.sroa.160.0603", 8, 0
  %"382_113.fca.8.1.0.insert" = insertvalue [10 x { i1, { i1, i64, i1 } }] %"382_113.fca.8.0.insert", i1 %"382_1.sroa.165.0604", 8, 1, 0
  %"382_113.fca.8.1.1.insert" = insertvalue [10 x { i1, { i1, i64, i1 } }] %"382_113.fca.8.1.0.insert", i64 %"382_1.sroa.170.0605", 8, 1, 1
  %"382_113.fca.8.1.2.insert" = insertvalue [10 x { i1, { i1, i64, i1 } }] %"382_113.fca.8.1.1.insert", i1 %"382_1.sroa.175.0606", 8, 1, 2
  %"382_113.fca.9.0.insert" = insertvalue [10 x { i1, { i1, i64, i1 } }] %"382_113.fca.8.1.2.insert", i1 %"382_1.sroa.180.0607", 9, 0
  %"382_113.fca.9.1.0.insert" = insertvalue [10 x { i1, { i1, i64, i1 } }] %"382_113.fca.9.0.insert", i1 %"382_1.sroa.185.0608", 9, 1, 0
  %"382_113.fca.9.1.1.insert" = insertvalue [10 x { i1, { i1, i64, i1 } }] %"382_113.fca.9.1.0.insert", i64 %"382_1.sroa.190.0609", 9, 1, 1
  %"382_113.fca.9.1.2.insert" = insertvalue [10 x { i1, { i1, i64, i1 } }] %"382_113.fca.9.1.1.insert", i1 %"382_1.sroa.195.0610", 9, 1, 2
  %4 = extractvalue { i1, { { i64, [10 x { i1, i64 }] }, i64 } } %3, 1
  %.fca.1.extract75 = extractvalue { { i64, [10 x { i1, i64 }] }, i64 } %4, 1
  %5 = add i64 %"382_2.0570", 1
  %6 = extractvalue { { i64, [10 x { i1, i64 }] }, i64 } %4, 0
  %lazy_measure = tail call i64 @___lazy_measure(i64 %.fca.1.extract75)
  tail call void @___qfree(i64 %.fca.1.extract75)
  %"449_048.fca.1.insert" = insertvalue { i1, i64, i1 } { i1 true, i64 poison, i1 poison }, i64 %lazy_measure, 1
  %7 = tail call [10 x { i1, { i1, i64, i1 } }] @"__hugr__.$array.__setitem__.classical.3$$t(bool)$n(10).451"([10 x { i1, { i1, i64, i1 } }] %"382_113.fca.9.1.2.insert", i64 %"382_2.0570", { i1, i64, i1 } %"449_048.fca.1.insert")
  %.fca.0.0.extract = extractvalue [10 x { i1, { i1, i64, i1 } }] %7, 0, 0
  %.fca.0.1.0.extract = extractvalue [10 x { i1, { i1, i64, i1 } }] %7, 0, 1, 0
  %.fca.0.1.1.extract = extractvalue [10 x { i1, { i1, i64, i1 } }] %7, 0, 1, 1
  %.fca.0.1.2.extract = extractvalue [10 x { i1, { i1, i64, i1 } }] %7, 0, 1, 2
  %.fca.1.0.extract68 = extractvalue [10 x { i1, { i1, i64, i1 } }] %7, 1, 0
  %.fca.1.1.0.extract = extractvalue [10 x { i1, { i1, i64, i1 } }] %7, 1, 1, 0
  %.fca.1.1.1.extract = extractvalue [10 x { i1, { i1, i64, i1 } }] %7, 1, 1, 1
  %.fca.1.1.2.extract = extractvalue [10 x { i1, { i1, i64, i1 } }] %7, 1, 1, 2
  %.fca.2.0.extract = extractvalue [10 x { i1, { i1, i64, i1 } }] %7, 2, 0
  %.fca.2.1.0.extract = extractvalue [10 x { i1, { i1, i64, i1 } }] %7, 2, 1, 0
  %.fca.2.1.1.extract = extractvalue [10 x { i1, { i1, i64, i1 } }] %7, 2, 1, 1
  %.fca.2.1.2.extract = extractvalue [10 x { i1, { i1, i64, i1 } }] %7, 2, 1, 2
  %.fca.3.0.extract = extractvalue [10 x { i1, { i1, i64, i1 } }] %7, 3, 0
  %.fca.3.1.0.extract = extractvalue [10 x { i1, { i1, i64, i1 } }] %7, 3, 1, 0
  %.fca.3.1.1.extract = extractvalue [10 x { i1, { i1, i64, i1 } }] %7, 3, 1, 1
  %.fca.3.1.2.extract = extractvalue [10 x { i1, { i1, i64, i1 } }] %7, 3, 1, 2
  %.fca.4.0.extract = extractvalue [10 x { i1, { i1, i64, i1 } }] %7, 4, 0
  %.fca.4.1.0.extract = extractvalue [10 x { i1, { i1, i64, i1 } }] %7, 4, 1, 0
  %.fca.4.1.1.extract = extractvalue [10 x { i1, { i1, i64, i1 } }] %7, 4, 1, 1
  %.fca.4.1.2.extract = extractvalue [10 x { i1, { i1, i64, i1 } }] %7, 4, 1, 2
  %.fca.5.0.extract = extractvalue [10 x { i1, { i1, i64, i1 } }] %7, 5, 0
  %.fca.5.1.0.extract = extractvalue [10 x { i1, { i1, i64, i1 } }] %7, 5, 1, 0
  %.fca.5.1.1.extract = extractvalue [10 x { i1, { i1, i64, i1 } }] %7, 5, 1, 1
  %.fca.5.1.2.extract = extractvalue [10 x { i1, { i1, i64, i1 } }] %7, 5, 1, 2
  %.fca.6.0.extract = extractvalue [10 x { i1, { i1, i64, i1 } }] %7, 6, 0
  %.fca.6.1.0.extract = extractvalue [10 x { i1, { i1, i64, i1 } }] %7, 6, 1, 0
  %.fca.6.1.1.extract = extractvalue [10 x { i1, { i1, i64, i1 } }] %7, 6, 1, 1
  %.fca.6.1.2.extract = extractvalue [10 x { i1, { i1, i64, i1 } }] %7, 6, 1, 2
  %.fca.7.0.extract = extractvalue [10 x { i1, { i1, i64, i1 } }] %7, 7, 0
  %.fca.7.1.0.extract = extractvalue [10 x { i1, { i1, i64, i1 } }] %7, 7, 1, 0
  %.fca.7.1.1.extract = extractvalue [10 x { i1, { i1, i64, i1 } }] %7, 7, 1, 1
  %.fca.7.1.2.extract = extractvalue [10 x { i1, { i1, i64, i1 } }] %7, 7, 1, 2
  %.fca.8.0.extract = extractvalue [10 x { i1, { i1, i64, i1 } }] %7, 8, 0
  %.fca.8.1.0.extract = extractvalue [10 x { i1, { i1, i64, i1 } }] %7, 8, 1, 0
  %.fca.8.1.1.extract = extractvalue [10 x { i1, { i1, i64, i1 } }] %7, 8, 1, 1
  %.fca.8.1.2.extract = extractvalue [10 x { i1, { i1, i64, i1 } }] %7, 8, 1, 2
  %.fca.9.0.extract = extractvalue [10 x { i1, { i1, i64, i1 } }] %7, 9, 0
  %.fca.9.1.0.extract = extractvalue [10 x { i1, { i1, i64, i1 } }] %7, 9, 1, 0
  %.fca.9.1.1.extract = extractvalue [10 x { i1, { i1, i64, i1 } }] %7, 9, 1, 1
  %.fca.9.1.2.extract = extractvalue [10 x { i1, { i1, i64, i1 } }] %7, 9, 1, 2
  %8 = tail call { i1, { { i64, [10 x { i1, i64 }] }, i64 } } @"__hugr__.$__next__$$t(qubit)$n(10).387"({ i64, [10 x { i1, i64 }] } %6)
  %.fca.0.extract116 = extractvalue { i1, { { i64, [10 x { i1, i64 }] }, i64 } } %8, 0
  br i1 %.fca.0.extract116, label %loop_body, label %loop_out.loopexit

loop_out.loopexit:                                ; preds = %loop_body
  %.fca.0.0.extract.le = extractvalue [10 x { i1, { i1, i64, i1 } }] %7, 0, 0
  %.fca.0.1.0.extract.le = extractvalue [10 x { i1, { i1, i64, i1 } }] %7, 0, 1, 0
  %.fca.0.1.1.extract.le = extractvalue [10 x { i1, { i1, i64, i1 } }] %7, 0, 1, 1
  %.fca.0.1.2.extract.le = extractvalue [10 x { i1, { i1, i64, i1 } }] %7, 0, 1, 2
  %.fca.1.0.extract68.le = extractvalue [10 x { i1, { i1, i64, i1 } }] %7, 1, 0
  %.fca.1.1.0.extract.le = extractvalue [10 x { i1, { i1, i64, i1 } }] %7, 1, 1, 0
  %.fca.1.1.1.extract.le = extractvalue [10 x { i1, { i1, i64, i1 } }] %7, 1, 1, 1
  %.fca.1.1.2.extract.le = extractvalue [10 x { i1, { i1, i64, i1 } }] %7, 1, 1, 2
  %.fca.2.0.extract.le = extractvalue [10 x { i1, { i1, i64, i1 } }] %7, 2, 0
  %.fca.2.1.0.extract.le = extractvalue [10 x { i1, { i1, i64, i1 } }] %7, 2, 1, 0
  %.fca.2.1.1.extract.le = extractvalue [10 x { i1, { i1, i64, i1 } }] %7, 2, 1, 1
  %.fca.2.1.2.extract.le = extractvalue [10 x { i1, { i1, i64, i1 } }] %7, 2, 1, 2
  %.fca.3.0.extract.le = extractvalue [10 x { i1, { i1, i64, i1 } }] %7, 3, 0
  %.fca.3.1.0.extract.le = extractvalue [10 x { i1, { i1, i64, i1 } }] %7, 3, 1, 0
  %.fca.3.1.1.extract.le = extractvalue [10 x { i1, { i1, i64, i1 } }] %7, 3, 1, 1
  %.fca.3.1.2.extract.le = extractvalue [10 x { i1, { i1, i64, i1 } }] %7, 3, 1, 2
  %.fca.4.0.extract.le = extractvalue [10 x { i1, { i1, i64, i1 } }] %7, 4, 0
  %.fca.4.1.0.extract.le = extractvalue [10 x { i1, { i1, i64, i1 } }] %7, 4, 1, 0
  %.fca.4.1.1.extract.le = extractvalue [10 x { i1, { i1, i64, i1 } }] %7, 4, 1, 1
  %.fca.4.1.2.extract.le = extractvalue [10 x { i1, { i1, i64, i1 } }] %7, 4, 1, 2
  %.fca.5.0.extract.le = extractvalue [10 x { i1, { i1, i64, i1 } }] %7, 5, 0
  %.fca.5.1.0.extract.le = extractvalue [10 x { i1, { i1, i64, i1 } }] %7, 5, 1, 0
  %.fca.5.1.1.extract.le = extractvalue [10 x { i1, { i1, i64, i1 } }] %7, 5, 1, 1
  %.fca.5.1.2.extract.le = extractvalue [10 x { i1, { i1, i64, i1 } }] %7, 5, 1, 2
  %.fca.6.0.extract.le = extractvalue [10 x { i1, { i1, i64, i1 } }] %7, 6, 0
  %.fca.6.1.0.extract.le = extractvalue [10 x { i1, { i1, i64, i1 } }] %7, 6, 1, 0
  %.fca.6.1.1.extract.le = extractvalue [10 x { i1, { i1, i64, i1 } }] %7, 6, 1, 1
  %.fca.6.1.2.extract.le = extractvalue [10 x { i1, { i1, i64, i1 } }] %7, 6, 1, 2
  %.fca.7.0.extract.le = extractvalue [10 x { i1, { i1, i64, i1 } }] %7, 7, 0
  %.fca.7.1.0.extract.le = extractvalue [10 x { i1, { i1, i64, i1 } }] %7, 7, 1, 0
  %.fca.7.1.1.extract.le = extractvalue [10 x { i1, { i1, i64, i1 } }] %7, 7, 1, 1
  %.fca.7.1.2.extract.le = extractvalue [10 x { i1, { i1, i64, i1 } }] %7, 7, 1, 2
  %.fca.8.0.extract.le = extractvalue [10 x { i1, { i1, i64, i1 } }] %7, 8, 0
  %.fca.8.1.0.extract.le = extractvalue [10 x { i1, { i1, i64, i1 } }] %7, 8, 1, 0
  %.fca.8.1.1.extract.le = extractvalue [10 x { i1, { i1, i64, i1 } }] %7, 8, 1, 1
  %.fca.8.1.2.extract.le = extractvalue [10 x { i1, { i1, i64, i1 } }] %7, 8, 1, 2
  %.fca.9.0.extract.le = extractvalue [10 x { i1, { i1, i64, i1 } }] %7, 9, 0
  %.fca.9.1.0.extract.le = extractvalue [10 x { i1, { i1, i64, i1 } }] %7, 9, 1, 0
  %.fca.9.1.1.extract.le = extractvalue [10 x { i1, { i1, i64, i1 } }] %7, 9, 1, 1
  %.fca.9.1.2.extract.le = extractvalue [10 x { i1, { i1, i64, i1 } }] %7, 9, 1, 2
  br label %loop_out

loop_out:                                         ; preds = %loop_out.loopexit, %alloca_block
  %"382_1.sroa.0.0.lcssa" = phi i1 [ false, %alloca_block ], [ %.fca.0.0.extract.le, %loop_out.loopexit ]
  %"382_1.sroa.5.0.lcssa" = phi i1 [ undef, %alloca_block ], [ %.fca.0.1.0.extract.le, %loop_out.loopexit ]
  %"382_1.sroa.10.0.lcssa" = phi i64 [ undef, %alloca_block ], [ %.fca.0.1.1.extract.le, %loop_out.loopexit ]
  %"382_1.sroa.15.0.lcssa" = phi i1 [ undef, %alloca_block ], [ %.fca.0.1.2.extract.le, %loop_out.loopexit ]
  %"382_1.sroa.20.0.lcssa" = phi i1 [ false, %alloca_block ], [ %.fca.1.0.extract68.le, %loop_out.loopexit ]
  %"382_1.sroa.25.0.lcssa" = phi i1 [ undef, %alloca_block ], [ %.fca.1.1.0.extract.le, %loop_out.loopexit ]
  %"382_1.sroa.30.0.lcssa" = phi i64 [ undef, %alloca_block ], [ %.fca.1.1.1.extract.le, %loop_out.loopexit ]
  %"382_1.sroa.35.0.lcssa" = phi i1 [ undef, %alloca_block ], [ %.fca.1.1.2.extract.le, %loop_out.loopexit ]
  %"382_1.sroa.40.0.lcssa" = phi i1 [ false, %alloca_block ], [ %.fca.2.0.extract.le, %loop_out.loopexit ]
  %"382_1.sroa.45.0.lcssa" = phi i1 [ undef, %alloca_block ], [ %.fca.2.1.0.extract.le, %loop_out.loopexit ]
  %"382_1.sroa.50.0.lcssa" = phi i64 [ undef, %alloca_block ], [ %.fca.2.1.1.extract.le, %loop_out.loopexit ]
  %"382_1.sroa.55.0.lcssa" = phi i1 [ undef, %alloca_block ], [ %.fca.2.1.2.extract.le, %loop_out.loopexit ]
  %"382_1.sroa.60.0.lcssa" = phi i1 [ false, %alloca_block ], [ %.fca.3.0.extract.le, %loop_out.loopexit ]
  %"382_1.sroa.65.0.lcssa" = phi i1 [ undef, %alloca_block ], [ %.fca.3.1.0.extract.le, %loop_out.loopexit ]
  %"382_1.sroa.70.0.lcssa" = phi i64 [ undef, %alloca_block ], [ %.fca.3.1.1.extract.le, %loop_out.loopexit ]
  %"382_1.sroa.75.0.lcssa" = phi i1 [ undef, %alloca_block ], [ %.fca.3.1.2.extract.le, %loop_out.loopexit ]
  %"382_1.sroa.80.0.lcssa" = phi i1 [ false, %alloca_block ], [ %.fca.4.0.extract.le, %loop_out.loopexit ]
  %"382_1.sroa.85.0.lcssa" = phi i1 [ undef, %alloca_block ], [ %.fca.4.1.0.extract.le, %loop_out.loopexit ]
  %"382_1.sroa.90.0.lcssa" = phi i64 [ undef, %alloca_block ], [ %.fca.4.1.1.extract.le, %loop_out.loopexit ]
  %"382_1.sroa.95.0.lcssa" = phi i1 [ undef, %alloca_block ], [ %.fca.4.1.2.extract.le, %loop_out.loopexit ]
  %"382_1.sroa.100.0.lcssa" = phi i1 [ false, %alloca_block ], [ %.fca.5.0.extract.le, %loop_out.loopexit ]
  %"382_1.sroa.105.0.lcssa" = phi i1 [ undef, %alloca_block ], [ %.fca.5.1.0.extract.le, %loop_out.loopexit ]
  %"382_1.sroa.110.0.lcssa" = phi i64 [ undef, %alloca_block ], [ %.fca.5.1.1.extract.le, %loop_out.loopexit ]
  %"382_1.sroa.115.0.lcssa" = phi i1 [ undef, %alloca_block ], [ %.fca.5.1.2.extract.le, %loop_out.loopexit ]
  %"382_1.sroa.120.0.lcssa" = phi i1 [ false, %alloca_block ], [ %.fca.6.0.extract.le, %loop_out.loopexit ]
  %"382_1.sroa.125.0.lcssa" = phi i1 [ undef, %alloca_block ], [ %.fca.6.1.0.extract.le, %loop_out.loopexit ]
  %"382_1.sroa.130.0.lcssa" = phi i64 [ undef, %alloca_block ], [ %.fca.6.1.1.extract.le, %loop_out.loopexit ]
  %"382_1.sroa.135.0.lcssa" = phi i1 [ undef, %alloca_block ], [ %.fca.6.1.2.extract.le, %loop_out.loopexit ]
  %"382_1.sroa.140.0.lcssa" = phi i1 [ false, %alloca_block ], [ %.fca.7.0.extract.le, %loop_out.loopexit ]
  %"382_1.sroa.145.0.lcssa" = phi i1 [ undef, %alloca_block ], [ %.fca.7.1.0.extract.le, %loop_out.loopexit ]
  %"382_1.sroa.150.0.lcssa" = phi i64 [ undef, %alloca_block ], [ %.fca.7.1.1.extract.le, %loop_out.loopexit ]
  %"382_1.sroa.155.0.lcssa" = phi i1 [ undef, %alloca_block ], [ %.fca.7.1.2.extract.le, %loop_out.loopexit ]
  %"382_1.sroa.160.0.lcssa" = phi i1 [ false, %alloca_block ], [ %.fca.8.0.extract.le, %loop_out.loopexit ]
  %"382_1.sroa.165.0.lcssa" = phi i1 [ undef, %alloca_block ], [ %.fca.8.1.0.extract.le, %loop_out.loopexit ]
  %"382_1.sroa.170.0.lcssa" = phi i64 [ undef, %alloca_block ], [ %.fca.8.1.1.extract.le, %loop_out.loopexit ]
  %"382_1.sroa.175.0.lcssa" = phi i1 [ undef, %alloca_block ], [ %.fca.8.1.2.extract.le, %loop_out.loopexit ]
  %"382_1.sroa.180.0.lcssa" = phi i1 [ false, %alloca_block ], [ %.fca.9.0.extract.le, %loop_out.loopexit ]
  %"382_1.sroa.185.0.lcssa" = phi i1 [ undef, %alloca_block ], [ %.fca.9.1.0.extract.le, %loop_out.loopexit ]
  %"382_1.sroa.190.0.lcssa" = phi i64 [ undef, %alloca_block ], [ %.fca.9.1.1.extract.le, %loop_out.loopexit ]
  %"382_1.sroa.195.0.lcssa" = phi i1 [ undef, %alloca_block ], [ %.fca.9.1.2.extract.le, %loop_out.loopexit ]
  %"124.fca.0.0.insert" = insertvalue [10 x { i1, { i1, i64, i1 } }] poison, i1 %"382_1.sroa.0.0.lcssa", 0, 0
  %"124.fca.0.1.0.insert" = insertvalue [10 x { i1, { i1, i64, i1 } }] %"124.fca.0.0.insert", i1 %"382_1.sroa.5.0.lcssa", 0, 1, 0
  %"124.fca.0.1.1.insert" = insertvalue [10 x { i1, { i1, i64, i1 } }] %"124.fca.0.1.0.insert", i64 %"382_1.sroa.10.0.lcssa", 0, 1, 1
  %"124.fca.0.1.2.insert" = insertvalue [10 x { i1, { i1, i64, i1 } }] %"124.fca.0.1.1.insert", i1 %"382_1.sroa.15.0.lcssa", 0, 1, 2
  %"124.fca.1.0.insert" = insertvalue [10 x { i1, { i1, i64, i1 } }] %"124.fca.0.1.2.insert", i1 %"382_1.sroa.20.0.lcssa", 1, 0
  %"124.fca.1.1.0.insert" = insertvalue [10 x { i1, { i1, i64, i1 } }] %"124.fca.1.0.insert", i1 %"382_1.sroa.25.0.lcssa", 1, 1, 0
  %"124.fca.1.1.1.insert" = insertvalue [10 x { i1, { i1, i64, i1 } }] %"124.fca.1.1.0.insert", i64 %"382_1.sroa.30.0.lcssa", 1, 1, 1
  %"124.fca.1.1.2.insert" = insertvalue [10 x { i1, { i1, i64, i1 } }] %"124.fca.1.1.1.insert", i1 %"382_1.sroa.35.0.lcssa", 1, 1, 2
  %"124.fca.2.0.insert" = insertvalue [10 x { i1, { i1, i64, i1 } }] %"124.fca.1.1.2.insert", i1 %"382_1.sroa.40.0.lcssa", 2, 0
  %"124.fca.2.1.0.insert" = insertvalue [10 x { i1, { i1, i64, i1 } }] %"124.fca.2.0.insert", i1 %"382_1.sroa.45.0.lcssa", 2, 1, 0
  %"124.fca.2.1.1.insert" = insertvalue [10 x { i1, { i1, i64, i1 } }] %"124.fca.2.1.0.insert", i64 %"382_1.sroa.50.0.lcssa", 2, 1, 1
  %"124.fca.2.1.2.insert" = insertvalue [10 x { i1, { i1, i64, i1 } }] %"124.fca.2.1.1.insert", i1 %"382_1.sroa.55.0.lcssa", 2, 1, 2
  %"124.fca.3.0.insert" = insertvalue [10 x { i1, { i1, i64, i1 } }] %"124.fca.2.1.2.insert", i1 %"382_1.sroa.60.0.lcssa", 3, 0
  %"124.fca.3.1.0.insert" = insertvalue [10 x { i1, { i1, i64, i1 } }] %"124.fca.3.0.insert", i1 %"382_1.sroa.65.0.lcssa", 3, 1, 0
  %"124.fca.3.1.1.insert" = insertvalue [10 x { i1, { i1, i64, i1 } }] %"124.fca.3.1.0.insert", i64 %"382_1.sroa.70.0.lcssa", 3, 1, 1
  %"124.fca.3.1.2.insert" = insertvalue [10 x { i1, { i1, i64, i1 } }] %"124.fca.3.1.1.insert", i1 %"382_1.sroa.75.0.lcssa", 3, 1, 2
  %"124.fca.4.0.insert" = insertvalue [10 x { i1, { i1, i64, i1 } }] %"124.fca.3.1.2.insert", i1 %"382_1.sroa.80.0.lcssa", 4, 0
  %"124.fca.4.1.0.insert" = insertvalue [10 x { i1, { i1, i64, i1 } }] %"124.fca.4.0.insert", i1 %"382_1.sroa.85.0.lcssa", 4, 1, 0
  %"124.fca.4.1.1.insert" = insertvalue [10 x { i1, { i1, i64, i1 } }] %"124.fca.4.1.0.insert", i64 %"382_1.sroa.90.0.lcssa", 4, 1, 1
  %"124.fca.4.1.2.insert" = insertvalue [10 x { i1, { i1, i64, i1 } }] %"124.fca.4.1.1.insert", i1 %"382_1.sroa.95.0.lcssa", 4, 1, 2
  %"124.fca.5.0.insert" = insertvalue [10 x { i1, { i1, i64, i1 } }] %"124.fca.4.1.2.insert", i1 %"382_1.sroa.100.0.lcssa", 5, 0
  %"124.fca.5.1.0.insert" = insertvalue [10 x { i1, { i1, i64, i1 } }] %"124.fca.5.0.insert", i1 %"382_1.sroa.105.0.lcssa", 5, 1, 0
  %"124.fca.5.1.1.insert" = insertvalue [10 x { i1, { i1, i64, i1 } }] %"124.fca.5.1.0.insert", i64 %"382_1.sroa.110.0.lcssa", 5, 1, 1
  %"124.fca.5.1.2.insert" = insertvalue [10 x { i1, { i1, i64, i1 } }] %"124.fca.5.1.1.insert", i1 %"382_1.sroa.115.0.lcssa", 5, 1, 2
  %"124.fca.6.0.insert" = insertvalue [10 x { i1, { i1, i64, i1 } }] %"124.fca.5.1.2.insert", i1 %"382_1.sroa.120.0.lcssa", 6, 0
  %"124.fca.6.1.0.insert" = insertvalue [10 x { i1, { i1, i64, i1 } }] %"124.fca.6.0.insert", i1 %"382_1.sroa.125.0.lcssa", 6, 1, 0
  %"124.fca.6.1.1.insert" = insertvalue [10 x { i1, { i1, i64, i1 } }] %"124.fca.6.1.0.insert", i64 %"382_1.sroa.130.0.lcssa", 6, 1, 1
  %"124.fca.6.1.2.insert" = insertvalue [10 x { i1, { i1, i64, i1 } }] %"124.fca.6.1.1.insert", i1 %"382_1.sroa.135.0.lcssa", 6, 1, 2
  %"124.fca.7.0.insert" = insertvalue [10 x { i1, { i1, i64, i1 } }] %"124.fca.6.1.2.insert", i1 %"382_1.sroa.140.0.lcssa", 7, 0
  %"124.fca.7.1.0.insert" = insertvalue [10 x { i1, { i1, i64, i1 } }] %"124.fca.7.0.insert", i1 %"382_1.sroa.145.0.lcssa", 7, 1, 0
  %"124.fca.7.1.1.insert" = insertvalue [10 x { i1, { i1, i64, i1 } }] %"124.fca.7.1.0.insert", i64 %"382_1.sroa.150.0.lcssa", 7, 1, 1
  %"124.fca.7.1.2.insert" = insertvalue [10 x { i1, { i1, i64, i1 } }] %"124.fca.7.1.1.insert", i1 %"382_1.sroa.155.0.lcssa", 7, 1, 2
  %"124.fca.8.0.insert" = insertvalue [10 x { i1, { i1, i64, i1 } }] %"124.fca.7.1.2.insert", i1 %"382_1.sroa.160.0.lcssa", 8, 0
  %"124.fca.8.1.0.insert" = insertvalue [10 x { i1, { i1, i64, i1 } }] %"124.fca.8.0.insert", i1 %"382_1.sroa.165.0.lcssa", 8, 1, 0
  %"124.fca.8.1.1.insert" = insertvalue [10 x { i1, { i1, i64, i1 } }] %"124.fca.8.1.0.insert", i64 %"382_1.sroa.170.0.lcssa", 8, 1, 1
  %"124.fca.8.1.2.insert" = insertvalue [10 x { i1, { i1, i64, i1 } }] %"124.fca.8.1.1.insert", i1 %"382_1.sroa.175.0.lcssa", 8, 1, 2
  %"124.fca.9.0.insert" = insertvalue [10 x { i1, { i1, i64, i1 } }] %"124.fca.8.1.2.insert", i1 %"382_1.sroa.180.0.lcssa", 9, 0
  %"124.fca.9.1.0.insert" = insertvalue [10 x { i1, { i1, i64, i1 } }] %"124.fca.9.0.insert", i1 %"382_1.sroa.185.0.lcssa", 9, 1, 0
  %"124.fca.9.1.1.insert" = insertvalue [10 x { i1, { i1, i64, i1 } }] %"124.fca.9.1.0.insert", i64 %"382_1.sroa.190.0.lcssa", 9, 1, 1
  %"124.fca.9.1.2.insert" = insertvalue [10 x { i1, { i1, i64, i1 } }] %"124.fca.9.1.1.insert", i1 %"382_1.sroa.195.0.lcssa", 9, 1, 2
  ret [10 x { i1, { i1, i64, i1 } }] %"124.fca.9.1.2.insert"
}

define {} @__hugr__.const_fun_206.143({ i1, { i1, i64, i1 } } %0) local_unnamed_addr {
alloca_block:
  %.fca.0.extract13 = extractvalue { i1, { i1, i64, i1 } } %0, 0
  br i1 %.fca.0.extract13, label %cond_186_case_1, label %cond_exit_186

cond_186_case_1:                                  ; preds = %alloca_block
  %1 = extractvalue { i1, { i1, i64, i1 } } %0, 1
  %.fca.0.extract = extractvalue { i1, i64, i1 } %1, 0
  br i1 %.fca.0.extract, label %cond_164_case_1, label %cond_exit_186

cond_164_case_1:                                  ; preds = %cond_186_case_1
  %.fca.1.extract = extractvalue { i1, i64, i1 } %1, 1
  tail call void @___dec_future_refcount(i64 %.fca.1.extract)
  br label %cond_exit_186

cond_exit_186:                                    ; preds = %cond_186_case_1, %cond_164_case_1, %alloca_block
  ret {} zeroinitializer
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind readnone willreturn
define { i1, { i1, i64, i1 } } @"__hugr__.$array.__comprehension.init.6$$t(bool).359"() local_unnamed_addr #0 {
alloca_block:
  ret { i1, { i1, i64, i1 } } { i1 false, { i1, i64, i1 } poison }
}

declare void @___dec_future_refcount(i64) local_unnamed_addr

; Function Attrs: noreturn
declare void @panic(i32, i8*) local_unnamed_addr #1

; Function Attrs: mustprogress nofree norecurse nosync nounwind readnone willreturn
define { i64, [10 x { i1, i64 }] } @"__hugr__.$__iter__$$t(qubit)$n(10).367"([10 x { i1, i64 }] %0) local_unnamed_addr #0 {
alloca_block:
  %.fca.1.0.0.extract = extractvalue [10 x { i1, i64 }] %0, 0, 0
  %.fca.1.0.1.extract = extractvalue [10 x { i1, i64 }] %0, 0, 1
  %.fca.1.1.0.extract = extractvalue [10 x { i1, i64 }] %0, 1, 0
  %.fca.1.1.1.extract = extractvalue [10 x { i1, i64 }] %0, 1, 1
  %.fca.1.2.0.extract = extractvalue [10 x { i1, i64 }] %0, 2, 0
  %.fca.1.2.1.extract = extractvalue [10 x { i1, i64 }] %0, 2, 1
  %.fca.1.3.0.extract = extractvalue [10 x { i1, i64 }] %0, 3, 0
  %.fca.1.3.1.extract = extractvalue [10 x { i1, i64 }] %0, 3, 1
  %.fca.1.4.0.extract = extractvalue [10 x { i1, i64 }] %0, 4, 0
  %.fca.1.4.1.extract = extractvalue [10 x { i1, i64 }] %0, 4, 1
  %.fca.1.5.0.extract = extractvalue [10 x { i1, i64 }] %0, 5, 0
  %.fca.1.5.1.extract = extractvalue [10 x { i1, i64 }] %0, 5, 1
  %.fca.1.6.0.extract = extractvalue [10 x { i1, i64 }] %0, 6, 0
  %.fca.1.6.1.extract = extractvalue [10 x { i1, i64 }] %0, 6, 1
  %.fca.1.7.0.extract = extractvalue [10 x { i1, i64 }] %0, 7, 0
  %.fca.1.7.1.extract = extractvalue [10 x { i1, i64 }] %0, 7, 1
  %.fca.1.8.0.extract = extractvalue [10 x { i1, i64 }] %0, 8, 0
  %.fca.1.8.1.extract = extractvalue [10 x { i1, i64 }] %0, 8, 1
  %.fca.1.9.0.extract = extractvalue [10 x { i1, i64 }] %0, 9, 0
  %.fca.1.9.1.extract = extractvalue [10 x { i1, i64 }] %0, 9, 1
  %"376_07.fca.1.0.0.insert" = insertvalue { i64, [10 x { i1, i64 }] } { i64 0, [10 x { i1, i64 }] poison }, i1 %.fca.1.0.0.extract, 1, 0, 0
  %"376_07.fca.1.0.1.insert" = insertvalue { i64, [10 x { i1, i64 }] } %"376_07.fca.1.0.0.insert", i64 %.fca.1.0.1.extract, 1, 0, 1
  %"376_07.fca.1.1.0.insert" = insertvalue { i64, [10 x { i1, i64 }] } %"376_07.fca.1.0.1.insert", i1 %.fca.1.1.0.extract, 1, 1, 0
  %"376_07.fca.1.1.1.insert" = insertvalue { i64, [10 x { i1, i64 }] } %"376_07.fca.1.1.0.insert", i64 %.fca.1.1.1.extract, 1, 1, 1
  %"376_07.fca.1.2.0.insert" = insertvalue { i64, [10 x { i1, i64 }] } %"376_07.fca.1.1.1.insert", i1 %.fca.1.2.0.extract, 1, 2, 0
  %"376_07.fca.1.2.1.insert" = insertvalue { i64, [10 x { i1, i64 }] } %"376_07.fca.1.2.0.insert", i64 %.fca.1.2.1.extract, 1, 2, 1
  %"376_07.fca.1.3.0.insert" = insertvalue { i64, [10 x { i1, i64 }] } %"376_07.fca.1.2.1.insert", i1 %.fca.1.3.0.extract, 1, 3, 0
  %"376_07.fca.1.3.1.insert" = insertvalue { i64, [10 x { i1, i64 }] } %"376_07.fca.1.3.0.insert", i64 %.fca.1.3.1.extract, 1, 3, 1
  %"376_07.fca.1.4.0.insert" = insertvalue { i64, [10 x { i1, i64 }] } %"376_07.fca.1.3.1.insert", i1 %.fca.1.4.0.extract, 1, 4, 0
  %"376_07.fca.1.4.1.insert" = insertvalue { i64, [10 x { i1, i64 }] } %"376_07.fca.1.4.0.insert", i64 %.fca.1.4.1.extract, 1, 4, 1
  %"376_07.fca.1.5.0.insert" = insertvalue { i64, [10 x { i1, i64 }] } %"376_07.fca.1.4.1.insert", i1 %.fca.1.5.0.extract, 1, 5, 0
  %"376_07.fca.1.5.1.insert" = insertvalue { i64, [10 x { i1, i64 }] } %"376_07.fca.1.5.0.insert", i64 %.fca.1.5.1.extract, 1, 5, 1
  %"376_07.fca.1.6.0.insert" = insertvalue { i64, [10 x { i1, i64 }] } %"376_07.fca.1.5.1.insert", i1 %.fca.1.6.0.extract, 1, 6, 0
  %"376_07.fca.1.6.1.insert" = insertvalue { i64, [10 x { i1, i64 }] } %"376_07.fca.1.6.0.insert", i64 %.fca.1.6.1.extract, 1, 6, 1
  %"376_07.fca.1.7.0.insert" = insertvalue { i64, [10 x { i1, i64 }] } %"376_07.fca.1.6.1.insert", i1 %.fca.1.7.0.extract, 1, 7, 0
  %"376_07.fca.1.7.1.insert" = insertvalue { i64, [10 x { i1, i64 }] } %"376_07.fca.1.7.0.insert", i64 %.fca.1.7.1.extract, 1, 7, 1
  %"376_07.fca.1.8.0.insert" = insertvalue { i64, [10 x { i1, i64 }] } %"376_07.fca.1.7.1.insert", i1 %.fca.1.8.0.extract, 1, 8, 0
  %"376_07.fca.1.8.1.insert" = insertvalue { i64, [10 x { i1, i64 }] } %"376_07.fca.1.8.0.insert", i64 %.fca.1.8.1.extract, 1, 8, 1
  %"376_07.fca.1.9.0.insert" = insertvalue { i64, [10 x { i1, i64 }] } %"376_07.fca.1.8.1.insert", i1 %.fca.1.9.0.extract, 1, 9, 0
  %"376_07.fca.1.9.1.insert" = insertvalue { i64, [10 x { i1, i64 }] } %"376_07.fca.1.9.0.insert", i64 %.fca.1.9.1.extract, 1, 9, 1
  %"376_09.fca.1.0.0.insert" = insertvalue { i64, [10 x { i1, i64 }] } %"376_07.fca.1.9.1.insert", i1 %.fca.1.0.0.extract, 1, 0, 0
  %"376_09.fca.1.0.1.insert" = insertvalue { i64, [10 x { i1, i64 }] } %"376_09.fca.1.0.0.insert", i64 %.fca.1.0.1.extract, 1, 0, 1
  %"376_09.fca.1.1.0.insert" = insertvalue { i64, [10 x { i1, i64 }] } %"376_09.fca.1.0.1.insert", i1 %.fca.1.1.0.extract, 1, 1, 0
  %"376_09.fca.1.1.1.insert" = insertvalue { i64, [10 x { i1, i64 }] } %"376_09.fca.1.1.0.insert", i64 %.fca.1.1.1.extract, 1, 1, 1
  %"376_09.fca.1.2.0.insert" = insertvalue { i64, [10 x { i1, i64 }] } %"376_09.fca.1.1.1.insert", i1 %.fca.1.2.0.extract, 1, 2, 0
  %"376_09.fca.1.2.1.insert" = insertvalue { i64, [10 x { i1, i64 }] } %"376_09.fca.1.2.0.insert", i64 %.fca.1.2.1.extract, 1, 2, 1
  %"376_09.fca.1.3.0.insert" = insertvalue { i64, [10 x { i1, i64 }] } %"376_09.fca.1.2.1.insert", i1 %.fca.1.3.0.extract, 1, 3, 0
  %"376_09.fca.1.3.1.insert" = insertvalue { i64, [10 x { i1, i64 }] } %"376_09.fca.1.3.0.insert", i64 %.fca.1.3.1.extract, 1, 3, 1
  %"376_09.fca.1.4.0.insert" = insertvalue { i64, [10 x { i1, i64 }] } %"376_09.fca.1.3.1.insert", i1 %.fca.1.4.0.extract, 1, 4, 0
  %"376_09.fca.1.4.1.insert" = insertvalue { i64, [10 x { i1, i64 }] } %"376_09.fca.1.4.0.insert", i64 %.fca.1.4.1.extract, 1, 4, 1
  %"376_09.fca.1.5.0.insert" = insertvalue { i64, [10 x { i1, i64 }] } %"376_09.fca.1.4.1.insert", i1 %.fca.1.5.0.extract, 1, 5, 0
  %"376_09.fca.1.5.1.insert" = insertvalue { i64, [10 x { i1, i64 }] } %"376_09.fca.1.5.0.insert", i64 %.fca.1.5.1.extract, 1, 5, 1
  %"376_09.fca.1.6.0.insert" = insertvalue { i64, [10 x { i1, i64 }] } %"376_09.fca.1.5.1.insert", i1 %.fca.1.6.0.extract, 1, 6, 0
  %"376_09.fca.1.6.1.insert" = insertvalue { i64, [10 x { i1, i64 }] } %"376_09.fca.1.6.0.insert", i64 %.fca.1.6.1.extract, 1, 6, 1
  %"376_09.fca.1.7.0.insert" = insertvalue { i64, [10 x { i1, i64 }] } %"376_09.fca.1.6.1.insert", i1 %.fca.1.7.0.extract, 1, 7, 0
  %"376_09.fca.1.7.1.insert" = insertvalue { i64, [10 x { i1, i64 }] } %"376_09.fca.1.7.0.insert", i64 %.fca.1.7.1.extract, 1, 7, 1
  %"376_09.fca.1.8.0.insert" = insertvalue { i64, [10 x { i1, i64 }] } %"376_09.fca.1.7.1.insert", i1 %.fca.1.8.0.extract, 1, 8, 0
  %"376_09.fca.1.8.1.insert" = insertvalue { i64, [10 x { i1, i64 }] } %"376_09.fca.1.8.0.insert", i64 %.fca.1.8.1.extract, 1, 8, 1
  %"376_09.fca.1.9.0.insert" = insertvalue { i64, [10 x { i1, i64 }] } %"376_09.fca.1.8.1.insert", i1 %.fca.1.9.0.extract, 1, 9, 0
  %"376_09.fca.1.9.1.insert" = insertvalue { i64, [10 x { i1, i64 }] } %"376_09.fca.1.9.0.insert", i64 %.fca.1.9.1.extract, 1, 9, 1
  %"010.fca.1.0.0.insert" = insertvalue { i64, [10 x { i1, i64 }] } %"376_09.fca.1.9.1.insert", i1 %.fca.1.0.0.extract, 1, 0, 0
  %"010.fca.1.0.1.insert" = insertvalue { i64, [10 x { i1, i64 }] } %"010.fca.1.0.0.insert", i64 %.fca.1.0.1.extract, 1, 0, 1
  %"010.fca.1.1.0.insert" = insertvalue { i64, [10 x { i1, i64 }] } %"010.fca.1.0.1.insert", i1 %.fca.1.1.0.extract, 1, 1, 0
  %"010.fca.1.1.1.insert" = insertvalue { i64, [10 x { i1, i64 }] } %"010.fca.1.1.0.insert", i64 %.fca.1.1.1.extract, 1, 1, 1
  %"010.fca.1.2.0.insert" = insertvalue { i64, [10 x { i1, i64 }] } %"010.fca.1.1.1.insert", i1 %.fca.1.2.0.extract, 1, 2, 0
  %"010.fca.1.2.1.insert" = insertvalue { i64, [10 x { i1, i64 }] } %"010.fca.1.2.0.insert", i64 %.fca.1.2.1.extract, 1, 2, 1
  %"010.fca.1.3.0.insert" = insertvalue { i64, [10 x { i1, i64 }] } %"010.fca.1.2.1.insert", i1 %.fca.1.3.0.extract, 1, 3, 0
  %"010.fca.1.3.1.insert" = insertvalue { i64, [10 x { i1, i64 }] } %"010.fca.1.3.0.insert", i64 %.fca.1.3.1.extract, 1, 3, 1
  %"010.fca.1.4.0.insert" = insertvalue { i64, [10 x { i1, i64 }] } %"010.fca.1.3.1.insert", i1 %.fca.1.4.0.extract, 1, 4, 0
  %"010.fca.1.4.1.insert" = insertvalue { i64, [10 x { i1, i64 }] } %"010.fca.1.4.0.insert", i64 %.fca.1.4.1.extract, 1, 4, 1
  %"010.fca.1.5.0.insert" = insertvalue { i64, [10 x { i1, i64 }] } %"010.fca.1.4.1.insert", i1 %.fca.1.5.0.extract, 1, 5, 0
  %"010.fca.1.5.1.insert" = insertvalue { i64, [10 x { i1, i64 }] } %"010.fca.1.5.0.insert", i64 %.fca.1.5.1.extract, 1, 5, 1
  %"010.fca.1.6.0.insert" = insertvalue { i64, [10 x { i1, i64 }] } %"010.fca.1.5.1.insert", i1 %.fca.1.6.0.extract, 1, 6, 0
  %"010.fca.1.6.1.insert" = insertvalue { i64, [10 x { i1, i64 }] } %"010.fca.1.6.0.insert", i64 %.fca.1.6.1.extract, 1, 6, 1
  %"010.fca.1.7.0.insert" = insertvalue { i64, [10 x { i1, i64 }] } %"010.fca.1.6.1.insert", i1 %.fca.1.7.0.extract, 1, 7, 0
  %"010.fca.1.7.1.insert" = insertvalue { i64, [10 x { i1, i64 }] } %"010.fca.1.7.0.insert", i64 %.fca.1.7.1.extract, 1, 7, 1
  %"010.fca.1.8.0.insert" = insertvalue { i64, [10 x { i1, i64 }] } %"010.fca.1.7.1.insert", i1 %.fca.1.8.0.extract, 1, 8, 0
  %"010.fca.1.8.1.insert" = insertvalue { i64, [10 x { i1, i64 }] } %"010.fca.1.8.0.insert", i64 %.fca.1.8.1.extract, 1, 8, 1
  %"010.fca.1.9.0.insert" = insertvalue { i64, [10 x { i1, i64 }] } %"010.fca.1.8.1.insert", i1 %.fca.1.9.0.extract, 1, 9, 0
  %"010.fca.1.9.1.insert" = insertvalue { i64, [10 x { i1, i64 }] } %"010.fca.1.9.0.insert", i64 %.fca.1.9.1.extract, 1, 9, 1
  %"370_011.fca.1.0.0.insert" = insertvalue { i64, [10 x { i1, i64 }] } %"010.fca.1.9.1.insert", i1 %.fca.1.0.0.extract, 1, 0, 0
  %"370_011.fca.1.0.1.insert" = insertvalue { i64, [10 x { i1, i64 }] } %"370_011.fca.1.0.0.insert", i64 %.fca.1.0.1.extract, 1, 0, 1
  %"370_011.fca.1.1.0.insert" = insertvalue { i64, [10 x { i1, i64 }] } %"370_011.fca.1.0.1.insert", i1 %.fca.1.1.0.extract, 1, 1, 0
  %"370_011.fca.1.1.1.insert" = insertvalue { i64, [10 x { i1, i64 }] } %"370_011.fca.1.1.0.insert", i64 %.fca.1.1.1.extract, 1, 1, 1
  %"370_011.fca.1.2.0.insert" = insertvalue { i64, [10 x { i1, i64 }] } %"370_011.fca.1.1.1.insert", i1 %.fca.1.2.0.extract, 1, 2, 0
  %"370_011.fca.1.2.1.insert" = insertvalue { i64, [10 x { i1, i64 }] } %"370_011.fca.1.2.0.insert", i64 %.fca.1.2.1.extract, 1, 2, 1
  %"370_011.fca.1.3.0.insert" = insertvalue { i64, [10 x { i1, i64 }] } %"370_011.fca.1.2.1.insert", i1 %.fca.1.3.0.extract, 1, 3, 0
  %"370_011.fca.1.3.1.insert" = insertvalue { i64, [10 x { i1, i64 }] } %"370_011.fca.1.3.0.insert", i64 %.fca.1.3.1.extract, 1, 3, 1
  %"370_011.fca.1.4.0.insert" = insertvalue { i64, [10 x { i1, i64 }] } %"370_011.fca.1.3.1.insert", i1 %.fca.1.4.0.extract, 1, 4, 0
  %"370_011.fca.1.4.1.insert" = insertvalue { i64, [10 x { i1, i64 }] } %"370_011.fca.1.4.0.insert", i64 %.fca.1.4.1.extract, 1, 4, 1
  %"370_011.fca.1.5.0.insert" = insertvalue { i64, [10 x { i1, i64 }] } %"370_011.fca.1.4.1.insert", i1 %.fca.1.5.0.extract, 1, 5, 0
  %"370_011.fca.1.5.1.insert" = insertvalue { i64, [10 x { i1, i64 }] } %"370_011.fca.1.5.0.insert", i64 %.fca.1.5.1.extract, 1, 5, 1
  %"370_011.fca.1.6.0.insert" = insertvalue { i64, [10 x { i1, i64 }] } %"370_011.fca.1.5.1.insert", i1 %.fca.1.6.0.extract, 1, 6, 0
  %"370_011.fca.1.6.1.insert" = insertvalue { i64, [10 x { i1, i64 }] } %"370_011.fca.1.6.0.insert", i64 %.fca.1.6.1.extract, 1, 6, 1
  %"370_011.fca.1.7.0.insert" = insertvalue { i64, [10 x { i1, i64 }] } %"370_011.fca.1.6.1.insert", i1 %.fca.1.7.0.extract, 1, 7, 0
  %"370_011.fca.1.7.1.insert" = insertvalue { i64, [10 x { i1, i64 }] } %"370_011.fca.1.7.0.insert", i64 %.fca.1.7.1.extract, 1, 7, 1
  %"370_011.fca.1.8.0.insert" = insertvalue { i64, [10 x { i1, i64 }] } %"370_011.fca.1.7.1.insert", i1 %.fca.1.8.0.extract, 1, 8, 0
  %"370_011.fca.1.8.1.insert" = insertvalue { i64, [10 x { i1, i64 }] } %"370_011.fca.1.8.0.insert", i64 %.fca.1.8.1.extract, 1, 8, 1
  %"370_011.fca.1.9.0.insert" = insertvalue { i64, [10 x { i1, i64 }] } %"370_011.fca.1.8.1.insert", i1 %.fca.1.9.0.extract, 1, 9, 0
  %"370_011.fca.1.9.1.insert" = insertvalue { i64, [10 x { i1, i64 }] } %"370_011.fca.1.9.0.insert", i64 %.fca.1.9.1.extract, 1, 9, 1
  %"012.fca.1.0.0.insert" = insertvalue { i64, [10 x { i1, i64 }] } %"370_011.fca.1.9.1.insert", i1 %.fca.1.0.0.extract, 1, 0, 0
  %"012.fca.1.0.1.insert" = insertvalue { i64, [10 x { i1, i64 }] } %"012.fca.1.0.0.insert", i64 %.fca.1.0.1.extract, 1, 0, 1
  %"012.fca.1.1.0.insert" = insertvalue { i64, [10 x { i1, i64 }] } %"012.fca.1.0.1.insert", i1 %.fca.1.1.0.extract, 1, 1, 0
  %"012.fca.1.1.1.insert" = insertvalue { i64, [10 x { i1, i64 }] } %"012.fca.1.1.0.insert", i64 %.fca.1.1.1.extract, 1, 1, 1
  %"012.fca.1.2.0.insert" = insertvalue { i64, [10 x { i1, i64 }] } %"012.fca.1.1.1.insert", i1 %.fca.1.2.0.extract, 1, 2, 0
  %"012.fca.1.2.1.insert" = insertvalue { i64, [10 x { i1, i64 }] } %"012.fca.1.2.0.insert", i64 %.fca.1.2.1.extract, 1, 2, 1
  %"012.fca.1.3.0.insert" = insertvalue { i64, [10 x { i1, i64 }] } %"012.fca.1.2.1.insert", i1 %.fca.1.3.0.extract, 1, 3, 0
  %"012.fca.1.3.1.insert" = insertvalue { i64, [10 x { i1, i64 }] } %"012.fca.1.3.0.insert", i64 %.fca.1.3.1.extract, 1, 3, 1
  %"012.fca.1.4.0.insert" = insertvalue { i64, [10 x { i1, i64 }] } %"012.fca.1.3.1.insert", i1 %.fca.1.4.0.extract, 1, 4, 0
  %"012.fca.1.4.1.insert" = insertvalue { i64, [10 x { i1, i64 }] } %"012.fca.1.4.0.insert", i64 %.fca.1.4.1.extract, 1, 4, 1
  %"012.fca.1.5.0.insert" = insertvalue { i64, [10 x { i1, i64 }] } %"012.fca.1.4.1.insert", i1 %.fca.1.5.0.extract, 1, 5, 0
  %"012.fca.1.5.1.insert" = insertvalue { i64, [10 x { i1, i64 }] } %"012.fca.1.5.0.insert", i64 %.fca.1.5.1.extract, 1, 5, 1
  %"012.fca.1.6.0.insert" = insertvalue { i64, [10 x { i1, i64 }] } %"012.fca.1.5.1.insert", i1 %.fca.1.6.0.extract, 1, 6, 0
  %"012.fca.1.6.1.insert" = insertvalue { i64, [10 x { i1, i64 }] } %"012.fca.1.6.0.insert", i64 %.fca.1.6.1.extract, 1, 6, 1
  %"012.fca.1.7.0.insert" = insertvalue { i64, [10 x { i1, i64 }] } %"012.fca.1.6.1.insert", i1 %.fca.1.7.0.extract, 1, 7, 0
  %"012.fca.1.7.1.insert" = insertvalue { i64, [10 x { i1, i64 }] } %"012.fca.1.7.0.insert", i64 %.fca.1.7.1.extract, 1, 7, 1
  %"012.fca.1.8.0.insert" = insertvalue { i64, [10 x { i1, i64 }] } %"012.fca.1.7.1.insert", i1 %.fca.1.8.0.extract, 1, 8, 0
  %"012.fca.1.8.1.insert" = insertvalue { i64, [10 x { i1, i64 }] } %"012.fca.1.8.0.insert", i64 %.fca.1.8.1.extract, 1, 8, 1
  %"012.fca.1.9.0.insert" = insertvalue { i64, [10 x { i1, i64 }] } %"012.fca.1.8.1.insert", i1 %.fca.1.9.0.extract, 1, 9, 0
  %"012.fca.1.9.1.insert" = insertvalue { i64, [10 x { i1, i64 }] } %"012.fca.1.9.0.insert", i64 %.fca.1.9.1.extract, 1, 9, 1
  ret { i64, [10 x { i1, i64 }] } %"012.fca.1.9.1.insert"
}

define { i1, { { i64, [10 x { i1, i64 }] }, i64 } } @"__hugr__.$__next__$$t(qubit)$n(10).387"({ i64, [10 x { i1, i64 }] } %0) local_unnamed_addr {
alloca_block:
  %.fca.0.extract217 = extractvalue { i64, [10 x { i1, i64 }] } %0, 0
  %1 = extractvalue { i64, [10 x { i1, i64 }] } %0, 1
  %2 = icmp slt i64 %.fca.0.extract217, 10
  br i1 %2, label %6, label %"__hugr__.$ArrayIter._assert_all_used.helper.5$$t(qubit).417.exit"

.loopexit:                                        ; preds = %"__hugr__.$ArrayIter._assert_all_used.helper.5$$t(qubit).417.exit.9", %6
  %"02.sroa.3.0" = phi i64 [ %7, %6 ], [ poison, %"__hugr__.$ArrayIter._assert_all_used.helper.5$$t(qubit).417.exit.9" ]
  %"02.sroa.6.0" = phi i1 [ %.fca.1.0.0.extract74, %6 ], [ poison, %"__hugr__.$ArrayIter._assert_all_used.helper.5$$t(qubit).417.exit.9" ]
  %"02.sroa.9.0" = phi i64 [ %.fca.1.0.1.extract75, %6 ], [ poison, %"__hugr__.$ArrayIter._assert_all_used.helper.5$$t(qubit).417.exit.9" ]
  %"02.sroa.12.0" = phi i1 [ %.fca.1.1.0.extract76, %6 ], [ poison, %"__hugr__.$ArrayIter._assert_all_used.helper.5$$t(qubit).417.exit.9" ]
  %"02.sroa.15.0" = phi i64 [ %.fca.1.1.1.extract77, %6 ], [ poison, %"__hugr__.$ArrayIter._assert_all_used.helper.5$$t(qubit).417.exit.9" ]
  %"02.sroa.18.0" = phi i1 [ %.fca.1.2.0.extract78, %6 ], [ poison, %"__hugr__.$ArrayIter._assert_all_used.helper.5$$t(qubit).417.exit.9" ]
  %"02.sroa.21.0" = phi i64 [ %.fca.1.2.1.extract79, %6 ], [ poison, %"__hugr__.$ArrayIter._assert_all_used.helper.5$$t(qubit).417.exit.9" ]
  %"02.sroa.24.0" = phi i1 [ %.fca.1.3.0.extract80, %6 ], [ poison, %"__hugr__.$ArrayIter._assert_all_used.helper.5$$t(qubit).417.exit.9" ]
  %"02.sroa.27.0" = phi i64 [ %.fca.1.3.1.extract81, %6 ], [ poison, %"__hugr__.$ArrayIter._assert_all_used.helper.5$$t(qubit).417.exit.9" ]
  %"02.sroa.30.0" = phi i1 [ %.fca.1.4.0.extract82, %6 ], [ poison, %"__hugr__.$ArrayIter._assert_all_used.helper.5$$t(qubit).417.exit.9" ]
  %"02.sroa.33.0" = phi i64 [ %.fca.1.4.1.extract83, %6 ], [ poison, %"__hugr__.$ArrayIter._assert_all_used.helper.5$$t(qubit).417.exit.9" ]
  %"02.sroa.36.0" = phi i1 [ %.fca.1.5.0.extract84, %6 ], [ poison, %"__hugr__.$ArrayIter._assert_all_used.helper.5$$t(qubit).417.exit.9" ]
  %"02.sroa.39.0" = phi i64 [ %.fca.1.5.1.extract85, %6 ], [ poison, %"__hugr__.$ArrayIter._assert_all_used.helper.5$$t(qubit).417.exit.9" ]
  %"02.sroa.42.0" = phi i1 [ %.fca.1.6.0.extract86, %6 ], [ poison, %"__hugr__.$ArrayIter._assert_all_used.helper.5$$t(qubit).417.exit.9" ]
  %"02.sroa.45.0" = phi i64 [ %.fca.1.6.1.extract87, %6 ], [ poison, %"__hugr__.$ArrayIter._assert_all_used.helper.5$$t(qubit).417.exit.9" ]
  %"02.sroa.48.0" = phi i1 [ %.fca.1.7.0.extract88, %6 ], [ poison, %"__hugr__.$ArrayIter._assert_all_used.helper.5$$t(qubit).417.exit.9" ]
  %"02.sroa.51.0" = phi i64 [ %.fca.1.7.1.extract89, %6 ], [ poison, %"__hugr__.$ArrayIter._assert_all_used.helper.5$$t(qubit).417.exit.9" ]
  %"02.sroa.54.0" = phi i1 [ %.fca.1.8.0.extract90, %6 ], [ poison, %"__hugr__.$ArrayIter._assert_all_used.helper.5$$t(qubit).417.exit.9" ]
  %"02.sroa.57.0" = phi i64 [ %.fca.1.8.1.extract91, %6 ], [ poison, %"__hugr__.$ArrayIter._assert_all_used.helper.5$$t(qubit).417.exit.9" ]
  %"02.sroa.60.0" = phi i1 [ %.fca.1.9.0.extract92, %6 ], [ poison, %"__hugr__.$ArrayIter._assert_all_used.helper.5$$t(qubit).417.exit.9" ]
  %"02.sroa.63.0" = phi i64 [ %.fca.1.9.1.extract93, %6 ], [ poison, %"__hugr__.$ArrayIter._assert_all_used.helper.5$$t(qubit).417.exit.9" ]
  %"02.sroa.66.0" = phi i64 [ %9, %6 ], [ poison, %"__hugr__.$ArrayIter._assert_all_used.helper.5$$t(qubit).417.exit.9" ]
  %"029.fca.0.insert" = insertvalue { i1, { { i64, [10 x { i1, i64 }] }, i64 } } poison, i1 %2, 0
  %"029.fca.1.0.0.insert" = insertvalue { i1, { { i64, [10 x { i1, i64 }] }, i64 } } %"029.fca.0.insert", i64 %"02.sroa.3.0", 1, 0, 0
  %"029.fca.1.0.1.0.0.insert" = insertvalue { i1, { { i64, [10 x { i1, i64 }] }, i64 } } %"029.fca.1.0.0.insert", i1 %"02.sroa.6.0", 1, 0, 1, 0, 0
  %"029.fca.1.0.1.0.1.insert" = insertvalue { i1, { { i64, [10 x { i1, i64 }] }, i64 } } %"029.fca.1.0.1.0.0.insert", i64 %"02.sroa.9.0", 1, 0, 1, 0, 1
  %"029.fca.1.0.1.1.0.insert" = insertvalue { i1, { { i64, [10 x { i1, i64 }] }, i64 } } %"029.fca.1.0.1.0.1.insert", i1 %"02.sroa.12.0", 1, 0, 1, 1, 0
  %"029.fca.1.0.1.1.1.insert" = insertvalue { i1, { { i64, [10 x { i1, i64 }] }, i64 } } %"029.fca.1.0.1.1.0.insert", i64 %"02.sroa.15.0", 1, 0, 1, 1, 1
  %"029.fca.1.0.1.2.0.insert" = insertvalue { i1, { { i64, [10 x { i1, i64 }] }, i64 } } %"029.fca.1.0.1.1.1.insert", i1 %"02.sroa.18.0", 1, 0, 1, 2, 0
  %"029.fca.1.0.1.2.1.insert" = insertvalue { i1, { { i64, [10 x { i1, i64 }] }, i64 } } %"029.fca.1.0.1.2.0.insert", i64 %"02.sroa.21.0", 1, 0, 1, 2, 1
  %"029.fca.1.0.1.3.0.insert" = insertvalue { i1, { { i64, [10 x { i1, i64 }] }, i64 } } %"029.fca.1.0.1.2.1.insert", i1 %"02.sroa.24.0", 1, 0, 1, 3, 0
  %"029.fca.1.0.1.3.1.insert" = insertvalue { i1, { { i64, [10 x { i1, i64 }] }, i64 } } %"029.fca.1.0.1.3.0.insert", i64 %"02.sroa.27.0", 1, 0, 1, 3, 1
  %"029.fca.1.0.1.4.0.insert" = insertvalue { i1, { { i64, [10 x { i1, i64 }] }, i64 } } %"029.fca.1.0.1.3.1.insert", i1 %"02.sroa.30.0", 1, 0, 1, 4, 0
  %"029.fca.1.0.1.4.1.insert" = insertvalue { i1, { { i64, [10 x { i1, i64 }] }, i64 } } %"029.fca.1.0.1.4.0.insert", i64 %"02.sroa.33.0", 1, 0, 1, 4, 1
  %"029.fca.1.0.1.5.0.insert" = insertvalue { i1, { { i64, [10 x { i1, i64 }] }, i64 } } %"029.fca.1.0.1.4.1.insert", i1 %"02.sroa.36.0", 1, 0, 1, 5, 0
  %"029.fca.1.0.1.5.1.insert" = insertvalue { i1, { { i64, [10 x { i1, i64 }] }, i64 } } %"029.fca.1.0.1.5.0.insert", i64 %"02.sroa.39.0", 1, 0, 1, 5, 1
  %"029.fca.1.0.1.6.0.insert" = insertvalue { i1, { { i64, [10 x { i1, i64 }] }, i64 } } %"029.fca.1.0.1.5.1.insert", i1 %"02.sroa.42.0", 1, 0, 1, 6, 0
  %"029.fca.1.0.1.6.1.insert" = insertvalue { i1, { { i64, [10 x { i1, i64 }] }, i64 } } %"029.fca.1.0.1.6.0.insert", i64 %"02.sroa.45.0", 1, 0, 1, 6, 1
  %"029.fca.1.0.1.7.0.insert" = insertvalue { i1, { { i64, [10 x { i1, i64 }] }, i64 } } %"029.fca.1.0.1.6.1.insert", i1 %"02.sroa.48.0", 1, 0, 1, 7, 0
  %"029.fca.1.0.1.7.1.insert" = insertvalue { i1, { { i64, [10 x { i1, i64 }] }, i64 } } %"029.fca.1.0.1.7.0.insert", i64 %"02.sroa.51.0", 1, 0, 1, 7, 1
  %"029.fca.1.0.1.8.0.insert" = insertvalue { i1, { { i64, [10 x { i1, i64 }] }, i64 } } %"029.fca.1.0.1.7.1.insert", i1 %"02.sroa.54.0", 1, 0, 1, 8, 0
  %"029.fca.1.0.1.8.1.insert" = insertvalue { i1, { { i64, [10 x { i1, i64 }] }, i64 } } %"029.fca.1.0.1.8.0.insert", i64 %"02.sroa.57.0", 1, 0, 1, 8, 1
  %"029.fca.1.0.1.9.0.insert" = insertvalue { i1, { { i64, [10 x { i1, i64 }] }, i64 } } %"029.fca.1.0.1.8.1.insert", i1 %"02.sroa.60.0", 1, 0, 1, 9, 0
  %"029.fca.1.0.1.9.1.insert" = insertvalue { i1, { { i64, [10 x { i1, i64 }] }, i64 } } %"029.fca.1.0.1.9.0.insert", i64 %"02.sroa.63.0", 1, 0, 1, 9, 1
  %"029.fca.1.1.insert" = insertvalue { i1, { { i64, [10 x { i1, i64 }] }, i64 } } %"029.fca.1.0.1.9.1.insert", i64 %"02.sroa.66.0", 1, 1
  ret { i1, { { i64, [10 x { i1, i64 }] }, i64 } } %"029.fca.1.1.insert"

"__hugr__.$ArrayIter._assert_all_used.helper.5$$t(qubit).417.exit": ; preds = %alloca_block
  %3 = alloca [10 x { i1, i64 }], align 8
  %.repack = getelementptr inbounds [10 x { i1, i64 }], [10 x { i1, i64 }]* %3, i64 0, i64 0
  %.elt = extractvalue [10 x { i1, i64 }] %1, 0
  store { i1, i64 } %.elt, { i1, i64 }* %.repack, align 8
  %.repack238 = getelementptr inbounds [10 x { i1, i64 }], [10 x { i1, i64 }]* %3, i64 0, i64 1
  %.elt239 = extractvalue [10 x { i1, i64 }] %1, 1
  store { i1, i64 } %.elt239, { i1, i64 }* %.repack238, align 8
  %.repack240 = getelementptr inbounds [10 x { i1, i64 }], [10 x { i1, i64 }]* %3, i64 0, i64 2
  %.elt241 = extractvalue [10 x { i1, i64 }] %1, 2
  store { i1, i64 } %.elt241, { i1, i64 }* %.repack240, align 8
  %.repack242 = getelementptr inbounds [10 x { i1, i64 }], [10 x { i1, i64 }]* %3, i64 0, i64 3
  %.elt243 = extractvalue [10 x { i1, i64 }] %1, 3
  store { i1, i64 } %.elt243, { i1, i64 }* %.repack242, align 8
  %.repack244 = getelementptr inbounds [10 x { i1, i64 }], [10 x { i1, i64 }]* %3, i64 0, i64 4
  %.elt245 = extractvalue [10 x { i1, i64 }] %1, 4
  store { i1, i64 } %.elt245, { i1, i64 }* %.repack244, align 8
  %.repack246 = getelementptr inbounds [10 x { i1, i64 }], [10 x { i1, i64 }]* %3, i64 0, i64 5
  %.elt247 = extractvalue [10 x { i1, i64 }] %1, 5
  store { i1, i64 } %.elt247, { i1, i64 }* %.repack246, align 8
  %.repack248 = getelementptr inbounds [10 x { i1, i64 }], [10 x { i1, i64 }]* %3, i64 0, i64 6
  %.elt249 = extractvalue [10 x { i1, i64 }] %1, 6
  store { i1, i64 } %.elt249, { i1, i64 }* %.repack248, align 8
  %.repack250 = getelementptr inbounds [10 x { i1, i64 }], [10 x { i1, i64 }]* %3, i64 0, i64 7
  %.elt251 = extractvalue [10 x { i1, i64 }] %1, 7
  store { i1, i64 } %.elt251, { i1, i64 }* %.repack250, align 8
  %.repack252 = getelementptr inbounds [10 x { i1, i64 }], [10 x { i1, i64 }]* %3, i64 0, i64 8
  %.elt253 = extractvalue [10 x { i1, i64 }] %1, 8
  store { i1, i64 } %.elt253, { i1, i64 }* %.repack252, align 8
  %.repack254 = getelementptr inbounds [10 x { i1, i64 }], [10 x { i1, i64 }]* %3, i64 0, i64 9
  %.elt255 = extractvalue [10 x { i1, i64 }] %1, 9
  store { i1, i64 } %.elt255, { i1, i64 }* %.repack254, align 8
  %4 = getelementptr inbounds [10 x { i1, i64 }], [10 x { i1, i64 }]* %3, i64 0, i64 0, i32 0
  %5 = load i1, i1* %4, align 8
  br i1 %5, label %cond_420_case_1.i, label %"__hugr__.$ArrayIter._assert_all_used.helper.5$$t(qubit).417.exit.1"

6:                                                ; preds = %alloca_block
  %7 = add nsw i64 %.fca.0.extract217, 1
  %8 = tail call { i64, [10 x { i1, i64 }] } @"__hugr__.$array.__getitem__.linear.2$$t(qubit)$n(10).323"([10 x { i1, i64 }] %1, i64 %.fca.0.extract217)
  %9 = extractvalue { i64, [10 x { i1, i64 }] } %8, 0
  %.fca.1.0.0.extract74 = extractvalue { i64, [10 x { i1, i64 }] } %8, 1, 0, 0
  %.fca.1.0.1.extract75 = extractvalue { i64, [10 x { i1, i64 }] } %8, 1, 0, 1
  %.fca.1.1.0.extract76 = extractvalue { i64, [10 x { i1, i64 }] } %8, 1, 1, 0
  %.fca.1.1.1.extract77 = extractvalue { i64, [10 x { i1, i64 }] } %8, 1, 1, 1
  %.fca.1.2.0.extract78 = extractvalue { i64, [10 x { i1, i64 }] } %8, 1, 2, 0
  %.fca.1.2.1.extract79 = extractvalue { i64, [10 x { i1, i64 }] } %8, 1, 2, 1
  %.fca.1.3.0.extract80 = extractvalue { i64, [10 x { i1, i64 }] } %8, 1, 3, 0
  %.fca.1.3.1.extract81 = extractvalue { i64, [10 x { i1, i64 }] } %8, 1, 3, 1
  %.fca.1.4.0.extract82 = extractvalue { i64, [10 x { i1, i64 }] } %8, 1, 4, 0
  %.fca.1.4.1.extract83 = extractvalue { i64, [10 x { i1, i64 }] } %8, 1, 4, 1
  %.fca.1.5.0.extract84 = extractvalue { i64, [10 x { i1, i64 }] } %8, 1, 5, 0
  %.fca.1.5.1.extract85 = extractvalue { i64, [10 x { i1, i64 }] } %8, 1, 5, 1
  %.fca.1.6.0.extract86 = extractvalue { i64, [10 x { i1, i64 }] } %8, 1, 6, 0
  %.fca.1.6.1.extract87 = extractvalue { i64, [10 x { i1, i64 }] } %8, 1, 6, 1
  %.fca.1.7.0.extract88 = extractvalue { i64, [10 x { i1, i64 }] } %8, 1, 7, 0
  %.fca.1.7.1.extract89 = extractvalue { i64, [10 x { i1, i64 }] } %8, 1, 7, 1
  %.fca.1.8.0.extract90 = extractvalue { i64, [10 x { i1, i64 }] } %8, 1, 8, 0
  %.fca.1.8.1.extract91 = extractvalue { i64, [10 x { i1, i64 }] } %8, 1, 8, 1
  %.fca.1.9.0.extract92 = extractvalue { i64, [10 x { i1, i64 }] } %8, 1, 9, 0
  %.fca.1.9.1.extract93 = extractvalue { i64, [10 x { i1, i64 }] } %8, 1, 9, 1
  br label %.loopexit

"__hugr__.$ArrayIter._assert_all_used.helper.5$$t(qubit).417.exit.1": ; preds = %"__hugr__.$ArrayIter._assert_all_used.helper.5$$t(qubit).417.exit"
  %10 = getelementptr inbounds [10 x { i1, i64 }], [10 x { i1, i64 }]* %3, i64 0, i64 1, i32 0
  %11 = load i1, i1* %10, align 8
  br i1 %11, label %cond_420_case_1.i, label %"__hugr__.$ArrayIter._assert_all_used.helper.5$$t(qubit).417.exit.2"

"__hugr__.$ArrayIter._assert_all_used.helper.5$$t(qubit).417.exit.2": ; preds = %"__hugr__.$ArrayIter._assert_all_used.helper.5$$t(qubit).417.exit.1"
  %12 = getelementptr inbounds [10 x { i1, i64 }], [10 x { i1, i64 }]* %3, i64 0, i64 2, i32 0
  %13 = load i1, i1* %12, align 8
  br i1 %13, label %cond_420_case_1.i, label %"__hugr__.$ArrayIter._assert_all_used.helper.5$$t(qubit).417.exit.3"

"__hugr__.$ArrayIter._assert_all_used.helper.5$$t(qubit).417.exit.3": ; preds = %"__hugr__.$ArrayIter._assert_all_used.helper.5$$t(qubit).417.exit.2"
  %14 = getelementptr inbounds [10 x { i1, i64 }], [10 x { i1, i64 }]* %3, i64 0, i64 3, i32 0
  %15 = load i1, i1* %14, align 8
  br i1 %15, label %cond_420_case_1.i, label %"__hugr__.$ArrayIter._assert_all_used.helper.5$$t(qubit).417.exit.4"

"__hugr__.$ArrayIter._assert_all_used.helper.5$$t(qubit).417.exit.4": ; preds = %"__hugr__.$ArrayIter._assert_all_used.helper.5$$t(qubit).417.exit.3"
  %16 = getelementptr inbounds [10 x { i1, i64 }], [10 x { i1, i64 }]* %3, i64 0, i64 4, i32 0
  %17 = load i1, i1* %16, align 8
  br i1 %17, label %cond_420_case_1.i, label %"__hugr__.$ArrayIter._assert_all_used.helper.5$$t(qubit).417.exit.5"

"__hugr__.$ArrayIter._assert_all_used.helper.5$$t(qubit).417.exit.5": ; preds = %"__hugr__.$ArrayIter._assert_all_used.helper.5$$t(qubit).417.exit.4"
  %18 = getelementptr inbounds [10 x { i1, i64 }], [10 x { i1, i64 }]* %3, i64 0, i64 5, i32 0
  %19 = load i1, i1* %18, align 8
  br i1 %19, label %cond_420_case_1.i, label %"__hugr__.$ArrayIter._assert_all_used.helper.5$$t(qubit).417.exit.6"

"__hugr__.$ArrayIter._assert_all_used.helper.5$$t(qubit).417.exit.6": ; preds = %"__hugr__.$ArrayIter._assert_all_used.helper.5$$t(qubit).417.exit.5"
  %20 = getelementptr inbounds [10 x { i1, i64 }], [10 x { i1, i64 }]* %3, i64 0, i64 6, i32 0
  %21 = load i1, i1* %20, align 8
  br i1 %21, label %cond_420_case_1.i, label %"__hugr__.$ArrayIter._assert_all_used.helper.5$$t(qubit).417.exit.7"

"__hugr__.$ArrayIter._assert_all_used.helper.5$$t(qubit).417.exit.7": ; preds = %"__hugr__.$ArrayIter._assert_all_used.helper.5$$t(qubit).417.exit.6"
  %22 = getelementptr inbounds [10 x { i1, i64 }], [10 x { i1, i64 }]* %3, i64 0, i64 7, i32 0
  %23 = load i1, i1* %22, align 8
  br i1 %23, label %cond_420_case_1.i, label %"__hugr__.$ArrayIter._assert_all_used.helper.5$$t(qubit).417.exit.8"

"__hugr__.$ArrayIter._assert_all_used.helper.5$$t(qubit).417.exit.8": ; preds = %"__hugr__.$ArrayIter._assert_all_used.helper.5$$t(qubit).417.exit.7"
  %24 = getelementptr inbounds [10 x { i1, i64 }], [10 x { i1, i64 }]* %3, i64 0, i64 8, i32 0
  %25 = load i1, i1* %24, align 8
  br i1 %25, label %cond_420_case_1.i, label %"__hugr__.$ArrayIter._assert_all_used.helper.5$$t(qubit).417.exit.9"

"__hugr__.$ArrayIter._assert_all_used.helper.5$$t(qubit).417.exit.9": ; preds = %"__hugr__.$ArrayIter._assert_all_used.helper.5$$t(qubit).417.exit.8"
  %26 = getelementptr inbounds [10 x { i1, i64 }], [10 x { i1, i64 }]* %3, i64 0, i64 9, i32 0
  %27 = load i1, i1* %26, align 8
  br i1 %27, label %cond_420_case_1.i, label %.loopexit

cond_420_case_1.i:                                ; preds = %"__hugr__.$ArrayIter._assert_all_used.helper.5$$t(qubit).417.exit.9", %"__hugr__.$ArrayIter._assert_all_used.helper.5$$t(qubit).417.exit.8", %"__hugr__.$ArrayIter._assert_all_used.helper.5$$t(qubit).417.exit.7", %"__hugr__.$ArrayIter._assert_all_used.helper.5$$t(qubit).417.exit.6", %"__hugr__.$ArrayIter._assert_all_used.helper.5$$t(qubit).417.exit.5", %"__hugr__.$ArrayIter._assert_all_used.helper.5$$t(qubit).417.exit.4", %"__hugr__.$ArrayIter._assert_all_used.helper.5$$t(qubit).417.exit.3", %"__hugr__.$ArrayIter._assert_all_used.helper.5$$t(qubit).417.exit.2", %"__hugr__.$ArrayIter._assert_all_used.helper.5$$t(qubit).417.exit.1", %"__hugr__.$ArrayIter._assert_all_used.helper.5$$t(qubit).417.exit"
  tail call void @panic(i32 1001, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @e_ArrayIter..ED8B8605.0, i64 0, i64 0))
  unreachable
}

declare i64 @___lazy_measure(i64) local_unnamed_addr

declare void @___qfree(i64) local_unnamed_addr

define [10 x { i1, { i1, i64, i1 } }] @"__hugr__.$array.__setitem__.classical.3$$t(bool)$n(10).451"([10 x { i1, { i1, i64, i1 } }] %0, i64 %1, { i1, i64, i1 } %2) local_unnamed_addr {
alloca_block:
  %3 = icmp ult i64 %1, 10
  br i1 %3, label %cond_457_case_1, label %cond_457_case_0

cond_457_case_0:                                  ; preds = %alloca_block
  tail call void @panic(i32 1001, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @"e_Array inde.2A1CB845.0", i64 0, i64 0))
  unreachable

cond_457_case_1:                                  ; preds = %alloca_block
  %4 = insertvalue { i1, { i1, i64, i1 } } { i1 true, { i1, i64, i1 } poison }, { i1, i64, i1 } %2, 1
  %5 = alloca [10 x { i1, { i1, i64, i1 } }], align 8
  %.repack = getelementptr inbounds [10 x { i1, { i1, i64, i1 } }], [10 x { i1, { i1, i64, i1 } }]* %5, i64 0, i64 0
  %.elt = extractvalue [10 x { i1, { i1, i64, i1 } }] %0, 0
  store { i1, { i1, i64, i1 } } %.elt, { i1, { i1, i64, i1 } }* %.repack, align 8
  %.repack229 = getelementptr inbounds [10 x { i1, { i1, i64, i1 } }], [10 x { i1, { i1, i64, i1 } }]* %5, i64 0, i64 1
  %.elt230 = extractvalue [10 x { i1, { i1, i64, i1 } }] %0, 1
  store { i1, { i1, i64, i1 } } %.elt230, { i1, { i1, i64, i1 } }* %.repack229, align 8
  %.repack231 = getelementptr inbounds [10 x { i1, { i1, i64, i1 } }], [10 x { i1, { i1, i64, i1 } }]* %5, i64 0, i64 2
  %.elt232 = extractvalue [10 x { i1, { i1, i64, i1 } }] %0, 2
  store { i1, { i1, i64, i1 } } %.elt232, { i1, { i1, i64, i1 } }* %.repack231, align 8
  %.repack233 = getelementptr inbounds [10 x { i1, { i1, i64, i1 } }], [10 x { i1, { i1, i64, i1 } }]* %5, i64 0, i64 3
  %.elt234 = extractvalue [10 x { i1, { i1, i64, i1 } }] %0, 3
  store { i1, { i1, i64, i1 } } %.elt234, { i1, { i1, i64, i1 } }* %.repack233, align 8
  %.repack235 = getelementptr inbounds [10 x { i1, { i1, i64, i1 } }], [10 x { i1, { i1, i64, i1 } }]* %5, i64 0, i64 4
  %.elt236 = extractvalue [10 x { i1, { i1, i64, i1 } }] %0, 4
  store { i1, { i1, i64, i1 } } %.elt236, { i1, { i1, i64, i1 } }* %.repack235, align 8
  %.repack237 = getelementptr inbounds [10 x { i1, { i1, i64, i1 } }], [10 x { i1, { i1, i64, i1 } }]* %5, i64 0, i64 5
  %.elt238 = extractvalue [10 x { i1, { i1, i64, i1 } }] %0, 5
  store { i1, { i1, i64, i1 } } %.elt238, { i1, { i1, i64, i1 } }* %.repack237, align 8
  %.repack239 = getelementptr inbounds [10 x { i1, { i1, i64, i1 } }], [10 x { i1, { i1, i64, i1 } }]* %5, i64 0, i64 6
  %.elt240 = extractvalue [10 x { i1, { i1, i64, i1 } }] %0, 6
  store { i1, { i1, i64, i1 } } %.elt240, { i1, { i1, i64, i1 } }* %.repack239, align 8
  %.repack241 = getelementptr inbounds [10 x { i1, { i1, i64, i1 } }], [10 x { i1, { i1, i64, i1 } }]* %5, i64 0, i64 7
  %.elt242 = extractvalue [10 x { i1, { i1, i64, i1 } }] %0, 7
  store { i1, { i1, i64, i1 } } %.elt242, { i1, { i1, i64, i1 } }* %.repack241, align 8
  %.repack243 = getelementptr inbounds [10 x { i1, { i1, i64, i1 } }], [10 x { i1, { i1, i64, i1 } }]* %5, i64 0, i64 8
  %.elt244 = extractvalue [10 x { i1, { i1, i64, i1 } }] %0, 8
  store { i1, { i1, i64, i1 } } %.elt244, { i1, { i1, i64, i1 } }* %.repack243, align 8
  %.repack245 = getelementptr inbounds [10 x { i1, { i1, i64, i1 } }], [10 x { i1, { i1, i64, i1 } }]* %5, i64 0, i64 9
  %.elt246 = extractvalue [10 x { i1, { i1, i64, i1 } }] %0, 9
  store { i1, { i1, i64, i1 } } %.elt246, { i1, { i1, i64, i1 } }* %.repack245, align 8
  %6 = getelementptr inbounds [10 x { i1, { i1, i64, i1 } }], [10 x { i1, { i1, i64, i1 } }]* %5, i64 0, i64 %1
  %7 = load { i1, { i1, i64, i1 } }, { i1, { i1, i64, i1 } }* %6, align 8
  store { i1, { i1, i64, i1 } } %4, { i1, { i1, i64, i1 } }* %6, align 8
  %.unpack = load { i1, { i1, i64, i1 } }, { i1, { i1, i64, i1 } }* %.repack, align 8
  %.unpack249 = load { i1, { i1, i64, i1 } }, { i1, { i1, i64, i1 } }* %.repack229, align 8
  %.unpack251 = load { i1, { i1, i64, i1 } }, { i1, { i1, i64, i1 } }* %.repack231, align 8
  %.unpack253 = load { i1, { i1, i64, i1 } }, { i1, { i1, i64, i1 } }* %.repack233, align 8
  %.unpack255 = load { i1, { i1, i64, i1 } }, { i1, { i1, i64, i1 } }* %.repack235, align 8
  %.unpack257 = load { i1, { i1, i64, i1 } }, { i1, { i1, i64, i1 } }* %.repack237, align 8
  %.unpack259 = load { i1, { i1, i64, i1 } }, { i1, { i1, i64, i1 } }* %.repack239, align 8
  %.unpack261 = load { i1, { i1, i64, i1 } }, { i1, { i1, i64, i1 } }* %.repack241, align 8
  %.unpack263 = load { i1, { i1, i64, i1 } }, { i1, { i1, i64, i1 } }* %.repack243, align 8
  %.unpack265 = load { i1, { i1, i64, i1 } }, { i1, { i1, i64, i1 } }* %.repack245, align 8
  %.fca.1.0.extract87 = extractvalue { i1, { i1, i64, i1 } } %7, 0
  %.fca.1.1.0.extract88 = extractvalue { i1, { i1, i64, i1 } } %7, 1, 0
  %8 = select i1 %.fca.1.0.extract87, i1 %.fca.1.1.0.extract88, i1 false
  br i1 %8, label %cond_232_case_1, label %cond_exit_172

cond_232_case_1:                                  ; preds = %cond_457_case_1
  %.fca.1.1.1.extract89 = extractvalue { i1, { i1, i64, i1 } } %7, 1, 1
  tail call void @___dec_future_refcount(i64 %.fca.1.1.1.extract89)
  br label %cond_exit_172

cond_exit_172:                                    ; preds = %cond_457_case_1, %cond_232_case_1
  %.fca.2.9.1.2.extract = extractvalue { i1, { i1, i64, i1 } } %.unpack265, 1, 2
  %.fca.2.9.1.1.extract = extractvalue { i1, { i1, i64, i1 } } %.unpack265, 1, 1
  %.fca.2.9.1.0.extract = extractvalue { i1, { i1, i64, i1 } } %.unpack265, 1, 0
  %.fca.2.9.0.extract = extractvalue { i1, { i1, i64, i1 } } %.unpack265, 0
  %.fca.2.8.1.2.extract = extractvalue { i1, { i1, i64, i1 } } %.unpack263, 1, 2
  %.fca.2.8.1.1.extract = extractvalue { i1, { i1, i64, i1 } } %.unpack263, 1, 1
  %.fca.2.8.1.0.extract = extractvalue { i1, { i1, i64, i1 } } %.unpack263, 1, 0
  %.fca.2.8.0.extract = extractvalue { i1, { i1, i64, i1 } } %.unpack263, 0
  %.fca.2.7.1.2.extract = extractvalue { i1, { i1, i64, i1 } } %.unpack261, 1, 2
  %.fca.2.7.1.1.extract = extractvalue { i1, { i1, i64, i1 } } %.unpack261, 1, 1
  %.fca.2.7.1.0.extract = extractvalue { i1, { i1, i64, i1 } } %.unpack261, 1, 0
  %.fca.2.7.0.extract = extractvalue { i1, { i1, i64, i1 } } %.unpack261, 0
  %.fca.2.6.1.2.extract = extractvalue { i1, { i1, i64, i1 } } %.unpack259, 1, 2
  %.fca.2.6.1.1.extract = extractvalue { i1, { i1, i64, i1 } } %.unpack259, 1, 1
  %.fca.2.6.1.0.extract = extractvalue { i1, { i1, i64, i1 } } %.unpack259, 1, 0
  %.fca.2.6.0.extract = extractvalue { i1, { i1, i64, i1 } } %.unpack259, 0
  %.fca.2.5.1.2.extract = extractvalue { i1, { i1, i64, i1 } } %.unpack257, 1, 2
  %.fca.2.5.1.1.extract = extractvalue { i1, { i1, i64, i1 } } %.unpack257, 1, 1
  %.fca.2.5.1.0.extract = extractvalue { i1, { i1, i64, i1 } } %.unpack257, 1, 0
  %.fca.2.5.0.extract = extractvalue { i1, { i1, i64, i1 } } %.unpack257, 0
  %.fca.2.4.1.2.extract = extractvalue { i1, { i1, i64, i1 } } %.unpack255, 1, 2
  %.fca.2.4.1.1.extract = extractvalue { i1, { i1, i64, i1 } } %.unpack255, 1, 1
  %.fca.2.4.1.0.extract = extractvalue { i1, { i1, i64, i1 } } %.unpack255, 1, 0
  %.fca.2.4.0.extract = extractvalue { i1, { i1, i64, i1 } } %.unpack255, 0
  %.fca.2.3.1.2.extract = extractvalue { i1, { i1, i64, i1 } } %.unpack253, 1, 2
  %.fca.2.3.1.1.extract = extractvalue { i1, { i1, i64, i1 } } %.unpack253, 1, 1
  %.fca.2.3.1.0.extract = extractvalue { i1, { i1, i64, i1 } } %.unpack253, 1, 0
  %.fca.2.3.0.extract = extractvalue { i1, { i1, i64, i1 } } %.unpack253, 0
  %.fca.2.2.1.2.extract = extractvalue { i1, { i1, i64, i1 } } %.unpack251, 1, 2
  %.fca.2.2.1.1.extract = extractvalue { i1, { i1, i64, i1 } } %.unpack251, 1, 1
  %.fca.2.2.1.0.extract = extractvalue { i1, { i1, i64, i1 } } %.unpack251, 1, 0
  %.fca.2.2.0.extract = extractvalue { i1, { i1, i64, i1 } } %.unpack251, 0
  %.fca.2.1.1.2.extract = extractvalue { i1, { i1, i64, i1 } } %.unpack249, 1, 2
  %.fca.2.1.1.1.extract = extractvalue { i1, { i1, i64, i1 } } %.unpack249, 1, 1
  %.fca.2.1.1.0.extract = extractvalue { i1, { i1, i64, i1 } } %.unpack249, 1, 0
  %.fca.2.1.0.extract91 = extractvalue { i1, { i1, i64, i1 } } %.unpack249, 0
  %.fca.2.0.1.2.extract = extractvalue { i1, { i1, i64, i1 } } %.unpack, 1, 2
  %.fca.2.0.1.1.extract = extractvalue { i1, { i1, i64, i1 } } %.unpack, 1, 1
  %.fca.2.0.1.0.extract = extractvalue { i1, { i1, i64, i1 } } %.unpack, 1, 0
  %.fca.2.0.0.extract = extractvalue { i1, { i1, i64, i1 } } %.unpack, 0
  %9 = insertvalue [10 x { i1, { i1, i64, i1 } }] poison, i1 %.fca.2.0.0.extract, 0, 0
  %10 = insertvalue [10 x { i1, { i1, i64, i1 } }] %9, i1 %.fca.2.0.1.0.extract, 0, 1, 0
  %11 = insertvalue [10 x { i1, { i1, i64, i1 } }] %10, i64 %.fca.2.0.1.1.extract, 0, 1, 1
  %12 = insertvalue [10 x { i1, { i1, i64, i1 } }] %11, i1 %.fca.2.0.1.2.extract, 0, 1, 2
  %13 = insertvalue [10 x { i1, { i1, i64, i1 } }] %12, i1 %.fca.2.1.0.extract91, 1, 0
  %14 = insertvalue [10 x { i1, { i1, i64, i1 } }] %13, i1 %.fca.2.1.1.0.extract, 1, 1, 0
  %15 = insertvalue [10 x { i1, { i1, i64, i1 } }] %14, i64 %.fca.2.1.1.1.extract, 1, 1, 1
  %16 = insertvalue [10 x { i1, { i1, i64, i1 } }] %15, i1 %.fca.2.1.1.2.extract, 1, 1, 2
  %17 = insertvalue [10 x { i1, { i1, i64, i1 } }] %16, i1 %.fca.2.2.0.extract, 2, 0
  %18 = insertvalue [10 x { i1, { i1, i64, i1 } }] %17, i1 %.fca.2.2.1.0.extract, 2, 1, 0
  %19 = insertvalue [10 x { i1, { i1, i64, i1 } }] %18, i64 %.fca.2.2.1.1.extract, 2, 1, 1
  %20 = insertvalue [10 x { i1, { i1, i64, i1 } }] %19, i1 %.fca.2.2.1.2.extract, 2, 1, 2
  %21 = insertvalue [10 x { i1, { i1, i64, i1 } }] %20, i1 %.fca.2.3.0.extract, 3, 0
  %22 = insertvalue [10 x { i1, { i1, i64, i1 } }] %21, i1 %.fca.2.3.1.0.extract, 3, 1, 0
  %23 = insertvalue [10 x { i1, { i1, i64, i1 } }] %22, i64 %.fca.2.3.1.1.extract, 3, 1, 1
  %24 = insertvalue [10 x { i1, { i1, i64, i1 } }] %23, i1 %.fca.2.3.1.2.extract, 3, 1, 2
  %25 = insertvalue [10 x { i1, { i1, i64, i1 } }] %24, i1 %.fca.2.4.0.extract, 4, 0
  %26 = insertvalue [10 x { i1, { i1, i64, i1 } }] %25, i1 %.fca.2.4.1.0.extract, 4, 1, 0
  %27 = insertvalue [10 x { i1, { i1, i64, i1 } }] %26, i64 %.fca.2.4.1.1.extract, 4, 1, 1
  %28 = insertvalue [10 x { i1, { i1, i64, i1 } }] %27, i1 %.fca.2.4.1.2.extract, 4, 1, 2
  %29 = insertvalue [10 x { i1, { i1, i64, i1 } }] %28, i1 %.fca.2.5.0.extract, 5, 0
  %30 = insertvalue [10 x { i1, { i1, i64, i1 } }] %29, i1 %.fca.2.5.1.0.extract, 5, 1, 0
  %31 = insertvalue [10 x { i1, { i1, i64, i1 } }] %30, i64 %.fca.2.5.1.1.extract, 5, 1, 1
  %32 = insertvalue [10 x { i1, { i1, i64, i1 } }] %31, i1 %.fca.2.5.1.2.extract, 5, 1, 2
  %33 = insertvalue [10 x { i1, { i1, i64, i1 } }] %32, i1 %.fca.2.6.0.extract, 6, 0
  %34 = insertvalue [10 x { i1, { i1, i64, i1 } }] %33, i1 %.fca.2.6.1.0.extract, 6, 1, 0
  %35 = insertvalue [10 x { i1, { i1, i64, i1 } }] %34, i64 %.fca.2.6.1.1.extract, 6, 1, 1
  %36 = insertvalue [10 x { i1, { i1, i64, i1 } }] %35, i1 %.fca.2.6.1.2.extract, 6, 1, 2
  %37 = insertvalue [10 x { i1, { i1, i64, i1 } }] %36, i1 %.fca.2.7.0.extract, 7, 0
  %38 = insertvalue [10 x { i1, { i1, i64, i1 } }] %37, i1 %.fca.2.7.1.0.extract, 7, 1, 0
  %39 = insertvalue [10 x { i1, { i1, i64, i1 } }] %38, i64 %.fca.2.7.1.1.extract, 7, 1, 1
  %40 = insertvalue [10 x { i1, { i1, i64, i1 } }] %39, i1 %.fca.2.7.1.2.extract, 7, 1, 2
  %41 = insertvalue [10 x { i1, { i1, i64, i1 } }] %40, i1 %.fca.2.8.0.extract, 8, 0
  %42 = insertvalue [10 x { i1, { i1, i64, i1 } }] %41, i1 %.fca.2.8.1.0.extract, 8, 1, 0
  %43 = insertvalue [10 x { i1, { i1, i64, i1 } }] %42, i64 %.fca.2.8.1.1.extract, 8, 1, 1
  %44 = insertvalue [10 x { i1, { i1, i64, i1 } }] %43, i1 %.fca.2.8.1.2.extract, 8, 1, 2
  %45 = insertvalue [10 x { i1, { i1, i64, i1 } }] %44, i1 %.fca.2.9.0.extract, 9, 0
  %46 = insertvalue [10 x { i1, { i1, i64, i1 } }] %45, i1 %.fca.2.9.1.0.extract, 9, 1, 0
  %47 = insertvalue [10 x { i1, { i1, i64, i1 } }] %46, i64 %.fca.2.9.1.1.extract, 9, 1, 1
  %48 = insertvalue [10 x { i1, { i1, i64, i1 } }] %47, i1 %.fca.2.9.1.2.extract, 9, 1, 2
  ret [10 x { i1, { i1, i64, i1 } }] %48
}

define {} @"__hugr__.$ArrayIter._assert_all_used.helper.5$$t(qubit).417"({ i1, i64 } %0) local_unnamed_addr {
alloca_block:
  %.fca.0.extract = extractvalue { i1, i64 } %0, 0
  br i1 %.fca.0.extract, label %cond_420_case_1, label %cond_exit_420

cond_420_case_1:                                  ; preds = %alloca_block
  tail call void @panic(i32 1001, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @e_ArrayIter..ED8B8605.0, i64 0, i64 0))
  unreachable

cond_exit_420:                                    ; preds = %alloca_block
  ret {} undef
}

declare i64 @___qalloc() local_unnamed_addr

declare void @___reset(i64) local_unnamed_addr

declare void @___rxy(i64, double, double) local_unnamed_addr

define i64 @qmain(i64 %0) local_unnamed_addr {
entry:
  tail call void @setup(i64 %0)
  tail call void @__hugr__.main.1()
  %1 = tail call i64 @teardown()
  ret i64 %1
}

declare void @setup(i64) local_unnamed_addr

declare i64 @teardown() local_unnamed_addr

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { mustprogress nofree norecurse nosync nounwind readnone willreturn }
attributes #1 = { noreturn }
attributes #2 = { argmemonly nofree nounwind willreturn writeonly }

!name = !{!0}

!0 = !{!"mainlib"}
